syntax = "proto3";

option go_package = "github.com/ukama/ukama/systems/ukama-agent/cdr/pb/gen";

package ukama.ukamaagent.cdr.v1;

import "validator.proto";


  service CDRService {

    /// Add new CDR to the database
    rpc PostCDR(CDR) returns (CDRResp);
    
    /// Get CDR from the database
    rpc GetCDR(RecordReq) returns (RecordResp);

    /// Get Usage for the subscriber current package
    rpc GetUsage(UsageReq) returns (UsageResp); 

    /// Get Usage for the subscriber current package
    rpc GetUsageForPeriod(UsageForPeriodReq) returns (UsageForPeriodResp); 
   
     /// Get Usage detsilsfor the subscriber current cycle
     rpc GetUsageDetails(CycleUsageReq) returns (CycleUsageResp); 
}

message CDR {
    uint64 Session =1  [json_name="session_id"];
    string NodeId = 2 [json_name="node_id"];
    string Imsi = 3 [(validator.field) = { string_not_empty: true,  length_gt: 5, length_lt: 16 }, json_name="imsi"];
    string Policy = 4 [json_name="policy"];
    string ApnName = 5  [json_name="apn_name"];
    string Ip = 6 [json_name="ue_ip"];
    uint64 StartTime = 7 [json_name="start_time"];
    uint64 EndTime = 8 [json_name="end_time"];
    uint64 LastUpdatedAt = 9 [json_name="last_updated_at"];
    uint64 TxBytes = 10 [json_name="tx_bytes"];
    uint64 RxBytes = 11  [ json_name="rx_bytes"];
    uint64 TotalBytes =12 [json_name= "total_bytes"];
}

message CDRResp {
 
}

message RecordReq {
    string Imsi = 1 [(validator.field) = { string_not_empty: true,  length_gt: 5, length_lt: 16 }, json_name="imsi"];
    uint64 StartTime = 2 [json_name="start_time"];
    uint64 EndTime = 3 [json_name="end_time"];
    string Policy = 4 [json_name="policy"];
    uint64 SessionId = 5 [json_name="session_id"];
}

message RecordResp {
    repeated CDR cdr = 1 [json_name="cdrs"];
}

message UsageReq {
    string Imsi = 1 [(validator.field) = { string_not_empty: true,  length_gt: 5, length_lt: 16 }, json_name="imsi"];
    uint64 StartTime = 2 [json_name="start_time"];
    uint64 EndTime = 3 [json_name="end_time"];
    string Policy = 4 [json_name="policy"];
    uint64 SessionId = 5 [json_name="session_id"];
}

message UsageResp {
    string Imsi = 1 [(validator.field) = { string_not_empty: true,  length_gt: 5, length_lt: 16 }, json_name="imsi"];
    uint64 usage = 2;
    string policy = 3;
}

message CycleUsageReq {
    string Imsi = 1 [(validator.field) = { string_not_empty: true,  length_gt: 5, length_lt: 16 }, json_name="imsi"];
}

message CycleUsageResp {
    string Imsi = 1 [(validator.field) = { string_not_empty: true,  length_gt: 5, length_lt: 16 }, json_name="imsi"];
    uint64 historical = 2;
    uint64 usage = 3;
    uint64 LastSessionUsage = 4;
    uint64 LastSessionId = 5;
    string lastNodeId = 6;
    uint64 LastCDRUpdatedAt = 7;
    string Policy = 8;
}

message UsageForPeriodReq {
    string Imsi = 1 [(validator.field) = { string_not_empty: true,  length_gt: 5, length_lt: 16 }, json_name="imsi"];
    uint64 StartTime = 4;
    uint64 EndTime = 5;
}

message UsageForPeriodResp {
  uint64 Usage = 1;
}
