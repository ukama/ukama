syntax = "proto3";

option go_package = "pb/gen";

package ukama.ukama_agent.profile.v1;

import "validator.proto";

/* Profile registry maintains the record of all the active subscribers of a organization and thier config based on the active package id.
  Profile also provide the input to policy control for enforcing the policies.
  Initial implementation of Profile service itself will handle the policy control.   
  
  RPC exposed by Profile
    - Add
    - Remove
    - UpdatePackage
    - UpdateUsage
    - Sync
    - Read
  */
  service ProfileService {

    /// Use this RPC to add a new subscriber profile 
    rpc Add(AddReq) returns (AddResp);
    
    /// Use this RPC to remove a subscriber profile
    rpc Remove(RemoveReq) returns (RemoveResp);

    /// Use this RPC to update a active package of the subscriber
    rpc UpdatePackage(UpdatePackageReq) returns (UpdatePackageResp); 

    /// Use this RPC to update a usage of the subscriber 
    rpc UpdateUsage(UpdateUsageReq) returns (UpdateUsageResp); 
     
    ///  Use this RPC to sync records from cloud to node profile registry 
    rpc Sync(SyncReq) returns (SyncResp);
  
    /// This RPC is used to read the active profiles
    rpc Read(ReadReq) returns (ReadResp);
}


message Profile {
    string Imsi = 1 [(validator.field) = { string_not_empty: true,  length_gt: 5, length_lt: 16 }, json_name="imsi"];
    string Iccid = 2 [(validator.field) = { string_not_empty: true,  length_gt: 5, length_lt: 22}, json_name="iccid"];
    uint64 UeDlBps = 3 [(validator.field) = {int_gt: 0}, json_name="ue_dl_bps"];
    uint64 UeUlBps = 4 [(validator.field) = {int_gt: 0}, json_name="ue_ul_bps"];
    Apn Apn = 5 [json_name="apn"];
    string NetworkId = 6 [(validator.field) = {uuid_ver: 4, string_not_empty: true}, json_name="network_id"];
    string PackageId = 7 [(validator.field) = {uuid_ver: 4, string_not_empty: true}, json_name="package_id"];
    int64 AllowedTimeOfService = 8 [(validator.field) = {int_gt: 0}, json_name="allowed_time_of_service"]; 
    uint64 TotalDataBytes = 9 [(validator.field) = {int_gt: 0}, json_name="total_data_bytes"];
    uint64 ConsumedDataBytes = 10 [json_name="consumed_data_bytes"];
    int64 UpdatedAt=11 [json_name="updated_at"];
    string LastChange=12 [json_name="last_change"];
    int64 LastChangeAt=13 [json_name="last_change_at"];
}

message Apn {
    string Name = 1 [(validator.field) = {string_not_empty: true,  length_gt: 0, length_lt: 30}, json_name="name"];
}

message Package {
    uint64 UeDlBps = 1 [(validator.field) = {int_gt: 0}, json_name="ue_dl_bps"];
    uint64 UeUlBps = 2 [(validator.field) = {int_gt: 0}, json_name="ue_ul_bps"];
    Apn apn = 3 [json_name="apn"];
    string PackageId = 4 [(validator.field) = {uuid_ver: 4, string_not_empty: true}, json_name="package_id"];
    int64 AllowedTimeOfService = 5 [(validator.field) = {int_gt: 0}, json_name="allowed_time_of_service"];
    uint64 TotalDataBytes = 6 [(validator.field) = {int_gt: 0}, json_name="available_data_bytes"];
    uint64 ConsumedDataBytes = 7 [json_name="consumed_data_bytes"];
}

message ReadReq {
    oneof id {
        string Imsi = 1 [(validator.field) = { string_not_empty: true,  length_gt: 5, length_lt: 16}]; ///oneof
        string Iccid = 2 [(validator.field) = {string_not_empty: true, length_gt: 18, length_lt: 22}]; ///oneof
    }
}

message ReadResp {
    Profile Profile = 1;
}
message AddReq {
  Profile Profile = 1[(validator.field) = {msg_exists : true}, json_name="profile"]; 
}

message AddResp {
    ///Empty 
}

/* Could be called by subscriber manager with ICCID and by billing service with imsi */ 
message RemoveReq {
    oneof id {
        string Imsi = 1 [(validator.field) = { string_not_empty: true,  length_gt: 5, length_lt: 16}]; /// oneof
        string Iccid = 2 [(validator.field) = {string_not_empty: true, length_gt: 18, length_lt: 22}]; ///oneof
    }
}

message RemoveResp {
    ///Empty 
}

message UpdatePackageReq {
    string Iccid = 1 [(validator.field) = { string_not_empty: true,  length_gt: 18, length_lt: 22}, json_name="iccid"];
    Package Package = 2[(validator.field) = {msg_exists : true}, json_name="package"]; 
}

message UpdatePackageResp {
    ///Empty
}

message SyncReq {
    repeated string Iccid = 1 [(validator.field) = { string_not_empty: true,  length_gt: 5, length_lt: 22 msg_exists : true}, json_name="iccids"];
}

message SyncResp {
    repeated string Iccid = 1 [(validator.field) = { string_not_empty: true,  length_gt: 5, length_lt: 22, msg_exists : true}, json_name="iccids"];
}

message UpdateUsageReq {
    string Imsi = 1 [(validator.field) = { string_not_empty: true,  length_gt: 5, length_lt: 16}, json_name="imsi"];
    uint64 ConsumedDataBytes = 10 [json_name="consumed_data_bytes"];
}

message UpdateUsageResp {
   
}