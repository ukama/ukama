// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	db "github.com/ukama/ukama/systems/ukama-agent/profile/pkg/db"

	policy "github.com/ukama/ukama/systems/ukama-agent/profile/pkg/policy"
)

// ActionFunc is an autogenerated mock type for the ActionFunc type
type ActionFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: pc, pf
func (_m *ActionFunc) Execute(pc *policy.PolicyController, pf db.Profile) (error, bool) {
	ret := _m.Called(pc, pf)

	var r0 error
	if rf, ok := ret.Get(0).(func(*policy.PolicyController, db.Profile) error); ok {
		r0 = rf(pc, pf)
	} else {
		r0 = ret.Error(0)
	}

	var r1 bool
	if rf, ok := ret.Get(1).(func(*policy.PolicyController, db.Profile) bool); ok {
		r1 = rf(pc, pf)
	} else {
		r1 = ret.Get(1).(bool)
	}

	return r0, r1
}

type mockConstructorTestingTNewActionFunc interface {
	mock.TestingT
	Cleanup(func())
}

// NewActionFunc creates a new instance of ActionFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewActionFunc(t mockConstructorTestingTNewActionFunc) *ActionFunc {
	mock := &ActionFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
