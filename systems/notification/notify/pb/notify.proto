syntax="proto3";

option go_package = "github.com/ukama/ukama/systems/notification/notify/pb/gen";

import "validator.proto";
import "google/protobuf/timestamp.proto";

package ukama.notification.notify.v1;


service NotifyService {
    rpc Add(AddRequest) returns (AddResponse);
    rpc Get(GetRequest) returns (GetResponse);
    rpc List(ListRequest) returns (ListResponse);
    rpc Delete(GetRequest) returns (DeleteResponse);
    rpc Purge(PurgeRequest) returns (ListResponse);
}


message AddRequest {
    string nodeId = 1 [json_name = "node_id"];
    string description = 2;
    string severity = 3;
    string type = 4;
    string serviceName = 5 [json_name = "service_name"];
    uint32 status = 6;
    uint32 epochTime = 7 [json_name = "time"];
    string details = 8;
}

message AddResponse {
    Notification notification = 1;
}


message GetRequest {
    string notificationId = 1 [(validator.field) = {uuid_ver: 4, string_not_empty: true}, json_name = "notification_id"];
}

message GetResponse {
    Notification notification = 1;
}


message ListRequest {
    string nodeId = 1 [json_name = "node_id"];
    string serviceName = 2 [json_name = "service_name"];
    string type = 3;
    uint32 count = 4;
    bool sort = 5;
}

message ListResponse {
    repeated Notification notifications = 1;
}


message DeleteResponse {
}


message PurgeRequest {
    string nodeId = 1 [json_name = "node_id"];
    string serviceName = 2 [json_name = "service_name"];
    string type = 3;
}


message Notification {
    string id = 1 [(validator.field) = {uuid_ver: 4, string_not_empty: true}, json_name = "id"];
    string nodeId = 2 [json_name = "node_id"];
    string nodeType = 3 [json_name = "node_type"];;
    string description = 4;
    string severity = 5;
    string type = 6;
    string serviceName = 7 [json_name = "service_name"];
    uint32 status = 8;
    uint32 epochTime = 9 [json_name = "time"];
    string details = 10;
    google.protobuf.Timestamp createdAt = 11 [json_name = "stored_at"];
}
