// Code generated by mockery v2.30.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	db "github.com/ukama/ukama/systems/notification/mailer/pkg/db"
)

// MaillingRepo is an autogenerated mock type for the MaillingRepo type
type MaillingRepo struct {
	mock.Mock
}

// SendEmail provides a mock function with given fields: mail
func (_m *MaillingRepo) SendEmail(mail *db.Mailing) error {
	ret := _m.Called(mail)

	var r0 error
	if rf, ok := ret.Get(0).(func(*db.Mailing) error); ok {
		r0 = rf(mail)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMaillingRepo creates a new instance of MaillingRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMaillingRepo(t interface {
	mock.TestingT
	Cleanup(func())
}) *MaillingRepo {
	mock := &MaillingRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
