//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.
//
// Copyright (c) 2023-present, Ukama Inc.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.12.4
// source: artifact.proto

package gen

import (
	_ "github.com/mwitkow/go-proto-validators"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	_ "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ArtifactType int32

const (
	ArtifactType_INVALIDART ArtifactType = 0
	ArtifactType_CAPPART    ArtifactType = 1
)

// Enum value maps for ArtifactType.
var (
	ArtifactType_name = map[int32]string{
		0: "INVALIDART",
		1: "CAPPART",
	}
	ArtifactType_value = map[string]int32{
		"INVALIDART": 0,
		"CAPPART":    1,
	}
)

func (x ArtifactType) Enum() *ArtifactType {
	p := new(ArtifactType)
	*p = x
	return p
}

func (x ArtifactType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArtifactType) Descriptor() protoreflect.EnumDescriptor {
	return file_artifact_proto_enumTypes[0].Descriptor()
}

func (ArtifactType) Type() protoreflect.EnumType {
	return &file_artifact_proto_enumTypes[0]
}

func (x ArtifactType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArtifactType.Descriptor instead.
func (ArtifactType) EnumDescriptor() ([]byte, []int) {
	return file_artifact_proto_rawDescGZIP(), []int{0}
}

type ExtraInfoMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ExtraInfoMap) Reset() {
	*x = ExtraInfoMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifact_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtraInfoMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtraInfoMap) ProtoMessage() {}

func (x *ExtraInfoMap) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtraInfoMap.ProtoReflect.Descriptor instead.
func (*ExtraInfoMap) Descriptor() ([]byte, []int) {
	return file_artifact_proto_rawDescGZIP(), []int{0}
}

func (x *ExtraInfoMap) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ExtraInfoMap) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type FormatInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      string                 `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Url       string                 `protobuf:"bytes,2,opt,name=Url,proto3" json:"Url,omitempty"`
	Size      int64                  `protobuf:"varint,3,opt,name=Size,proto3" json:"Size,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ExtraInfo []*ExtraInfoMap        `protobuf:"bytes,5,rep,name=ExtraInfo,proto3" json:"ExtraInfo,omitempty"`
}

func (x *FormatInfo) Reset() {
	*x = FormatInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifact_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormatInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormatInfo) ProtoMessage() {}

func (x *FormatInfo) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormatInfo.ProtoReflect.Descriptor instead.
func (*FormatInfo) Descriptor() ([]byte, []int) {
	return file_artifact_proto_rawDescGZIP(), []int{1}
}

func (x *FormatInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *FormatInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *FormatInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FormatInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *FormatInfo) GetExtraInfo() []*ExtraInfoMap {
	if x != nil {
		return x.ExtraInfo
	}
	return nil
}

type VersionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string        `protobuf:"bytes,1,opt,name=Version,json=version,proto3" json:"Version,omitempty"`
	Formats []*FormatInfo `protobuf:"bytes,2,rep,name=Formats,json=FormatInfo,proto3" json:"Formats,omitempty"`
}

func (x *VersionInfo) Reset() {
	*x = VersionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifact_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionInfo) ProtoMessage() {}

func (x *VersionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionInfo.ProtoReflect.Descriptor instead.
func (*VersionInfo) Descriptor() ([]byte, []int) {
	return file_artifact_proto_rawDescGZIP(), []int{2}
}

func (x *VersionInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *VersionInfo) GetFormats() []*FormatInfo {
	if x != nil {
		return x.Formats
	}
	return nil
}

type StoreArtifactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string       `protobuf:"bytes,1,opt,name=Name,json=name,proto3" json:"Name,omitempty"`
	Type    ArtifactType `protobuf:"varint,2,opt,name=Type,json=type,proto3,enum=ukama.hub.artifactmanager.v1.ArtifactType" json:"Type,omitempty"`
	Version string       `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Data    []byte       `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *StoreArtifactRequest) Reset() {
	*x = StoreArtifactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifact_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreArtifactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreArtifactRequest) ProtoMessage() {}

func (x *StoreArtifactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreArtifactRequest.ProtoReflect.Descriptor instead.
func (*StoreArtifactRequest) Descriptor() ([]byte, []int) {
	return file_artifact_proto_rawDescGZIP(), []int{3}
}

func (x *StoreArtifactRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StoreArtifactRequest) GetType() ArtifactType {
	if x != nil {
		return x.Type
	}
	return ArtifactType_INVALIDART
}

func (x *StoreArtifactRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *StoreArtifactRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type StoreArtifactResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string       `protobuf:"bytes,1,opt,name=Name,json=name,proto3" json:"Name,omitempty"`
	Type ArtifactType `protobuf:"varint,2,opt,name=Type,json=type,proto3,enum=ukama.hub.artifactmanager.v1.ArtifactType" json:"Type,omitempty"`
}

func (x *StoreArtifactResponse) Reset() {
	*x = StoreArtifactResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifact_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreArtifactResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreArtifactResponse) ProtoMessage() {}

func (x *StoreArtifactResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreArtifactResponse.ProtoReflect.Descriptor instead.
func (*StoreArtifactResponse) Descriptor() ([]byte, []int) {
	return file_artifact_proto_rawDescGZIP(), []int{4}
}

func (x *StoreArtifactResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StoreArtifactResponse) GetType() ArtifactType {
	if x != nil {
		return x.Type
	}
	return ArtifactType_INVALIDART
}

type GetArtifactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string       `protobuf:"bytes,1,opt,name=Name,json=name,proto3" json:"Name,omitempty"`
	Type     ArtifactType `protobuf:"varint,2,opt,name=Type,json=type,proto3,enum=ukama.hub.artifactmanager.v1.ArtifactType" json:"Type,omitempty"`
	FileName string       `protobuf:"bytes,3,opt,name=FileName,json=version,proto3" json:"FileName,omitempty"`
}

func (x *GetArtifactRequest) Reset() {
	*x = GetArtifactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifact_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtifactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtifactRequest) ProtoMessage() {}

func (x *GetArtifactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtifactRequest.ProtoReflect.Descriptor instead.
func (*GetArtifactRequest) Descriptor() ([]byte, []int) {
	return file_artifact_proto_rawDescGZIP(), []int{5}
}

func (x *GetArtifactRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetArtifactRequest) GetType() ArtifactType {
	if x != nil {
		return x.Type
	}
	return ArtifactType_INVALIDART
}

func (x *GetArtifactRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type GetArtifactResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string       `protobuf:"bytes,1,opt,name=Name,json=name,proto3" json:"Name,omitempty"`
	Type     ArtifactType `protobuf:"varint,2,opt,name=Type,json=type,proto3,enum=ukama.hub.artifactmanager.v1.ArtifactType" json:"Type,omitempty"`
	Version  string       `protobuf:"bytes,3,opt,name=version,json=version_info,proto3" json:"version,omitempty"`
	FileName string       `protobuf:"bytes,4,opt,name=FileName,json=filename,proto3" json:"FileName,omitempty"`
	Data     []byte       `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetArtifactResponse) Reset() {
	*x = GetArtifactResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifact_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtifactResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtifactResponse) ProtoMessage() {}

func (x *GetArtifactResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtifactResponse.ProtoReflect.Descriptor instead.
func (*GetArtifactResponse) Descriptor() ([]byte, []int) {
	return file_artifact_proto_rawDescGZIP(), []int{6}
}

func (x *GetArtifactResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetArtifactResponse) GetType() ArtifactType {
	if x != nil {
		return x.Type
	}
	return ArtifactType_INVALIDART
}

func (x *GetArtifactResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetArtifactResponse) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *GetArtifactResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetArtifactLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string       `protobuf:"bytes,1,opt,name=Name,json=name,proto3" json:"Name,omitempty"`
	Type    ArtifactType `protobuf:"varint,2,opt,name=Type,json=type,proto3,enum=ukama.hub.artifactmanager.v1.ArtifactType" json:"Type,omitempty"`
	Version string       `protobuf:"bytes,3,opt,name=Version,json=version,proto3" json:"Version,omitempty"`
}

func (x *GetArtifactLocationRequest) Reset() {
	*x = GetArtifactLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifact_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtifactLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtifactLocationRequest) ProtoMessage() {}

func (x *GetArtifactLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtifactLocationRequest.ProtoReflect.Descriptor instead.
func (*GetArtifactLocationRequest) Descriptor() ([]byte, []int) {
	return file_artifact_proto_rawDescGZIP(), []int{7}
}

func (x *GetArtifactLocationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetArtifactLocationRequest) GetType() ArtifactType {
	if x != nil {
		return x.Type
	}
	return ArtifactType_INVALIDART
}

func (x *GetArtifactLocationRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type GetArtifactLocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string       `protobuf:"bytes,1,opt,name=Name,json=name,proto3" json:"Name,omitempty"`
	Type ArtifactType `protobuf:"varint,2,opt,name=Type,json=type,proto3,enum=ukama.hub.artifactmanager.v1.ArtifactType" json:"Type,omitempty"`
	Url  string       `protobuf:"bytes,3,opt,name=Url,json=url,proto3" json:"Url,omitempty"`
}

func (x *GetArtifactLocationResponse) Reset() {
	*x = GetArtifactLocationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifact_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtifactLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtifactLocationResponse) ProtoMessage() {}

func (x *GetArtifactLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtifactLocationResponse.ProtoReflect.Descriptor instead.
func (*GetArtifactLocationResponse) Descriptor() ([]byte, []int) {
	return file_artifact_proto_rawDescGZIP(), []int{8}
}

func (x *GetArtifactLocationResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetArtifactLocationResponse) GetType() ArtifactType {
	if x != nil {
		return x.Type
	}
	return ArtifactType_INVALIDART
}

func (x *GetArtifactLocationResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetArtifactVersionListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string       `protobuf:"bytes,1,opt,name=Name,json=name,proto3" json:"Name,omitempty"`
	Type     ArtifactType `protobuf:"varint,2,opt,name=Type,json=type,proto3,enum=ukama.hub.artifactmanager.v1.ArtifactType" json:"Type,omitempty"`
	Location string       `protobuf:"bytes,3,opt,name=Location,json=location,proto3" json:"Location,omitempty"`
}

func (x *GetArtifactVersionListRequest) Reset() {
	*x = GetArtifactVersionListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifact_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtifactVersionListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtifactVersionListRequest) ProtoMessage() {}

func (x *GetArtifactVersionListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtifactVersionListRequest.ProtoReflect.Descriptor instead.
func (*GetArtifactVersionListRequest) Descriptor() ([]byte, []int) {
	return file_artifact_proto_rawDescGZIP(), []int{9}
}

func (x *GetArtifactVersionListRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetArtifactVersionListRequest) GetType() ArtifactType {
	if x != nil {
		return x.Type
	}
	return ArtifactType_INVALIDART
}

func (x *GetArtifactVersionListRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type GetArtifactVersionListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string         `protobuf:"bytes,1,opt,name=Name,json=name,proto3" json:"Name,omitempty"`
	Type     ArtifactType   `protobuf:"varint,2,opt,name=Type,json=type,proto3,enum=ukama.hub.artifactmanager.v1.ArtifactType" json:"Type,omitempty"`
	Versions []*VersionInfo `protobuf:"bytes,4,rep,name=Versions,json=versions,proto3" json:"Versions,omitempty"`
}

func (x *GetArtifactVersionListResponse) Reset() {
	*x = GetArtifactVersionListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifact_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtifactVersionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtifactVersionListResponse) ProtoMessage() {}

func (x *GetArtifactVersionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtifactVersionListResponse.ProtoReflect.Descriptor instead.
func (*GetArtifactVersionListResponse) Descriptor() ([]byte, []int) {
	return file_artifact_proto_rawDescGZIP(), []int{10}
}

func (x *GetArtifactVersionListResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetArtifactVersionListResponse) GetType() ArtifactType {
	if x != nil {
		return x.Type
	}
	return ArtifactType_INVALIDART
}

func (x *GetArtifactVersionListResponse) GetVersions() []*VersionInfo {
	if x != nil {
		return x.Versions
	}
	return nil
}

type ListArtifactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type ArtifactType `protobuf:"varint,1,opt,name=Type,json=type,proto3,enum=ukama.hub.artifactmanager.v1.ArtifactType" json:"Type,omitempty"`
}

func (x *ListArtifactRequest) Reset() {
	*x = ListArtifactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifact_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListArtifactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArtifactRequest) ProtoMessage() {}

func (x *ListArtifactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArtifactRequest.ProtoReflect.Descriptor instead.
func (*ListArtifactRequest) Descriptor() ([]byte, []int) {
	return file_artifact_proto_rawDescGZIP(), []int{11}
}

func (x *ListArtifactRequest) GetType() ArtifactType {
	if x != nil {
		return x.Type
	}
	return ArtifactType_INVALIDART
}

type ListArtifactResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Artifact []string `protobuf:"bytes,1,rep,name=artifact,proto3" json:"artifact,omitempty"`
}

func (x *ListArtifactResponse) Reset() {
	*x = ListArtifactResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifact_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListArtifactResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArtifactResponse) ProtoMessage() {}

func (x *ListArtifactResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArtifactResponse.ProtoReflect.Descriptor instead.
func (*ListArtifactResponse) Descriptor() ([]byte, []int) {
	return file_artifact_proto_rawDescGZIP(), []int{12}
}

func (x *ListArtifactResponse) GetArtifact() []string {
	if x != nil {
		return x.Artifact
	}
	return nil
}

var File_artifact_proto protoreflect.FileDescriptor

var file_artifact_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1c, 0x75, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x0f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x36, 0x0a, 0x0c, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x0a, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x48, 0x0a, 0x09,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x75, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x52, 0x09, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x6e, 0x0a, 0x0b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x45, 0x0a, 0x07, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x75, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa9, 0x01, 0x0a, 0x14, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2,
	0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x75, 0x6b, 0x61, 0x6d,
	0x61, 0x2e, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x88, 0x01, 0x01, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x7c, 0x0a, 0x15, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x41, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58,
	0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x75, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x68, 0x75,
	0x62, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x88, 0x01, 0x01, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0x9c, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2a, 0x2e, 0x75, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x07, 0xe2,
	0xdf, 0x1f, 0x03, 0x88, 0x01, 0x01, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x08,
	0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06,
	0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0xd9, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2a, 0x2e, 0x75, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x07, 0xe2,
	0xdf, 0x1f, 0x03, 0x88, 0x01, 0x01, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2,
	0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9b, 0x01, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x75, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x68, 0x75, 0x62,
	0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x88, 0x01, 0x01, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x94, 0x01, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x75, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x68, 0x75, 0x62, 0x2e,
	0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42,
	0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x88, 0x01, 0x01, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x22, 0xa0, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x47,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x75,
	0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x88, 0x01,
	0x01, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xcc, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2a, 0x2e, 0x75, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x07, 0xe2, 0xdf,
	0x1f, 0x03, 0x88, 0x01, 0x01, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x08, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x75, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x5e, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x75, 0x6b, 0x61, 0x6d, 0x61, 0x2e,
	0x68, 0x75, 0x62, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x07, 0xe2, 0xdf, 0x1f, 0x03, 0x88, 0x01, 0x01, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x22, 0x32, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2a, 0x2b, 0x0a, 0x0c, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x41, 0x52, 0x54, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x41, 0x50, 0x50, 0x41, 0x52,
	0x54, 0x10, 0x01, 0x32, 0x9a, 0x05, 0x0a, 0x0f, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x78, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x12, 0x32, 0x2e, 0x75, 0x6b, 0x61, 0x6d, 0x61,
	0x2e, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x41, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x75,
	0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x8a, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x2e, 0x75, 0x6b, 0x61, 0x6d,
	0x61, 0x2e, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x75, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x68, 0x75, 0x62, 0x2e,
	0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x12, 0x30, 0x2e,
	0x75, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x31, 0x2e, 0x75, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x93, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3b, 0x2e,
	0x75, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x75, 0x6b, 0x61,
	0x6d, 0x61, 0x2e, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x12, 0x31, 0x2e, 0x75, 0x6b, 0x61, 0x6d,
	0x61, 0x2e, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x75,
	0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75,
	0x6b, 0x61, 0x6d, 0x61, 0x2f, 0x75, 0x6b, 0x61, 0x6d, 0x61, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x73, 0x2f, 0x68, 0x75, 0x62, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x70, 0x62, 0x2f, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_artifact_proto_rawDescOnce sync.Once
	file_artifact_proto_rawDescData = file_artifact_proto_rawDesc
)

func file_artifact_proto_rawDescGZIP() []byte {
	file_artifact_proto_rawDescOnce.Do(func() {
		file_artifact_proto_rawDescData = protoimpl.X.CompressGZIP(file_artifact_proto_rawDescData)
	})
	return file_artifact_proto_rawDescData
}

var file_artifact_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_artifact_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_artifact_proto_goTypes = []interface{}{
	(ArtifactType)(0),                      // 0: ukama.hub.artifactmanager.v1.ArtifactType
	(*ExtraInfoMap)(nil),                   // 1: ukama.hub.artifactmanager.v1.ExtraInfoMap
	(*FormatInfo)(nil),                     // 2: ukama.hub.artifactmanager.v1.FormatInfo
	(*VersionInfo)(nil),                    // 3: ukama.hub.artifactmanager.v1.VersionInfo
	(*StoreArtifactRequest)(nil),           // 4: ukama.hub.artifactmanager.v1.StoreArtifactRequest
	(*StoreArtifactResponse)(nil),          // 5: ukama.hub.artifactmanager.v1.StoreArtifactResponse
	(*GetArtifactRequest)(nil),             // 6: ukama.hub.artifactmanager.v1.GetArtifactRequest
	(*GetArtifactResponse)(nil),            // 7: ukama.hub.artifactmanager.v1.GetArtifactResponse
	(*GetArtifactLocationRequest)(nil),     // 8: ukama.hub.artifactmanager.v1.GetArtifactLocationRequest
	(*GetArtifactLocationResponse)(nil),    // 9: ukama.hub.artifactmanager.v1.GetArtifactLocationResponse
	(*GetArtifactVersionListRequest)(nil),  // 10: ukama.hub.artifactmanager.v1.GetArtifactVersionListRequest
	(*GetArtifactVersionListResponse)(nil), // 11: ukama.hub.artifactmanager.v1.GetArtifactVersionListResponse
	(*ListArtifactRequest)(nil),            // 12: ukama.hub.artifactmanager.v1.ListArtifactRequest
	(*ListArtifactResponse)(nil),           // 13: ukama.hub.artifactmanager.v1.ListArtifactResponse
	(*timestamppb.Timestamp)(nil),          // 14: google.protobuf.Timestamp
}
var file_artifact_proto_depIdxs = []int32{
	14, // 0: ukama.hub.artifactmanager.v1.FormatInfo.created_at:type_name -> google.protobuf.Timestamp
	1,  // 1: ukama.hub.artifactmanager.v1.FormatInfo.ExtraInfo:type_name -> ukama.hub.artifactmanager.v1.ExtraInfoMap
	2,  // 2: ukama.hub.artifactmanager.v1.VersionInfo.Formats:type_name -> ukama.hub.artifactmanager.v1.FormatInfo
	0,  // 3: ukama.hub.artifactmanager.v1.StoreArtifactRequest.Type:type_name -> ukama.hub.artifactmanager.v1.ArtifactType
	0,  // 4: ukama.hub.artifactmanager.v1.StoreArtifactResponse.Type:type_name -> ukama.hub.artifactmanager.v1.ArtifactType
	0,  // 5: ukama.hub.artifactmanager.v1.GetArtifactRequest.Type:type_name -> ukama.hub.artifactmanager.v1.ArtifactType
	0,  // 6: ukama.hub.artifactmanager.v1.GetArtifactResponse.Type:type_name -> ukama.hub.artifactmanager.v1.ArtifactType
	0,  // 7: ukama.hub.artifactmanager.v1.GetArtifactLocationRequest.Type:type_name -> ukama.hub.artifactmanager.v1.ArtifactType
	0,  // 8: ukama.hub.artifactmanager.v1.GetArtifactLocationResponse.Type:type_name -> ukama.hub.artifactmanager.v1.ArtifactType
	0,  // 9: ukama.hub.artifactmanager.v1.GetArtifactVersionListRequest.Type:type_name -> ukama.hub.artifactmanager.v1.ArtifactType
	0,  // 10: ukama.hub.artifactmanager.v1.GetArtifactVersionListResponse.Type:type_name -> ukama.hub.artifactmanager.v1.ArtifactType
	3,  // 11: ukama.hub.artifactmanager.v1.GetArtifactVersionListResponse.Versions:type_name -> ukama.hub.artifactmanager.v1.VersionInfo
	0,  // 12: ukama.hub.artifactmanager.v1.ListArtifactRequest.Type:type_name -> ukama.hub.artifactmanager.v1.ArtifactType
	4,  // 13: ukama.hub.artifactmanager.v1.ArtifactService.StoreArtifact:input_type -> ukama.hub.artifactmanager.v1.StoreArtifactRequest
	8,  // 14: ukama.hub.artifactmanager.v1.ArtifactService.GetArtifactLocation:input_type -> ukama.hub.artifactmanager.v1.GetArtifactLocationRequest
	6,  // 15: ukama.hub.artifactmanager.v1.ArtifactService.GetArtifact:input_type -> ukama.hub.artifactmanager.v1.GetArtifactRequest
	10, // 16: ukama.hub.artifactmanager.v1.ArtifactService.GetArtifactVersionList:input_type -> ukama.hub.artifactmanager.v1.GetArtifactVersionListRequest
	12, // 17: ukama.hub.artifactmanager.v1.ArtifactService.ListArtifacts:input_type -> ukama.hub.artifactmanager.v1.ListArtifactRequest
	5,  // 18: ukama.hub.artifactmanager.v1.ArtifactService.StoreArtifact:output_type -> ukama.hub.artifactmanager.v1.StoreArtifactResponse
	9,  // 19: ukama.hub.artifactmanager.v1.ArtifactService.GetArtifactLocation:output_type -> ukama.hub.artifactmanager.v1.GetArtifactLocationResponse
	7,  // 20: ukama.hub.artifactmanager.v1.ArtifactService.GetArtifact:output_type -> ukama.hub.artifactmanager.v1.GetArtifactResponse
	11, // 21: ukama.hub.artifactmanager.v1.ArtifactService.GetArtifactVersionList:output_type -> ukama.hub.artifactmanager.v1.GetArtifactVersionListResponse
	13, // 22: ukama.hub.artifactmanager.v1.ArtifactService.ListArtifacts:output_type -> ukama.hub.artifactmanager.v1.ListArtifactResponse
	18, // [18:23] is the sub-list for method output_type
	13, // [13:18] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_artifact_proto_init() }
func file_artifact_proto_init() {
	if File_artifact_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_artifact_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtraInfoMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artifact_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormatInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artifact_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artifact_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreArtifactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artifact_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreArtifactResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artifact_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArtifactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artifact_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArtifactResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artifact_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArtifactLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artifact_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArtifactLocationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artifact_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArtifactVersionListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artifact_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArtifactVersionListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artifact_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListArtifactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artifact_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListArtifactResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_artifact_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_artifact_proto_goTypes,
		DependencyIndexes: file_artifact_proto_depIdxs,
		EnumInfos:         file_artifact_proto_enumTypes,
		MessageInfos:      file_artifact_proto_msgTypes,
	}.Build()
	File_artifact_proto = out.File
	file_artifact_proto_rawDesc = nil
	file_artifact_proto_goTypes = nil
	file_artifact_proto_depIdxs = nil
}
