// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	gen "github.com/ukama/ukama/systems/hub/distributor/pb/gen"
)

// chunkServer is an autogenerated mock type for the chunkServer type
type chunkServer struct {
	mock.Mock
}

// CreateChunk provides a mock function with given fields: in
func (_m *chunkServer) CreateChunk(in *gen.CreateChunkRequest) (*gen.CreateChunkResponse, error) {
	ret := _m.Called(in)

	var r0 *gen.CreateChunkResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(*gen.CreateChunkRequest) (*gen.CreateChunkResponse, error)); ok {
		return rf(in)
	}
	if rf, ok := ret.Get(0).(func(*gen.CreateChunkRequest) *gen.CreateChunkResponse); ok {
		r0 = rf(in)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*gen.CreateChunkResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(*gen.CreateChunkRequest) error); ok {
		r1 = rf(in)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTnewChunkServer interface {
	mock.TestingT
	Cleanup(func())
}

// newChunkServer creates a new instance of chunkServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newChunkServer(t mockConstructorTestingTnewChunkServer) *chunkServer {
	mock := &chunkServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
