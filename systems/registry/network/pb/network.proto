syntax = "proto3";

option go_package = "pb/gen";

import "validator.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";


package ukama.network.v1;

service NetworkService {
  /* Networks */
    rpc Add(AddRequest) returns (AddResponse);
    rpc Get(GetRequest) returns (GetResponse);
    rpc GetByOrg(GetByOrgRequest) returns (GetByOrgResponse);
    rpc Delete(DeleteRequest) returns (DeleteResponse);

  /* Sites */
    rpc AddSite(AddSiteRequest) returns (AddSiteResponse);
    // GetSite
    // GetByNetwork
    // UpdateSite
    // RemoveSite
}


message AddRequest{
    string name = 1 [(validator.field) = { string_not_empty: true}];
    string orgName = 2 [(validator.field) = { string_not_empty: true}];
}

message AddResponse{
    Network network = 1;
    string org = 2;
}

message GetRequest{
    string name = 1 [(validator.field) = { string_not_empty: true}];
    string orgName = 2 [(validator.field) = { string_not_empty: true}];
}

message GetResponse{
    Network network = 1;
    string org = 2;
}

message GetByOrgRequest{
    string orgName = 1 [(validator.field) = { string_not_empty: true}];
}

message GetByOrgResponse{
    string org = 1;
    repeated Network networks = 2;
}

message DeleteRequest{
    string name = 1 [(validator.field) = { string_not_empty: true}];
    string orgName = 2 [(validator.field) = { string_not_empty: true}];
}

message DeleteResponse{
}

message AddSiteRequest{
    uint64 netID = 1;
    string siteName = 2 [(validator.field) = { string_not_empty: true}];
}
message AddSiteResponse{
    Site site = 1;
}


message Network {
    uint64 id = 1;
    string name = 2;
    bool isDeactivated = 3;
    google.protobuf.Timestamp created_at = 4;
}

message Site {
    uint64 id = 1;
    string name = 2;
    uint64 NetworkID = 3;
    bool isDeactivated = 4;
    google.protobuf.Timestamp created_at = 5;
}
