// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: network.proto

package gen

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	_ "google.golang.org/protobuf/types/known/wrapperspb"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *AddRequest) Validate() error {
	if this.Name == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must not be an empty string`, this.Name))
	}
	if this.OrgName == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("OrgName", fmt.Errorf(`value '%v' must not be an empty string`, this.OrgName))
	}
	return nil
}
func (this *AddResponse) Validate() error {
	if this.Network != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Network); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Network", err)
		}
	}
	return nil
}
func (this *GetRequest) Validate() error {
	return nil
}
func (this *GetResponse) Validate() error {
	if this.Network != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Network); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Network", err)
		}
	}
	return nil
}
func (this *GetByNameRequest) Validate() error {
	if this.Name == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must not be an empty string`, this.Name))
	}
	if this.OrgName == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("OrgName", fmt.Errorf(`value '%v' must not be an empty string`, this.OrgName))
	}
	return nil
}
func (this *GetByNameResponse) Validate() error {
	if this.Network != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Network); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Network", err)
		}
	}
	return nil
}
func (this *GetByOrgRequest) Validate() error {
	if this.OrgName == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("OrgName", fmt.Errorf(`value '%v' must not be an empty string`, this.OrgName))
	}
	return nil
}
func (this *GetByOrgResponse) Validate() error {
	for _, item := range this.Networks {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Networks", err)
			}
		}
	}
	return nil
}
func (this *DeleteRequest) Validate() error {
	if this.Name == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must not be an empty string`, this.Name))
	}
	if this.OrgName == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("OrgName", fmt.Errorf(`value '%v' must not be an empty string`, this.OrgName))
	}
	return nil
}
func (this *DeleteResponse) Validate() error {
	return nil
}
func (this *AddSiteRequest) Validate() error {
	if this.SiteName == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("SiteName", fmt.Errorf(`value '%v' must not be an empty string`, this.SiteName))
	}
	return nil
}
func (this *AddSiteResponse) Validate() error {
	if this.Site != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Site); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Site", err)
		}
	}
	return nil
}
func (this *GetSiteRequest) Validate() error {
	return nil
}
func (this *GetSiteResponse) Validate() error {
	if this.Site != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Site); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Site", err)
		}
	}
	return nil
}
func (this *GetSiteByNameRequest) Validate() error {
	if this.SiteName == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("SiteName", fmt.Errorf(`value '%v' must not be an empty string`, this.SiteName))
	}
	return nil
}
func (this *GetSiteByNetworkRequest) Validate() error {
	return nil
}
func (this *GetSiteByNetworkResponse) Validate() error {
	for _, item := range this.Sites {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Sites", err)
			}
		}
	}
	return nil
}
func (this *Network) Validate() error {
	if this.CreatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreatedAt", err)
		}
	}
	return nil
}
func (this *Site) Validate() error {
	if this.CreatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreatedAt", err)
		}
	}
	return nil
}
