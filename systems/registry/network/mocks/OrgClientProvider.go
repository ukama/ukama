// Code generated by mockery v2.28.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	providers "github.com/ukama/ukama/systems/registry/network/pkg/providers"
)

// OrgClientProvider is an autogenerated mock type for the OrgClientProvider type
type OrgClientProvider struct {
	mock.Mock
}

// GetByName provides a mock function with given fields: name
func (_m *OrgClientProvider) GetByName(name string) (*providers.OrgInfo, error) {
	ret := _m.Called(name)

	var r0 *providers.OrgInfo
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*providers.OrgInfo, error)); ok {
		return rf(name)
	}
	if rf, ok := ret.Get(0).(func(string) *providers.OrgInfo); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*providers.OrgInfo)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewOrgClientProvider interface {
	mock.TestingT
	Cleanup(func())
}

// NewOrgClientProvider creates a new instance of OrgClientProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewOrgClientProvider(t mockConstructorTestingTNewOrgClientProvider) *OrgClientProvider {
	mock := &OrgClientProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
