/*
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 *
 * Copyright (c) 2023-present, Ukama Inc.
 */

syntax = "proto3";

option go_package = "github.com/ukama/ukama/systems/registry/invitation/pb/gen";

package ukama.registry.invitation.v1;

import "validator.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";


service InvitationService {
    /* Invitations */
    rpc Add(AddRequest) returns (AddResponse);
    rpc Get(GetRequest) returns (GetResponse);
    rpc UpdateStatus(UpdateStatusRequest) returns (UpdateStatusResponse);
    rpc Delete(DeleteRequest) returns (DeleteResponse);
    rpc GetAll(GetAllRequest) returns (GetAllResponse);
    rpc GetByEmail(GetByEmailRequest) returns (GetByEmailResponse);
 
}

message GetByEmailRequest {
    string email = 1  [(validator.field) = { human_error:"must be an email format" regex: "^$|^[a-z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,4}$"}];
}

message GetByEmailResponse {
    Invitation invitation = 1;
}

message AddRequest {
    string name = 3;
    string email = 4;
    RoleType role = 5;
    string expire_at = 6;
}

message GetAllRequest {
}

message GetAllResponse {
    repeated Invitation invitations = 1;
}

message AddResponse {
    Invitation invitation = 1;
}

message GetRequest {
    string id = 1 [(validator.field) = {uuid_ver: 4, string_not_empty: true}, json_name = "id"];
}

message GetResponse {
    Invitation invitation = 1;
}

message DeleteRequest {
    string id = 1 [(validator.field) = {uuid_ver: 4, string_not_empty: true}, json_name = "id"];
}

message DeleteResponse {
    string id = 1 [(validator.field) = {uuid_ver: 4, string_not_empty: true}, json_name = "id"];
}

message UpdateStatusRequest {
    string id = 1 [(validator.field) = {uuid_ver: 4, string_not_empty: true}, json_name = "id"];
    StatusType status = 2 [(validator.field) = {string_not_empty: true}];
}

message UpdateStatusResponse {
   string  id = 1;
   StatusType status = 2;
}

message Invitation {
    string id = 1 [(validator.field) = {uuid_ver: 4, string_not_empty: true}, json_name = "id"];
    string link = 3;
    string name = 4;
    string email = 5;
    RoleType role = 6;
    StatusType status = 7;
    string userId = 8;
    string expire_at = 9;
  }
  
  enum StatusType {
    Pending   = 0;
	Accepted  = 1;
	Declined  = 2;
    Unknown   = 3;
  }
  enum RoleType {
    OWNER = 0;
    ADMIN = 1;
    EMPLOYEE = 2;
    VENDOR = 3;
    USERS = 4;
}
