version: '3.2'
services:
 postgresd-registry:
  image: postgres:13.3
  ports:
   - '5433:5433'
  environment:
   - POSTGRES_USER=postgres
   - POSTGRES_PASSWORD=Pass2020!
  networks:
   - ukama-net
  volumes:
   - postgress-data:/var/lib/postgresql

 member:
  build: ./member
  ports:
   - '9060:9090'
  environment:
   - DEBUGMODE=true
   - DB_HOST=postgresd-registry
   - DB_PASSWORD=Pass2020!
   - DB_USER=postgres
   - ORGID=018688fa-d861-4e7b-b119-ffc5e1637ba8
   - ORGNAME=ukama-test-org
   # - BOOTSTRAP_URL=bootstrap.dev.ukama.com
   # - BOOTSTRAP_AUTH0_CLIENTID=${BOOTSTRAP_AUTH0_CLIENTID}
   # - BOOTSTRAP_AUTH0_SECRET=${BOOTSTRAP_AUTH0_SECRET}
   # - BOOTSTRAP_AUTH0_HOST=${BOOTSTRAP_AUTH0_HOST}
   # - DEBUG_DISABLEBOOTSTRAP=true
   - QUEUE_URI=amqp://guest:guest@${LOCAL_HOST_IP}:5672
   - MSGCLIENT_HOST=msgclient-registry:9095
   - ORG_SERVICE_HOST=member
   - ORG_SERVICE_PORT=9090
   - ORGOWNERUUID=e9d6fca8-8513-4ec9-9ef6-8127863b20a0
   - PUSHGATEWAY=http://${LOCAL_HOST_IP}:9099
   - ORGREGISTRYHOST=http://${LOCAL_HOST_IP}:8060
  restart: always
  networks:
   - ukama-net
  depends_on:
   - msgclient-registry
   - postgresd-registry

  member:
   build: ./member
   ports:
    - '9060:9090'
   environment:
    - DEBUGMODE=true
    - DB_HOST=postgresd-registry
    - DB_PASSWORD=Pass2020!
    - DB_USER=postgres
    - ORGID=018688fa-d861-4e7b-b119-ffc5e1637ba8
    - ORGNAME=ukama-test-org
    - QUEUE_URI=amqp://guest:guest@${LOCAL_HOST_IP}:5672
    - MSGCLIENT_HOST=msgclient-registry:9095
    - MEMBER_SERVICE_HOST=member
    - MEMBER_SERVICE_PORT=9090
    - OWNERID=018688fa-d861-4e7b-b119-ffc5e1637ba8
    - PUSHGATEWAY=http://${LOCAL_HOST_IP}:9099
    - ORGREGISTRYHOST=http://${LOCAL_HOST_IP}:8060
   restart: always
   networks:
    - ukama-net
   depends_on:
    - msgclient-registry

 msgclient-registry:
  build:
   dockerfile: ./Dockerfile
   context: ../services/msgClient
  environment:
   - DEBUGMODE=true
   - DB_HOST=postgresd-registry
   - DB_PASSWORD=Pass2020!
   - DB_USER=postgres
   - QUEUE_URI=amqp://guest:guest@${LOCAL_HOST_IP}:5672
   - SYSTEM=registry
  restart: always
  depends_on:
   - postgresd-registry
  networks:
   - ukama-net

  node:
   build:
    dockerfile: ./Dockerfile
    context: ./node
   ports:
    - '9072:9090'
   environment:
    - DEBUGMODE=true
    - DB_HOST=postgresd-registry
    - DB_PASSWORD=Pass2020!
    - DB_USER=postgres
    - ORGID=8c6c2bec-5f90-4fee-8ffd-ee6456abf4fc
    - QUEUE_URI=amqp://guest:guest@${LOCAL_HOST_IP}:5672
    - MSGCLIENT_HOST=msgclient-registry:9095
    - NODE_SERVICE_HOST=node
    - NODE_SERVICE_PORT=9090
    - PUSHGATEWAYHOST=${LOCAL_HOST_IP}:9091
   restart: always
   networks:
    - ukama-net
   depends_on:
    - msgclient-registry

  api-gateway-registry:
   build:
    dockerfile: ./Dockerfile
    context: ./api-gateway
   restart: always
   ports:
    - '8075:8080'
   networks:
    - ukama-net
   environment:
    - DEBUGMODE=true
    - BYPASS_AUTH_MODE=true
    # - CORS_ALLOWALLORIGINS=true
    # - CORS_ALLOWORIGINS=""
   depends_on:
    - member
    - node
    - network
    - postgresd-registry

  msgclient-registry:
   build: ../services/msgClient
   environment:
    - DEBUGMODE=true
    - DB_HOST=postgresd-registry
    - DB_PASSWORD=Pass2020!
    - DB_USER=postgres
    - QUEUE_URI=amqp://guest:guest@${LOCAL_HOST_IP}:5672
    - SYSTEM=registry
   restart: always
   networks:
    - ukama-net
   depends_on:
    - postgresd-registry

  initclient-registry:
   build:
    dockerfile: ./Dockerfile
    context: ../services/initClient
   environment:
    - ENV_SYSTEM_ORG=ukama-test-org
    - ENV_DNS_REFRESH_TIME_PERIOD=30
    - ENV_SYSTEM_NAME=registry
    - ENV_SYSTEM_DNS=api-gateway-registry
    - ENV_DNS_SERVER = false
    - ENV_SYSTEM_PORT=8080
    - ENV_SYSTEM_CERT=This-is-a-certificate
    - ENV_INIT_SYSTEM_ADDR=${LOCAL_HOST_IP}
    - ENV_INIT_SYSTEM_PORT=8071
    - ENV_INIT_CLIENT_ADDR=initclient-registry
    - ENV_INIT_CLIENT_PORT=8080
    - ENV_INIT_CLIENT_TEMP_FILE=/tmp/tmpfile
   restart: always
   networks:
    - ukama-net

networks:
 ukama-net:
  external: true
  name: services_dev-net

volumes:
 postgress-data:
