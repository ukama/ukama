syntax = "proto3";

option go_package = "github.com/ukama/ukama/systems/registry/member/pb/gen";

package ukama.registry.member.v1;

import "validator.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

service MemberService {

    /* Members */
    rpc AddMember(AddMemberRequest) returns (MemberResponse);
    rpc AddOtherMember(AddMemberRequest) returns (MemberResponse);
    rpc GetMember(MemberRequest) returns (MemberResponse);
    rpc GetMembers(GetMembersRequest) returns (GetMembersResponse);
    rpc UpdateMember(UpdateMemberRequest) returns (MemberResponse);
    rpc RemoveMember(MemberRequest) returns (MemberResponse);
}



message AddMemberRequest{
    string userUuid = 2 [(validator.field) = {uuid_ver: 4, string_not_empty: true}, json_name = "user_uuid"];
    RoleType role = 3;
}

message MemberRequest{
    string userUuid = 2 [(validator.field) = {uuid_ver: 4, string_not_empty: true}, json_name = "user_uuid"];
}

message MemberResponse{
  Member member = 1;
}

message GetMembersRequest {
}

message GetMembersResponse{
    repeated Member members = 2;
}

message UpdateMemberRequest {
  MemberRequest member = 1;
  MemberAttributes attributes = 2;
}

message MemberAttributes {
    bool isDeactivated = 1 [json_name = "is_deactivated"];
}

message Member {
    string orgId = 1 [(validator.field) = {uuid_ver: 4, string_not_empty: true}, json_name = "org_id"];
    string userId = 2 [json_name = "user_id", (validator.field) = {uuid_ver: 4, string_not_empty: true}];
    RoleType role = 3 ;
    bool isDeactivated = 4 [json_name = "is_deactivated"];
    google.protobuf.Timestamp created_at = 5 [json_name = "member_since"];
}

enum RoleType {
    OWNER = 0;
    ADMIN = 1;
    EMPLOYEE = 2;
    VENDOR = 3;
    USERS = 4;
}
