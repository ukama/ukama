// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	gen "github.com/ukama/ukama/systems/data-plan/package/pb/gen"
)

// PackageClientProvider is an autogenerated mock type for the PackageClientProvider type
type PackageClientProvider struct {
	mock.Mock
}

// GetClient provides a mock function with given fields:
func (_m *PackageClientProvider) GetClient() (gen.PackagesServiceClient, error) {
	ret := _m.Called()

	var r0 gen.PackagesServiceClient
	if rf, ok := ret.Get(0).(func() gen.PackagesServiceClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(gen.PackagesServiceClient)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewPackageClientProvider interface {
	mock.TestingT
	Cleanup(func())
}

// NewPackageClientProvider creates a new instance of PackageClientProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPackageClientProvider(t mockConstructorTestingTNewPackageClientProvider) *PackageClientProvider {
	mock := &PackageClientProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
