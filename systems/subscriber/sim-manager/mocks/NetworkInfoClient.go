// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	providers "github.com/ukama/ukama/systems/subscriber/sim-manager/pkg/clients/providers"
)

// NetworkInfoClient is an autogenerated mock type for the NetworkInfoClient type
type NetworkInfoClient struct {
	mock.Mock
}

// GetNetworkInfo provides a mock function with given fields: networkId, orgId
func (_m *NetworkInfoClient) GetNetworkInfo(networkId string, orgId string) (*providers.NetworkInfo, error) {
	ret := _m.Called(networkId, orgId)

	var r0 *providers.NetworkInfo
	var r1 error
	if rf, ok := ret.Get(0).(func(string, string) (*providers.NetworkInfo, error)); ok {
		return rf(networkId, orgId)
	}
	if rf, ok := ret.Get(0).(func(string, string) *providers.NetworkInfo); ok {
		r0 = rf(networkId, orgId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*providers.NetworkInfo)
		}
	}

	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(networkId, orgId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewNetworkInfoClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewNetworkInfoClient creates a new instance of NetworkInfoClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewNetworkInfoClient(t mockConstructorTestingTNewNetworkInfoClient) *NetworkInfoClient {
	mock := &NetworkInfoClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
