// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: sim.proto

package gen

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	regexp "regexp"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *GetRequest) Validate() error {
	return nil
}
func (this *GetResponse) Validate() error {
	if this.Sim != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Sim); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Sim", err)
		}
	}
	return nil
}
func (this *GetByIccidRequest) Validate() error {
	return nil
}
func (this *GetByIccidResponse) Validate() error {
	if this.Sim != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Sim); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Sim", err)
		}
	}
	return nil
}
func (this *GetStatsRequest) Validate() error {
	return nil
}
func (this *GetStatsResponse) Validate() error {
	return nil
}
func (this *AddRequest) Validate() error {
	for _, item := range this.Sim {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Sim", err)
			}
		}
	}
	return nil
}
func (this *AddResponse) Validate() error {
	for _, item := range this.Sim {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Sim", err)
			}
		}
	}
	return nil
}
func (this *DeleteRequest) Validate() error {
	return nil
}
func (this *DeleteResponse) Validate() error {
	return nil
}
func (this *UploadRequest) Validate() error {
	return nil
}
func (this *UploadResponse) Validate() error {
	for _, item := range this.Sim {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Sim", err)
			}
		}
	}
	return nil
}

<<<<<<< HEAD
var _regex_Sim_Iccid = regexp.MustCompile(`^[0-9]{19}$`)
var _regex_Sim_Msisdn = regexp.MustCompile(`^$|^(?:(?:\(?(?:00|\+)([1-4]\d\d|[1-9]\d?)\)?)?[\-\.\ \\\/]?)?((?:\(?\d{1,}\)?[\-\.\ \\\/]?){0,})(?:[\-\.\ \\\/]?(?:#|ext\.?|extension|x)[\-\.\ \\\/]?(\d+))?$`)

func (this *Sim) Validate() error {
	if !_regex_Sim_Iccid.MatchString(this.Iccid) {
		return github_com_mwitkow_go_proto_validators.FieldError("Iccid", fmt.Errorf(`must be a valid ICCID format`))
	}
=======
var _regex_Sim_Msisdn = regexp.MustCompile(`^$|^(?:(?:\(?(?:00|\+)([1-4]\d\d|[1-9]\d?)\)?)?[\-\.\ \\\/]?)?((?:\(?\d{1,}\)?[\-\.\ \\\/]?){0,})(?:[\-\.\ \\\/]?(?:#|ext\.?|extension|x)[\-\.\ \\\/]?(\d+))?$`)

func (this *Sim) Validate() error {
>>>>>>> subscriber-sys_sim-manager
	if !_regex_Sim_Msisdn.MatchString(this.Msisdn) {
		return github_com_mwitkow_go_proto_validators.FieldError("Msisdn", fmt.Errorf(`must be a phone number format`))
	}
	return nil
}

<<<<<<< HEAD
var _regex_AddSim_Iccid = regexp.MustCompile(`^[0-9]{19}$`)
var _regex_AddSim_Msisdn = regexp.MustCompile(`^$|^(?:(?:\(?(?:00|\+)([1-4]\d\d|[1-9]\d?)\)?)?[\-\.\ \\\/]?)?((?:\(?\d{1,}\)?[\-\.\ \\\/]?){0,})(?:[\-\.\ \\\/]?(?:#|ext\.?|extension|x)[\-\.\ \\\/]?(\d+))?$`)

func (this *AddSim) Validate() error {
	if !_regex_AddSim_Iccid.MatchString(this.Iccid) {
		return github_com_mwitkow_go_proto_validators.FieldError("Iccid", fmt.Errorf(`must be a valid ICCID format`))
	}
=======
var _regex_AddSim_Msisdn = regexp.MustCompile(`^$|^(?:(?:\(?(?:00|\+)([1-4]\d\d|[1-9]\d?)\)?)?[\-\.\ \\\/]?)?((?:\(?\d{1,}\)?[\-\.\ \\\/]?){0,})(?:[\-\.\ \\\/]?(?:#|ext\.?|extension|x)[\-\.\ \\\/]?(\d+))?$`)

func (this *AddSim) Validate() error {
>>>>>>> subscriber-sys_sim-manager
	if !_regex_AddSim_Msisdn.MatchString(this.Msisdn) {
		return github_com_mwitkow_go_proto_validators.FieldError("Msisdn", fmt.Errorf(`must be a phone number format`))
	}
	return nil
}
