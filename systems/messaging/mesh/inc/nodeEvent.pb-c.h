/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: nodeEvent.proto */

#ifndef PROTOBUF_C_nodeEvent_2eproto__INCLUDED
#define PROTOBUF_C_nodeEvent_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Ukama__Events__V1__NodeOnlineEvent Ukama__Events__V1__NodeOnlineEvent;
typedef struct _Ukama__Events__V1__NodeOfflineEvent Ukama__Events__V1__NodeOfflineEvent;


/* --- enums --- */


/* --- messages --- */

struct  _Ukama__Events__V1__NodeOnlineEvent
{
  ProtobufCMessage base;
  char *nodeid;
  char *nodeip;
  int32_t nodeport;
  char *meship;
  int32_t meshport;
  char *meshhostname;
};
#define UKAMA__EVENTS__V1__NODE_ONLINE_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ukama__events__v1__node_online_event__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, (char *)protobuf_c_empty_string, 0, (char *)protobuf_c_empty_string }


struct  _Ukama__Events__V1__NodeOfflineEvent
{
  ProtobufCMessage base;
  char *nodeid;
};
#define UKAMA__EVENTS__V1__NODE_OFFLINE_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ukama__events__v1__node_offline_event__descriptor) \
    , (char *)protobuf_c_empty_string }


/* Ukama__Events__V1__NodeOnlineEvent methods */
void   ukama__events__v1__node_online_event__init
                     (Ukama__Events__V1__NodeOnlineEvent         *message);
size_t ukama__events__v1__node_online_event__get_packed_size
                     (const Ukama__Events__V1__NodeOnlineEvent   *message);
size_t ukama__events__v1__node_online_event__pack
                     (const Ukama__Events__V1__NodeOnlineEvent   *message,
                      uint8_t             *out);
size_t ukama__events__v1__node_online_event__pack_to_buffer
                     (const Ukama__Events__V1__NodeOnlineEvent   *message,
                      ProtobufCBuffer     *buffer);
Ukama__Events__V1__NodeOnlineEvent *
       ukama__events__v1__node_online_event__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ukama__events__v1__node_online_event__free_unpacked
                     (Ukama__Events__V1__NodeOnlineEvent *message,
                      ProtobufCAllocator *allocator);
/* Ukama__Events__V1__NodeOfflineEvent methods */
void   ukama__events__v1__node_offline_event__init
                     (Ukama__Events__V1__NodeOfflineEvent         *message);
size_t ukama__events__v1__node_offline_event__get_packed_size
                     (const Ukama__Events__V1__NodeOfflineEvent   *message);
size_t ukama__events__v1__node_offline_event__pack
                     (const Ukama__Events__V1__NodeOfflineEvent   *message,
                      uint8_t             *out);
size_t ukama__events__v1__node_offline_event__pack_to_buffer
                     (const Ukama__Events__V1__NodeOfflineEvent   *message,
                      ProtobufCBuffer     *buffer);
Ukama__Events__V1__NodeOfflineEvent *
       ukama__events__v1__node_offline_event__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ukama__events__v1__node_offline_event__free_unpacked
                     (Ukama__Events__V1__NodeOfflineEvent *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Ukama__Events__V1__NodeOnlineEvent_Closure)
                 (const Ukama__Events__V1__NodeOnlineEvent *message,
                  void *closure_data);
typedef void (*Ukama__Events__V1__NodeOfflineEvent_Closure)
                 (const Ukama__Events__V1__NodeOfflineEvent *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor ukama__events__v1__node_online_event__descriptor;
extern const ProtobufCMessageDescriptor ukama__events__v1__node_offline_event__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_nodeEvent_2eproto__INCLUDED */
