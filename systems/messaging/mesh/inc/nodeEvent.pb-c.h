/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: nodeEvent.proto */

#ifndef PROTOBUF_C_nodeEvent_2eproto__INCLUDED
#define PROTOBUF_C_nodeEvent_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _NodeOnlineEvent NodeOnlineEvent;
typedef struct _NodeOfflineEvent NodeOfflineEvent;


/* --- enums --- */


/* --- messages --- */

struct  _NodeOnlineEvent
{
  ProtobufCMessage base;
  char *nodeid;
  char *nodeip;
  int32_t nodeport;
  char *meship;
  int32_t meshport;
  char *meshhostname;
};
#define NODE_ONLINE_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&node_online_event__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, (char *)protobuf_c_empty_string, 0, (char *)protobuf_c_empty_string }


struct  _NodeOfflineEvent
{
  ProtobufCMessage base;
  char *nodeid;
};
#define NODE_OFFLINE_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&node_offline_event__descriptor) \
    , (char *)protobuf_c_empty_string }


/* NodeOnlineEvent methods */
void   node_online_event__init
                     (NodeOnlineEvent         *message);
size_t node_online_event__get_packed_size
                     (const NodeOnlineEvent   *message);
size_t node_online_event__pack
                     (const NodeOnlineEvent   *message,
                      uint8_t             *out);
size_t node_online_event__pack_to_buffer
                     (const NodeOnlineEvent   *message,
                      ProtobufCBuffer     *buffer);
NodeOnlineEvent *
       node_online_event__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   node_online_event__free_unpacked
                     (NodeOnlineEvent *message,
                      ProtobufCAllocator *allocator);
/* NodeOfflineEvent methods */
void   node_offline_event__init
                     (NodeOfflineEvent         *message);
size_t node_offline_event__get_packed_size
                     (const NodeOfflineEvent   *message);
size_t node_offline_event__pack
                     (const NodeOfflineEvent   *message,
                      uint8_t             *out);
size_t node_offline_event__pack_to_buffer
                     (const NodeOfflineEvent   *message,
                      ProtobufCBuffer     *buffer);
NodeOfflineEvent *
       node_offline_event__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   node_offline_event__free_unpacked
                     (NodeOfflineEvent *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*NodeOnlineEvent_Closure)
                 (const NodeOnlineEvent *message,
                  void *closure_data);
typedef void (*NodeOfflineEvent_Closure)
                 (const NodeOfflineEvent *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor node_online_event__descriptor;
extern const ProtobufCMessageDescriptor node_offline_event__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_nodeEvent_2eproto__INCLUDED */
