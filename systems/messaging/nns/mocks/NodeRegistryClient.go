// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	client "github.com/ukama/ukama/systems/messaging/nns/pkg/client"
)

// NodeRegistryClient is an autogenerated mock type for the NodeRegistryClient type
type NodeRegistryClient struct {
	mock.Mock
}

// GetNode provides a mock function with given fields: id
func (_m *NodeRegistryClient) GetNode(id string) (*client.NodeInfo, error) {
	ret := _m.Called(id)

	var r0 *client.NodeInfo
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*client.NodeInfo, error)); ok {
		return rf(id)
	}
	if rf, ok := ret.Get(0).(func(string) *client.NodeInfo); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*client.NodeInfo)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewNodeRegistryClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewNodeRegistryClient creates a new instance of NodeRegistryClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewNodeRegistryClient(t mockConstructorTestingTNewNodeRegistryClient) *NodeRegistryClient {
	mock := &NodeRegistryClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
