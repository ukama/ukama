// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	sanitizer "github.com/ukama/ukama/systems/metrics/api-gateway/pkg/sanitizer"
)

// jobFunc is an autogenerated mock type for the jobFunc type
type jobFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0
func (_m *jobFunc) Execute(_a0 sanitizer.Job) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(sanitizer.Job) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// newJobFunc creates a new instance of jobFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newJobFunc(t interface {
	mock.TestingT
	Cleanup(func())
}) *jobFunc {
	mock := &jobFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
