version: '3.9'
services:
 postgresd-metrics:
  image: postgres:13.3
  ports:
   - '5407:5432'
  environment:
   - POSTGRES_USER=postgres
   - POSTGRES_PASSWORD=Pass2020!
  networks:
   - ukama-net
  volumes:
   - postgress-data:/var/lib/postgresql

 prometheus:
  image: prom/prometheus:latest
  ports:
   - 9090:9090
  volumes:
   - ./prometheus:/etc/prometheus
   - prometheus-data:/prometheus
  command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml
  networks:
   - ukama-net

 exporter:
  build:
   context: ./exporter
   dockerfile: ./Dockerfile
  ports:
   - '10251:10251'
  environment:
   - DEBUGMODE=true
   - DB_HOST=postgresd
   - DB_PASSWORD=Pass2020!
   - DB_USER=postgres
   - QUEUE_URI=amqp://guest:guest@${LOCAL_HOST_IP}:5672
   - MSGCLIENT_HOST=msgclient-metrics:9095
   - EXPORTER_SERVICE_HOST=exporter
   - EXPORTER_SERVICE_PORT=9092
  restart: always
  networks:
   - ukama-net

 metricsgateway:
  build:
   context: ./api-gateway
   dockerfile: ./Dockerfile
  ports:
   - '8077:8080'
  environment:
   - METRICSCONFIG_METRICSSERVER=http://prometheus:9090
   - BYPASS_AUTH_MODE=true
  restart: always
  depends_on:
   - exporter
  networks:
   - ukama-net

 msgclient-metrics:
  build:
   context: ../services/msgClient
   dockerfile: ./Dockerfile
  ports:
   - '9095:9095'
  environment:
   - DEBUGMODE=true
   - DB_HOST=postgresd-metrics
   - DB_PASSWORD=Pass2020!
   - DB_USER=postgres
   - QUEUE_URI=amqp://guest:guest@${LOCAL_HOST_IP}:5672
   - SYSTEM=metrics
  restart: always
  depends_on:
   - prometheus
  networks:
   - ukama-net

 pushgateway:
  image: prom/pushgateway
  restart: unless-stopped
  ports:
   - '9091:9091'
  networks:
   - ukama-net

volumes:
 postgress-data:
 prometheus-data:

networks:
 ukama-net:
  external: true
  name: services_dev-net
