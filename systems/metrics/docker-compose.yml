version: "3.9"
services:

  prometheus:
    image: prom/prometheus:latest
    ports:
        - 9090:9090
    volumes:
        - ./prometheus:/etc/prometheus
        - prometheus-data:/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml

  # rabbitmq:
  #   image: rabbitmq:3-management
  #   ports:
  #       - 5672:5672
  #       - 15672:15672
  #   volumes:
  #       - ~/.docker-conf/rabbitmq/data/:/tmp/rabbitmq/
  #       - ~/.docker-conf/rabbitmq/log/:/tmp/rabbitmq

  postgresd:
    image: postgres:13.3
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Pass2020!
    volumes:
      - postgress-data:/var/lib/postgresql

  exporter:
    build:
      context: ./exporter
      dockerfile: ./Dockerfile
    ports:
      - "10251:10251"
    environment:
      - DEBUGMODE=true
      - DB_HOST=postgresd
      - DB_PASSWORD=Pass2020!
      - DB_USER=postgres
      - QUEUE_URI=amqp://guest:guest@192.168.0.14:5672
      - MSGCLIENT_HOST=msgclient:9095
      - EXPORTER_SERVICE_HOST=exporter
      - EXPORTER_SERVICE_PORT=9092
    restart: always
    depends_on:
      - postgresd


  metricsgateway:
    build: 
      context: ./api-gateway
      dockerfile: ./Dockerfile
    ports:
      - "8082:8080"
    environment:
      - METRICSCONFIG_METRICSSERVER=http://prometheus:9090
    restart: always
    depends_on:
      - postgresd
      - exporter

  msgclient:
    build: 
      context: ../messaging/msgClient
      dockerfile: ./Dockerfile
    environment:
      - DEBUGMODE=true
      - DB_HOST=postgresd
      - DB_PASSWORD=Pass2020!
      - DB_USER=postgres
      - QUEUE_URI=amqp://guest:guest@192.168.0.14:5672
      - MSGCLIENT_HOST=msg-client-subscriber:9095
      - SYSTEM=metrics
    restart: always
    depends_on:
      - postgresd
      - prometheus
  
  pushgateway:
    image: prom/pushgateway
    restart: unless-stopped
    ports:
      - "9091:9091"

volumes:
  postgress-data:
  prometheus-data:

networks:
  ukama-net:
    name: metrics_network
