// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	registry "github.com/ukama/ukama/systems/common/rest/client/registry"
)

// SiteClient is an autogenerated mock type for the SiteClient type
type SiteClient struct {
	mock.Mock
}

// Get provides a mock function with given fields: id
func (_m *SiteClient) Get(id string) (*registry.SiteInfo, error) {
	ret := _m.Called(id)

	if len(ret) == 0 {
		panic("no return value specified for Get")
	}

	var r0 *registry.SiteInfo
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*registry.SiteInfo, error)); ok {
		return rf(id)
	}
	if rf, ok := ret.Get(0).(func(string) *registry.SiteInfo); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*registry.SiteInfo)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewSiteClient creates a new instance of SiteClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSiteClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *SiteClient {
	mock := &SiteClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
