// Code generated by mockery v2.38.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	client "github.com/ukama/ukama/systems/common/rest/client"
)

// OrgClient is an autogenerated mock type for the OrgClient type
type OrgClient struct {
	mock.Mock
}

// Get provides a mock function with given fields: name
func (_m *OrgClient) Get(name string) (*client.OrgInfo, error) {
	ret := _m.Called(name)

	if len(ret) == 0 {
		panic("no return value specified for Get")
	}

	var r0 *client.OrgInfo
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*client.OrgInfo, error)); ok {
		return rf(name)
	}
	if rf, ok := ret.Get(0).(func(string) *client.OrgInfo); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*client.OrgInfo)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewOrgClient creates a new instance of OrgClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewOrgClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *OrgClient {
	mock := &OrgClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
