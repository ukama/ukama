// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// RoundTripFunc is an autogenerated mock type for the RoundTripFunc type
type RoundTripFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: req
func (_m *RoundTripFunc) Execute(req *http.Request) *http.Response {
	ret := _m.Called(req)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 *http.Response
	if rf, ok := ret.Get(0).(func(*http.Request) *http.Response); ok {
		r0 = rf(req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*http.Response)
		}
	}

	return r0
}

// NewRoundTripFunc creates a new instance of RoundTripFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRoundTripFunc(t interface {
	mock.TestingT
	Cleanup(func())
}) *RoundTripFunc {
	mock := &RoundTripFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
