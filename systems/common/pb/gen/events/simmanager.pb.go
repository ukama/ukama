//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.
//
// Copyright (c) 2023-present, Ukama Inc.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.1
// source: events/simmanager.proto

package events

import (
	_ "github.com/mwitkow/go-proto-validators"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventSimUsage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SimId        string `protobuf:"bytes,2,opt,name=simId,json=sim_id,proto3" json:"simId,omitempty"`
	SubscriberId string `protobuf:"bytes,3,opt,name=subscriberId,json=subscriber_id,proto3" json:"subscriberId,omitempty"`
	NetworkId    string `protobuf:"bytes,4,opt,name=networkId,json=network_id,proto3" json:"networkId,omitempty"`
	OrgId        string `protobuf:"bytes,5,opt,name=orgId,json=org_id,proto3" json:"orgId,omitempty"`
	Type         string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	BytesUsed    uint64 `protobuf:"varint,7,opt,name=bytesUsed,proto3" json:"bytesUsed,omitempty"`
	SessionId    uint64 `protobuf:"varint,8,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	StartTime    uint64 `protobuf:"varint,9,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime      uint64 `protobuf:"varint,10,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *EventSimUsage) Reset() {
	*x = EventSimUsage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_simmanager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSimUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSimUsage) ProtoMessage() {}

func (x *EventSimUsage) ProtoReflect() protoreflect.Message {
	mi := &file_events_simmanager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSimUsage.ProtoReflect.Descriptor instead.
func (*EventSimUsage) Descriptor() ([]byte, []int) {
	return file_events_simmanager_proto_rawDescGZIP(), []int{0}
}

func (x *EventSimUsage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventSimUsage) GetSimId() string {
	if x != nil {
		return x.SimId
	}
	return ""
}

func (x *EventSimUsage) GetSubscriberId() string {
	if x != nil {
		return x.SubscriberId
	}
	return ""
}

func (x *EventSimUsage) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *EventSimUsage) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *EventSimUsage) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *EventSimUsage) GetBytesUsed() uint64 {
	if x != nil {
		return x.BytesUsed
	}
	return 0
}

func (x *EventSimUsage) GetSessionId() uint64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *EventSimUsage) GetStartTime() uint64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *EventSimUsage) GetEndTime() uint64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type EventSimAllocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SubscriberId  string `protobuf:"bytes,2,opt,name=subscriberId,json=subscriber_id,proto3" json:"subscriberId,omitempty"`
	NetworkId     string `protobuf:"bytes,3,opt,name=networkId,json=network_id,proto3" json:"networkId,omitempty"`
	OrgId         string `protobuf:"bytes,4,opt,name=orgId,json=org_id,proto3" json:"orgId,omitempty"`
	DataPlanId    string `protobuf:"bytes,5,opt,name=dataPlanId,json=plan_id,proto3" json:"dataPlanId,omitempty"`
	Iccid         string `protobuf:"bytes,6,opt,name=iccid,proto3" json:"iccid,omitempty"`
	Msisdn        string `protobuf:"bytes,7,opt,name=msisdn,proto3" json:"msisdn,omitempty"`
	Imsi          string `protobuf:"bytes,8,opt,name=imsi,proto3" json:"imsi,omitempty"`
	Type          string `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`
	Status        string `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	IsPhysical    bool   `protobuf:"varint,11,opt,name=isPhysical,json=is_physical,proto3" json:"isPhysical,omitempty"`
	PackageId     string `protobuf:"bytes,12,opt,name=packageId,json=package_id,proto3" json:"packageId,omitempty"`
	TrafficPolicy uint32 `protobuf:"varint,13,opt,name=trafficPolicy,json=traffic_policy,proto3" json:"trafficPolicy,omitempty"`
}

func (x *EventSimAllocation) Reset() {
	*x = EventSimAllocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_simmanager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSimAllocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSimAllocation) ProtoMessage() {}

func (x *EventSimAllocation) ProtoReflect() protoreflect.Message {
	mi := &file_events_simmanager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSimAllocation.ProtoReflect.Descriptor instead.
func (*EventSimAllocation) Descriptor() ([]byte, []int) {
	return file_events_simmanager_proto_rawDescGZIP(), []int{1}
}

func (x *EventSimAllocation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventSimAllocation) GetSubscriberId() string {
	if x != nil {
		return x.SubscriberId
	}
	return ""
}

func (x *EventSimAllocation) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *EventSimAllocation) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *EventSimAllocation) GetDataPlanId() string {
	if x != nil {
		return x.DataPlanId
	}
	return ""
}

func (x *EventSimAllocation) GetIccid() string {
	if x != nil {
		return x.Iccid
	}
	return ""
}

func (x *EventSimAllocation) GetMsisdn() string {
	if x != nil {
		return x.Msisdn
	}
	return ""
}

func (x *EventSimAllocation) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *EventSimAllocation) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *EventSimAllocation) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *EventSimAllocation) GetIsPhysical() bool {
	if x != nil {
		return x.IsPhysical
	}
	return false
}

func (x *EventSimAllocation) GetPackageId() string {
	if x != nil {
		return x.PackageId
	}
	return ""
}

func (x *EventSimAllocation) GetTrafficPolicy() uint32 {
	if x != nil {
		return x.TrafficPolicy
	}
	return 0
}

type EventSimActivePackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SubscriberId     string                 `protobuf:"bytes,2,opt,name=subscriberId,json=subscriber_id,proto3" json:"subscriberId,omitempty"`
	PackageId        string                 `protobuf:"bytes,3,opt,name=packageId,json=package_id,proto3" json:"packageId,omitempty"`
	PlanId           string                 `protobuf:"bytes,4,opt,name=planId,json=plan_id,proto3" json:"planId,omitempty"`
	PackageStartDate *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=packageStartDate,json=start_date,proto3" json:"packageStartDate,omitempty"`
	Iccid            string                 `protobuf:"bytes,6,opt,name=iccid,proto3" json:"iccid,omitempty"`
	Imsi             string                 `protobuf:"bytes,7,opt,name=imsi,proto3" json:"imsi,omitempty"`
	NetworkId        string                 `protobuf:"bytes,8,opt,name=networkId,proto3" json:"networkId,omitempty"`
}

func (x *EventSimActivePackage) Reset() {
	*x = EventSimActivePackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_simmanager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSimActivePackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSimActivePackage) ProtoMessage() {}

func (x *EventSimActivePackage) ProtoReflect() protoreflect.Message {
	mi := &file_events_simmanager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSimActivePackage.ProtoReflect.Descriptor instead.
func (*EventSimActivePackage) Descriptor() ([]byte, []int) {
	return file_events_simmanager_proto_rawDescGZIP(), []int{2}
}

func (x *EventSimActivePackage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventSimActivePackage) GetSubscriberId() string {
	if x != nil {
		return x.SubscriberId
	}
	return ""
}

func (x *EventSimActivePackage) GetPackageId() string {
	if x != nil {
		return x.PackageId
	}
	return ""
}

func (x *EventSimActivePackage) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

func (x *EventSimActivePackage) GetPackageStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PackageStartDate
	}
	return nil
}

func (x *EventSimActivePackage) GetIccid() string {
	if x != nil {
		return x.Iccid
	}
	return ""
}

func (x *EventSimActivePackage) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *EventSimActivePackage) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

type EventSimTermination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SubscriberId string `protobuf:"bytes,2,opt,name=subscriberId,json=subscriber_id,proto3" json:"subscriberId,omitempty"`
	Iccid        string `protobuf:"bytes,3,opt,name=iccid,proto3" json:"iccid,omitempty"`
	Imsi         string `protobuf:"bytes,4,opt,name=imsi,proto3" json:"imsi,omitempty"`
	NetworkId    string `protobuf:"bytes,5,opt,name=networkId,proto3" json:"networkId,omitempty"`
}

func (x *EventSimTermination) Reset() {
	*x = EventSimTermination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_simmanager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSimTermination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSimTermination) ProtoMessage() {}

func (x *EventSimTermination) ProtoReflect() protoreflect.Message {
	mi := &file_events_simmanager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSimTermination.ProtoReflect.Descriptor instead.
func (*EventSimTermination) Descriptor() ([]byte, []int) {
	return file_events_simmanager_proto_rawDescGZIP(), []int{3}
}

func (x *EventSimTermination) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventSimTermination) GetSubscriberId() string {
	if x != nil {
		return x.SubscriberId
	}
	return ""
}

func (x *EventSimTermination) GetIccid() string {
	if x != nil {
		return x.Iccid
	}
	return ""
}

func (x *EventSimTermination) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *EventSimTermination) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

type EventSimActivation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SubscriberId string `protobuf:"bytes,2,opt,name=subscriberId,json=subscriber_id,proto3" json:"subscriberId,omitempty"`
	Iccid        string `protobuf:"bytes,3,opt,name=iccid,proto3" json:"iccid,omitempty"`
	Imsi         string `protobuf:"bytes,4,opt,name=imsi,proto3" json:"imsi,omitempty"`
	NetworkId    string `protobuf:"bytes,5,opt,name=networkId,proto3" json:"networkId,omitempty"`
	PackageId    string `protobuf:"bytes,6,opt,name=packageId,proto3" json:"packageId,omitempty"`
}

func (x *EventSimActivation) Reset() {
	*x = EventSimActivation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_simmanager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSimActivation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSimActivation) ProtoMessage() {}

func (x *EventSimActivation) ProtoReflect() protoreflect.Message {
	mi := &file_events_simmanager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSimActivation.ProtoReflect.Descriptor instead.
func (*EventSimActivation) Descriptor() ([]byte, []int) {
	return file_events_simmanager_proto_rawDescGZIP(), []int{4}
}

func (x *EventSimActivation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventSimActivation) GetSubscriberId() string {
	if x != nil {
		return x.SubscriberId
	}
	return ""
}

func (x *EventSimActivation) GetIccid() string {
	if x != nil {
		return x.Iccid
	}
	return ""
}

func (x *EventSimActivation) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *EventSimActivation) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *EventSimActivation) GetPackageId() string {
	if x != nil {
		return x.PackageId
	}
	return ""
}

type EventSimDeactivation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SubscriberId string `protobuf:"bytes,2,opt,name=subscriberId,json=subscriber_id,proto3" json:"subscriberId,omitempty"`
	Iccid        string `protobuf:"bytes,3,opt,name=iccid,proto3" json:"iccid,omitempty"`
	Imsi         string `protobuf:"bytes,4,opt,name=imsi,proto3" json:"imsi,omitempty"`
	NetworkId    string `protobuf:"bytes,5,opt,name=networkId,proto3" json:"networkId,omitempty"`
	PackageId    string `protobuf:"bytes,6,opt,name=packageId,proto3" json:"packageId,omitempty"`
}

func (x *EventSimDeactivation) Reset() {
	*x = EventSimDeactivation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_simmanager_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSimDeactivation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSimDeactivation) ProtoMessage() {}

func (x *EventSimDeactivation) ProtoReflect() protoreflect.Message {
	mi := &file_events_simmanager_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSimDeactivation.ProtoReflect.Descriptor instead.
func (*EventSimDeactivation) Descriptor() ([]byte, []int) {
	return file_events_simmanager_proto_rawDescGZIP(), []int{5}
}

func (x *EventSimDeactivation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventSimDeactivation) GetSubscriberId() string {
	if x != nil {
		return x.SubscriberId
	}
	return ""
}

func (x *EventSimDeactivation) GetIccid() string {
	if x != nil {
		return x.Iccid
	}
	return ""
}

func (x *EventSimDeactivation) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *EventSimDeactivation) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *EventSimDeactivation) GetPackageId() string {
	if x != nil {
		return x.PackageId
	}
	return ""
}

type EventSimAddPackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SubscriberId string `protobuf:"bytes,2,opt,name=subscriberId,json=subscriber_id,proto3" json:"subscriberId,omitempty"`
	Iccid        string `protobuf:"bytes,3,opt,name=iccid,proto3" json:"iccid,omitempty"`
	Imsi         string `protobuf:"bytes,4,opt,name=imsi,proto3" json:"imsi,omitempty"`
	NetworkId    string `protobuf:"bytes,5,opt,name=networkId,proto3" json:"networkId,omitempty"`
	PackageId    string `protobuf:"bytes,6,opt,name=packageId,proto3" json:"packageId,omitempty"`
}

func (x *EventSimAddPackage) Reset() {
	*x = EventSimAddPackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_simmanager_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSimAddPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSimAddPackage) ProtoMessage() {}

func (x *EventSimAddPackage) ProtoReflect() protoreflect.Message {
	mi := &file_events_simmanager_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSimAddPackage.ProtoReflect.Descriptor instead.
func (*EventSimAddPackage) Descriptor() ([]byte, []int) {
	return file_events_simmanager_proto_rawDescGZIP(), []int{6}
}

func (x *EventSimAddPackage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventSimAddPackage) GetSubscriberId() string {
	if x != nil {
		return x.SubscriberId
	}
	return ""
}

func (x *EventSimAddPackage) GetIccid() string {
	if x != nil {
		return x.Iccid
	}
	return ""
}

func (x *EventSimAddPackage) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *EventSimAddPackage) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *EventSimAddPackage) GetPackageId() string {
	if x != nil {
		return x.PackageId
	}
	return ""
}

type EventSimRemovePackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SubscriberId string `protobuf:"bytes,2,opt,name=subscriberId,json=subscriber_id,proto3" json:"subscriberId,omitempty"`
	Iccid        string `protobuf:"bytes,3,opt,name=iccid,proto3" json:"iccid,omitempty"`
	Imsi         string `protobuf:"bytes,4,opt,name=imsi,proto3" json:"imsi,omitempty"`
	NetworkId    string `protobuf:"bytes,5,opt,name=networkId,proto3" json:"networkId,omitempty"`
	PackageId    string `protobuf:"bytes,6,opt,name=packageId,proto3" json:"packageId,omitempty"`
}

func (x *EventSimRemovePackage) Reset() {
	*x = EventSimRemovePackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_simmanager_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSimRemovePackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSimRemovePackage) ProtoMessage() {}

func (x *EventSimRemovePackage) ProtoReflect() protoreflect.Message {
	mi := &file_events_simmanager_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSimRemovePackage.ProtoReflect.Descriptor instead.
func (*EventSimRemovePackage) Descriptor() ([]byte, []int) {
	return file_events_simmanager_proto_rawDescGZIP(), []int{7}
}

func (x *EventSimRemovePackage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventSimRemovePackage) GetSubscriberId() string {
	if x != nil {
		return x.SubscriberId
	}
	return ""
}

func (x *EventSimRemovePackage) GetIccid() string {
	if x != nil {
		return x.Iccid
	}
	return ""
}

func (x *EventSimRemovePackage) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *EventSimRemovePackage) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *EventSimRemovePackage) GetPackageId() string {
	if x != nil {
		return x.PackageId
	}
	return ""
}

type EventSimPackageExpire struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DataPlanId string `protobuf:"bytes,2,opt,name=dataPlanId,json=plan_id,proto3" json:"dataPlanId,omitempty"`
	PackageId  string `protobuf:"bytes,3,opt,name=packageId,json=package_id,proto3" json:"packageId,omitempty"`
}

func (x *EventSimPackageExpire) Reset() {
	*x = EventSimPackageExpire{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_simmanager_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSimPackageExpire) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSimPackageExpire) ProtoMessage() {}

func (x *EventSimPackageExpire) ProtoReflect() protoreflect.Message {
	mi := &file_events_simmanager_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSimPackageExpire.ProtoReflect.Descriptor instead.
func (*EventSimPackageExpire) Descriptor() ([]byte, []int) {
	return file_events_simmanager_proto_rawDescGZIP(), []int{8}
}

func (x *EventSimPackageExpire) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventSimPackageExpire) GetDataPlanId() string {
	if x != nil {
		return x.DataPlanId
	}
	return ""
}

func (x *EventSimPackageExpire) GetPackageId() string {
	if x != nil {
		return x.PackageId
	}
	return ""
}

var File_events_simmanager_proto protoreflect.FileDescriptor

var file_events_simmanager_proto_rawDesc = []byte{
	0x0a, 0x17, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x73, 0x69, 0x6d, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x75, 0x6b, 0x61, 0x6d, 0x61,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x0f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd0, 0x02, 0x0a,
	0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x6d, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05,
	0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x05, 0x73, 0x69, 0x6d,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01,
	0x90, 0x01, 0x04, 0x52, 0x06, 0x73, 0x69, 0x6d, 0x5f, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x0c, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x0d, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x09, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52,
	0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x55, 0x73, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0xfc, 0x04, 0x0a, 0x12, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x6d, 0x41, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x2e, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90,
	0x01, 0x04, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x12, 0x28, 0x0a, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52,
	0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x05, 0x6f,
	0x72, 0x67, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05,
	0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x12, 0x26, 0x0a,
	0x0a, 0x64, 0x61, 0x74, 0x61, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x07, 0x70, 0x6c,
	0x61, 0x6e, 0x5f, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x63, 0x63, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x63, 0x63, 0x69, 0x64, 0x12, 0xde, 0x01, 0x0a, 0x06,
	0x6d, 0x73, 0x69, 0x73, 0x64, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0xc5, 0x01, 0xe2,
	0xdf, 0x1f, 0xc0, 0x01, 0x0a, 0x9e, 0x01, 0x5e, 0x24, 0x7c, 0x5e, 0x28, 0x3f, 0x3a, 0x28, 0x3f,
	0x3a, 0x5c, 0x28, 0x3f, 0x28, 0x3f, 0x3a, 0x30, 0x30, 0x7c, 0x5c, 0x2b, 0x29, 0x28, 0x5b, 0x31,
	0x2d, 0x34, 0x5d, 0x5c, 0x64, 0x5c, 0x64, 0x7c, 0x5b, 0x31, 0x2d, 0x39, 0x5d, 0x5c, 0x64, 0x3f,
	0x29, 0x5c, 0x29, 0x3f, 0x29, 0x3f, 0x5b, 0x5c, 0x2d, 0x5c, 0x2e, 0x5c, 0x20, 0x5c, 0x5c, 0x5c,
	0x2f, 0x5d, 0x3f, 0x29, 0x3f, 0x28, 0x28, 0x3f, 0x3a, 0x5c, 0x28, 0x3f, 0x5c, 0x64, 0x7b, 0x31,
	0x2c, 0x7d, 0x5c, 0x29, 0x3f, 0x5b, 0x5c, 0x2d, 0x5c, 0x2e, 0x5c, 0x20, 0x5c, 0x5c, 0x5c, 0x2f,
	0x5d, 0x3f, 0x29, 0x7b, 0x30, 0x2c, 0x7d, 0x29, 0x28, 0x3f, 0x3a, 0x5b, 0x5c, 0x2d, 0x5c, 0x2e,
	0x5c, 0x20, 0x5c, 0x5c, 0x5c, 0x2f, 0x5d, 0x3f, 0x28, 0x3f, 0x3a, 0x23, 0x7c, 0x65, 0x78, 0x74,
	0x5c, 0x2e, 0x3f, 0x7c, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x7c, 0x78, 0x29,
	0x5b, 0x5c, 0x2d, 0x5c, 0x2e, 0x5c, 0x20, 0x5c, 0x5c, 0x5c, 0x2f, 0x5d, 0x3f, 0x28, 0x5c, 0x64,
	0x2b, 0x29, 0x29, 0x3f, 0x24, 0x2a, 0x1d, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x61,
	0x20, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x52, 0x06, 0x6d, 0x73, 0x69, 0x73, 0x64, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x6d, 0x73, 0x69, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x73, 0x69,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0a,
	0x69, 0x73, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x69, 0x73, 0x5f, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x28, 0x0a,
	0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x0a, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0xba,
	0x02, 0x0a, 0x15, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x6d, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58,
	0x01, 0x90, 0x01, 0x04, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01,
	0x04, 0x52, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x12, 0x22, 0x0a,
	0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2,
	0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69,
	0x64, 0x12, 0x40, 0x0a, 0x10, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x63, 0x63, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x69, 0x63, 0x63, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73,
	0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x22, 0xa8, 0x01, 0x0a, 0x13,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x6d, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e,
	0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52,
	0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x63, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69,
	0x63, 0x63, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x22, 0xc5, 0x01, 0x0a, 0x12, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x53, 0x69, 0x6d, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58,
	0x01, 0x90, 0x01, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x63, 0x63, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x63, 0x63, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d,
	0x73, 0x69, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0xc7,
	0x01, 0x0a, 0x14, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x6d, 0x44, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x2e, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01,
	0x90, 0x01, 0x04, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x63, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x69, 0x63, 0x63, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73, 0x69,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0xc5, 0x01, 0x0a, 0x12, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x53, 0x69, 0x6d, 0x41, 0x64, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12,
	0x19, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f,
	0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x0c, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x0d, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x63,
	0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x63, 0x63, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x69, 0x6d, 0x73, 0x69, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x22, 0xc8, 0x01, 0x0a, 0x15, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x6d, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f,
	0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x63, 0x63, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x63, 0x63, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x6d, 0x73, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x15,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x6d, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x12, 0x19, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x26, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52,
	0x07, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f,
	0x05, 0x58, 0x01, 0x90, 0x01, 0x04, 0x52, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x64, 0x42, 0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x75, 0x6b, 0x61, 0x6d, 0x61, 0x2f, 0x75, 0x6b, 0x61, 0x6d, 0x61, 0x2f, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x2f, 0x67,
	0x65, 0x6e, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_events_simmanager_proto_rawDescOnce sync.Once
	file_events_simmanager_proto_rawDescData = file_events_simmanager_proto_rawDesc
)

func file_events_simmanager_proto_rawDescGZIP() []byte {
	file_events_simmanager_proto_rawDescOnce.Do(func() {
		file_events_simmanager_proto_rawDescData = protoimpl.X.CompressGZIP(file_events_simmanager_proto_rawDescData)
	})
	return file_events_simmanager_proto_rawDescData
}

var file_events_simmanager_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_events_simmanager_proto_goTypes = []any{
	(*EventSimUsage)(nil),         // 0: ukama.events.v1.EventSimUsage
	(*EventSimAllocation)(nil),    // 1: ukama.events.v1.EventSimAllocation
	(*EventSimActivePackage)(nil), // 2: ukama.events.v1.EventSimActivePackage
	(*EventSimTermination)(nil),   // 3: ukama.events.v1.EventSimTermination
	(*EventSimActivation)(nil),    // 4: ukama.events.v1.EventSimActivation
	(*EventSimDeactivation)(nil),  // 5: ukama.events.v1.EventSimDeactivation
	(*EventSimAddPackage)(nil),    // 6: ukama.events.v1.EventSimAddPackage
	(*EventSimRemovePackage)(nil), // 7: ukama.events.v1.EventSimRemovePackage
	(*EventSimPackageExpire)(nil), // 8: ukama.events.v1.EventSimPackageExpire
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
}
var file_events_simmanager_proto_depIdxs = []int32{
	9, // 0: ukama.events.v1.EventSimActivePackage.packageStartDate:type_name -> google.protobuf.Timestamp
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_events_simmanager_proto_init() }
func file_events_simmanager_proto_init() {
	if File_events_simmanager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_events_simmanager_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*EventSimUsage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_simmanager_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*EventSimAllocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_simmanager_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*EventSimActivePackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_simmanager_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*EventSimTermination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_simmanager_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*EventSimActivation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_simmanager_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*EventSimDeactivation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_simmanager_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*EventSimAddPackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_simmanager_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*EventSimRemovePackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_simmanager_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*EventSimPackageExpire); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_events_simmanager_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_events_simmanager_proto_goTypes,
		DependencyIndexes: file_events_simmanager_proto_depIdxs,
		MessageInfos:      file_events_simmanager_proto_msgTypes,
	}.Build()
	File_events_simmanager_proto = out.File
	file_events_simmanager_proto_rawDesc = nil
	file_events_simmanager_proto_goTypes = nil
	file_events_simmanager_proto_depIdxs = nil
}
