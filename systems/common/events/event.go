package events

const (
	EventOrgAdd             = "event.cloud.local.{{ .Org}}.nucleus.org.org.add"
	EventUserAdd            = "event.cloud.local.{{ .Org}}.nucleus.user.user.add"
	EventUserDeactivate     = "event.cloud.local.{{ .Org}}.nucleus.user.user.deactivate"
	EventUserDelete         = "event.cloud.local.{{ .Org}}.nucleus.user.user.delete"
	EventMemberCreate       = "event.cloud.local.{{ .Org}}.registry.member.member.create"
	EventMemberDelete       = "event.cloud.local.{{ .Org}}.registry.member.member.delete"
	EventNetworkAdd         = "event.cloud.local.{{ .Org}}.registry.network.network.add"
	EventNetworkDelete      = "event.cloud.local.{{ .Org}}.registry.network.network.delete"
	EventNodeCreate         = "event.cloud.local.{{ .Org}}.registry.node.node.create"
	EventNodeUpdate         = "event.cloud.local.{{ .Org}}.registry.node.node.update"
	EventNodeStateUpdate    = "event.cloud.local.{{ .Org}}.registry.node.node.state.update"
	EventNodeDelete         = "event.cloud.local.{{ .Org}}.registry.node.node.delete"
	EventNodeAssign         = "event.cloud.local.{{ .Org}}.registry.node.node.assign"
	EventNodeRelease        = "event.cloud.local.{{ .Org}}.registry.node.node.release"
	EventInviteCreate       = "event.cloud.local.{{ .Org}}.registry.invitation.invite.create"
	EventInviteDelete       = "event.cloud.local.{{ .Org}}.registry.invitation.invite.delete"
	EventInviteUpdate       = "event.cloud.local.{{ .Org}}.registry.invitation.invite.update"
	EventMeshNodeOnline     = "event.cloud.local.{{ .Org}}.messaging.mesh.node.online"
	EventMeshNodeOffline    = "event.cloud.local.{{ .Org}}.messaging.mesh.node.offline"
	EventSimActivate        = "event.cloud.local.{{ .Org}}.subscriber.simmanager.sim.activate"
	EventSimAllocate        = "event.cloud.local.{{ .Org}}.subscriber.simmanager.sim.allocate"
	EventSimDelete          = "event.cloud.local.{{ .Org}}.subscriber.simmanager.sim.delete"
	EventSimAddPackage      = "event.cloud.local.{{ .Org}}.subscriber.simmanager.sim.addpackage"
	EventSimActivePackage   = "event.cloud.local.{{ .Org}}.subscriber.simmanager.sim.activepackage"
	EventSimRemovePackage   = "event.cloud.local.{{ .Org}}.subscriber.simmanager.sim.removepackage"
	EventSubscriberCreate   = "event.cloud.local.{{ .Org}}.subscriber.registry.subscriber.create"
	EventSubscriberUpdate   = "event.cloud.local.{{ .Org}}.subscriber.registry.subscriber.update"
	EventSubscriberDelete   = "event.cloud.local.{{ .Org}}.subscriber.registry.subscriber.delete"
	EventSimsUpload         = "event.cloud.local.{{ .Org}}.subscriber.simpool.sims.upload"
	EventBaserateUpload     = "event.cloud.local.{{ .Org}}.dataplan.baserate.rates.upload"
	EventPackageCreate      = "event.cloud.local.{{ .Org}}.dataplan.package.package.create"
	EventPackageUpdate      = "event.cloud.local.{{ .Org}}.dataplan.package.package.update"
	EventPackageDelete      = "event.cloud.local.{{ .Org}}.dataplan.package.package.delete"
	EventMarkupUpdate       = "event.cloud.local.{{ .Org}}.dataplan.rate.markup.update"
	EventMarkupDelete       = "event.cloud.local.{{ .Org}}.dataplan.rate.markup.delete"
	EventComponentsSync     = "event.cloud.local.{{ .Org}}.inventory.component.components.sync"
	EventAccountingSync     = "event.cloud.local.{{ .Org}}.inventory.accounting.accounting.sync"
	EventInvoiceGenerate    = "event.cloud.local.{{ .Org}}.billing.invoice.invoice.generate"
	EventInvoiceDelete      = "event.cloud.local.{{ .Org}}.billing.invoice.invoice.delete"
	EventHealthCAPPStore    = "event.cloud.local.{{ .Org}}.node.health.capps.store"
	EventNotificationDelete = "event.cloud.local.{{ .Org}}.notification.notify.notification.delete"
	EventNotificationStore  = "event.cloud.local.{{ .Org}}.notification.notify.notification.store"
)

