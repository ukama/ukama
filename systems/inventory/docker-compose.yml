version: '3.3'
services:
 postgresd-inventory:
  image: postgres:13.3
  ports:
   - '5411:5432'
  environment:
   - POSTGRES_USER=postgres
   - POSTGRES_PASSWORD=Pass2020!
  networks:
   - ukama-net
  volumes:
   - postgress-data:/var/lib/postgresql

 site:
  build:
   context: ./site
   dockerfile: ./Dockerfile
  environment:
   - DEBUGMODE=true
   - DB_HOST=postgresd-inventory
   - DB_PASSWORD=Pass2020!
   - DB_USER=postgres
   - ORGNAME=${ORGNAME}
   - QUEUE_URI=amqp://guest:guest@${LOCAL_HOST_IP}:5672
   - MSGCLIENT_HOST=msgclient-inventory:9095
   - SITE_SERVICE_HOST=site
   - SITE_SERVICE_PORT=9090
   - PUSHGATEWAY=http://${LOCAL_HOST_IP}:9099
   - ORGHOST=http://${LOCAL_HOST_IP}:8060
  restart: always
  networks:
   - ukama-net
  depends_on:
   - msgclient-inventory

 msgclient-inventory:
  build: ../services/msgClient
  environment:
   - DEBUGMODE=true
   - DB_HOST=postgresd-inventory
   - DB_PASSWORD=Pass2020!
   - DB_USER=postgres
   - QUEUE_URI=amqp://guest:guest@${LOCAL_HOST_IP}:5672
   - SYSTEM=inventory
  restart: always
  networks:
   - ukama-net
  depends_on:
   - postgresd-inventory

 initclient-inventory:
  image: main-init
  environment:
   - ENV_SYSTEM_ORG=${ORGNAME}
   - ENV_DNS_REFRESH_TIME_PERIOD=30
   - ENV_SYSTEM_NAME=inventory
   - ENV_SYSTEM_DNS=api-gateway-inventory
   - ENV_DNS_SERVER=false
   - ENV_SYSTEM_PORT=8080
   - ENV_SYSTEM_CERT=This-is-a-certificate
   - ENV_INIT_SYSTEM_ADDR=${LOCAL_HOST_IP}
   - ENV_INIT_SYSTEM_PORT=8071
   - ENV_INIT_CLIENT_ADDR=initclient-inventory
   - ENV_INIT_CLIENT_PORT=8080
   - ENV_INIT_CLIENT_TEMP_FILE=/tmp/tmpfile
  restart: always
  networks:
   - ukama-net

networks:
 ukama-net:
  external: true
  name: services_dev-net

volumes:
 postgress-data:
