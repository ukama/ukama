// Code generated by mockery v2.38.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	gen "github.com/ukama/ukama/systems/inventory/account/pb/gen"
)

// AccountServiceServer is an autogenerated mock type for the AccountServiceServer type
type AccountServiceServer struct {
	mock.Mock
}

// GetTest provides a mock function with given fields: _a0, _a1
func (_m *AccountServiceServer) GetTest(_a0 context.Context, _a1 *gen.GetTestRequest) (*gen.GetTestResponse, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for GetTest")
	}

	var r0 *gen.GetTestResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *gen.GetTestRequest) (*gen.GetTestResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *gen.GetTestRequest) *gen.GetTestResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*gen.GetTestResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *gen.GetTestRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// mustEmbedUnimplementedAccountServiceServer provides a mock function with given fields:
func (_m *AccountServiceServer) mustEmbedUnimplementedAccountServiceServer() {
	_m.Called()
}

// NewAccountServiceServer creates a new instance of AccountServiceServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAccountServiceServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *AccountServiceServer {
	mock := &AccountServiceServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
