generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Location {
  id      String @unique
  lat     String
  lng     String
  address String
  Site    Site[]
}

model Link {
  id      String  @unique @default(cuid())
  siteA   String
  siteB   String
  Draft   Draft?  @relation(fields: [draftId], references: [id])
  draftId String?
}

model Site {
  id                String   @unique @default(cuid())
  height            Int
  solarUptime       Int
  name              String
  status            String
  apOption          String
  draftId           String
  isSetlite         Boolean
  locationId        String
  north             Float
  west              Float
  east              Float
  south             Float
  url               String
  populationUrl     String
  populationCovered Float
  totalBoxesCovered Float
  location          Location @relation(fields: [locationId], references: [id], onDelete: Cascade)
  Draft             Draft?   @relation(fields: [draftId], references: [id], onDelete: Cascade)
}

model Event {
  id        String   @unique @default(cuid())
  operation String
  value     String
  Draft     Draft?   @relation(fields: [draftId], references: [id], onDelete: Cascade)
  draftId   String?
  createdAt DateTime @default(now())
}

model Draft {
  id        String   @unique @default(cuid())
  userId    String
  name      String
  events    Event[]
  sites     Site[]
  links     Link[]
  lastSaved Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId], type: Hash)
}
