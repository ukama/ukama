// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	db "github.com/ukama/ukama/systems/data-plan/base-rate/pkg/db"

	testing "testing"

	uuid "github.com/google/uuid"
)

// BaseRateRepo is an autogenerated mock type for the BaseRateRepo type
type BaseRateRepo struct {
	mock.Mock
}

// GetBaseRate provides a mock function with given fields: Id
func (_m *BaseRateRepo) GetBaseRate(Id uuid.UUID) (*db.Rate, error) {
	ret := _m.Called(Id)

	var r0 *db.Rate
	if rf, ok := ret.Get(0).(func(uuid.UUID) *db.Rate); ok {
		r0 = rf(Id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*db.Rate)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uuid.UUID) error); ok {
		r1 = rf(Id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewBaseRateRepo creates a new instance of BaseRateRepo. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewBaseRateRepo(t testing.TB) *BaseRateRepo {
	mock := &BaseRateRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
