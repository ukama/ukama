// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: pb/data-plan.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UploadRatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileUrl     string `protobuf:"bytes,1,opt,name=fileUrl,proto3" json:"fileUrl,omitempty"`
	EffectiveAt string `protobuf:"bytes,2,opt,name=effectiveAt,proto3" json:"effectiveAt,omitempty"`
}

func (x *UploadRatesRequest) Reset() {
	*x = UploadRatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_data_plan_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadRatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadRatesRequest) ProtoMessage() {}

func (x *UploadRatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_plan_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadRatesRequest.ProtoReflect.Descriptor instead.
func (*UploadRatesRequest) Descriptor() ([]byte, []int) {
	return file_pb_data_plan_proto_rawDescGZIP(), []int{0}
}

func (x *UploadRatesRequest) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

func (x *UploadRatesRequest) GetEffectiveAt() string {
	if x != nil {
		return x.EffectiveAt
	}
	return ""
}

type UploadRatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rate []*Rate `protobuf:"bytes,1,rep,name=rate,proto3" json:"rate,omitempty"`
}

func (x *UploadRatesResponse) Reset() {
	*x = UploadRatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_data_plan_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadRatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadRatesResponse) ProtoMessage() {}

func (x *UploadRatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_plan_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadRatesResponse.ProtoReflect.Descriptor instead.
func (*UploadRatesResponse) Descriptor() ([]byte, []int) {
	return file_pb_data_plan_proto_rawDescGZIP(), []int{1}
}

func (x *UploadRatesResponse) GetRate() []*Rate {
	if x != nil {
		return x.Rate
	}
	return nil
}

type Rate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Country           string `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	CountryOnCronus   string `protobuf:"bytes,3,opt,name=country_on_cronus,json=countryOnCronus,proto3" json:"country_on_cronus,omitempty"`
	Network           string `protobuf:"bytes,4,opt,name=network,proto3" json:"network,omitempty"`
	NetworkIdOnCronus string `protobuf:"bytes,5,opt,name=network_id_on_cronus,json=networkIdOnCronus,proto3" json:"network_id_on_cronus,omitempty"`
	Vpmn              string `protobuf:"bytes,6,opt,name=vpmn,proto3" json:"vpmn,omitempty"`
	Imsi              string `protobuf:"bytes,7,opt,name=imsi,proto3" json:"imsi,omitempty"`
	SmsMo             string `protobuf:"bytes,8,opt,name=sms_mo,json=smsMo,proto3" json:"sms_mo,omitempty"`
	SmsMt             string `protobuf:"bytes,9,opt,name=sms_mt,json=smsMt,proto3" json:"sms_mt,omitempty"`
	Data              string `protobuf:"bytes,10,opt,name=data,proto3" json:"data,omitempty"`
	X2G               string `protobuf:"bytes,11,opt,name=_2g,json=2g,proto3" json:"_2g,omitempty"`
	X3G               string `protobuf:"bytes,12,opt,name=_3g,json=3g,proto3" json:"_3g,omitempty"`
	Lte               string `protobuf:"bytes,13,opt,name=lte,proto3" json:"lte,omitempty"`
	LteM              string `protobuf:"bytes,14,opt,name=lte_m,json=lteM,proto3" json:"lte_m,omitempty"`
	Apn               string `protobuf:"bytes,15,opt,name=apn,proto3" json:"apn,omitempty"`
	CreatedAt         string `protobuf:"bytes,16,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	EffectiveAt       string `protobuf:"bytes,17,opt,name=effective_at,json=effectiveAt,proto3" json:"effective_at,omitempty"`
	EndAt             string `protobuf:"bytes,18,opt,name=end_at,json=endAt,proto3" json:"end_at,omitempty"`
}

func (x *Rate) Reset() {
	*x = Rate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_data_plan_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rate) ProtoMessage() {}

func (x *Rate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_plan_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rate.ProtoReflect.Descriptor instead.
func (*Rate) Descriptor() ([]byte, []int) {
	return file_pb_data_plan_proto_rawDescGZIP(), []int{2}
}

func (x *Rate) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Rate) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Rate) GetCountryOnCronus() string {
	if x != nil {
		return x.CountryOnCronus
	}
	return ""
}

func (x *Rate) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Rate) GetNetworkIdOnCronus() string {
	if x != nil {
		return x.NetworkIdOnCronus
	}
	return ""
}

func (x *Rate) GetVpmn() string {
	if x != nil {
		return x.Vpmn
	}
	return ""
}

func (x *Rate) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *Rate) GetSmsMo() string {
	if x != nil {
		return x.SmsMo
	}
	return ""
}

func (x *Rate) GetSmsMt() string {
	if x != nil {
		return x.SmsMt
	}
	return ""
}

func (x *Rate) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *Rate) GetX2G() string {
	if x != nil {
		return x.X2G
	}
	return ""
}

func (x *Rate) GetX3G() string {
	if x != nil {
		return x.X3G
	}
	return ""
}

func (x *Rate) GetLte() string {
	if x != nil {
		return x.Lte
	}
	return ""
}

func (x *Rate) GetLteM() string {
	if x != nil {
		return x.LteM
	}
	return ""
}

func (x *Rate) GetApn() string {
	if x != nil {
		return x.Apn
	}
	return ""
}

func (x *Rate) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Rate) GetEffectiveAt() string {
	if x != nil {
		return x.EffectiveAt
	}
	return ""
}

func (x *Rate) GetEndAt() string {
	if x != nil {
		return x.EndAt
	}
	return ""
}

var File_pb_data_plan_proto protoreflect.FileDescriptor

var file_pb_data_plan_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x62, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x75, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x50, 0x6c, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x22, 0x50, 0x0a, 0x12, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x66, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x41, 0x74, 0x22, 0x42, 0x0a, 0x13, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2b, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x75, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x50, 0x6c, 0x61, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x22, 0xc5, 0x03,
	0x0a, 0x04, 0x52, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6f, 0x6e, 0x5f, 0x63,
	0x72, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x4f, 0x6e, 0x43, 0x72, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x2f, 0x0a, 0x14, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x69, 0x64, 0x5f, 0x6f, 0x6e, 0x5f, 0x63, 0x72, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x4f,
	0x6e, 0x43, 0x72, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x70, 0x6d, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x76, 0x70, 0x6d, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x6d, 0x73, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x12,
	0x15, 0x0a, 0x06, 0x73, 0x6d, 0x73, 0x5f, 0x6d, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x6d, 0x73, 0x4d, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6d, 0x73, 0x5f, 0x6d, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6d, 0x73, 0x4d, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x0f, 0x0a, 0x03, 0x5f, 0x32, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x32, 0x67, 0x12, 0x0f, 0x0a, 0x03, 0x5f, 0x33, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x33, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6c, 0x74, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x6c, 0x74, 0x65, 0x5f, 0x6d, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x74, 0x65, 0x4d, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70,
	0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x65,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x41, 0x74, 0x12, 0x15,
	0x0a, 0x06, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6e, 0x64, 0x41, 0x74, 0x32, 0x6c, 0x0a, 0x0c, 0x52, 0x61, 0x74, 0x65, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5c, 0x0a, 0x0b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x25, 0x2e, 0x75, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x50, 0x6c, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x75, 0x6b,
	0x61, 0x6d, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x50, 0x6c, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x08, 0x5a, 0x06, 0x70, 0x62, 0x2f, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_data_plan_proto_rawDescOnce sync.Once
	file_pb_data_plan_proto_rawDescData = file_pb_data_plan_proto_rawDesc
)

func file_pb_data_plan_proto_rawDescGZIP() []byte {
	file_pb_data_plan_proto_rawDescOnce.Do(func() {
		file_pb_data_plan_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_data_plan_proto_rawDescData)
	})
	return file_pb_data_plan_proto_rawDescData
}

var file_pb_data_plan_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pb_data_plan_proto_goTypes = []interface{}{
	(*UploadRatesRequest)(nil),  // 0: ukama.dataPlan.v1.UploadRatesRequest
	(*UploadRatesResponse)(nil), // 1: ukama.dataPlan.v1.UploadRatesResponse
	(*Rate)(nil),                // 2: ukama.dataPlan.v1.Rate
}
var file_pb_data_plan_proto_depIdxs = []int32{
	2, // 0: ukama.dataPlan.v1.UploadRatesResponse.rate:type_name -> ukama.dataPlan.v1.Rate
	0, // 1: ukama.dataPlan.v1.RatesService.UploadRates:input_type -> ukama.dataPlan.v1.UploadRatesRequest
	1, // 2: ukama.dataPlan.v1.RatesService.UploadRates:output_type -> ukama.dataPlan.v1.UploadRatesResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pb_data_plan_proto_init() }
func file_pb_data_plan_proto_init() {
	if File_pb_data_plan_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_data_plan_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadRatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_data_plan_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadRatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_data_plan_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_data_plan_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_data_plan_proto_goTypes,
		DependencyIndexes: file_pb_data_plan_proto_depIdxs,
		MessageInfos:      file_pb_data_plan_proto_msgTypes,
	}.Build()
	File_pb_data_plan_proto = out.File
	file_pb_data_plan_proto_rawDesc = nil
	file_pb_data_plan_proto_goTypes = nil
	file_pb_data_plan_proto_depIdxs = nil
}
