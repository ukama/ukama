// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: rate.proto

package gen

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	_ "github.com/ukama/ukama/systems/data-plan/base-rate/pb/gen"
	regexp "regexp"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *MarkupRates) Validate() error {
	return nil
}
func (this *UpdateMarkupRequest) Validate() error {
	if this.OwnerId == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("OwnerId", fmt.Errorf(`value '%v' must not be an empty string`, this.OwnerId))
	}
	return nil
}
func (this *UpdateMarkupResponse) Validate() error {
	return nil
}
func (this *DeleteMarkupRequest) Validate() error {
	if this.OwnerId == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("OwnerId", fmt.Errorf(`value '%v' must not be an empty string`, this.OwnerId))
	}
	return nil
}
func (this *DeleteMarkupResponse) Validate() error {
	return nil
}
func (this *GetMarkupRequest) Validate() error {
	if this.OwnerId == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("OwnerId", fmt.Errorf(`value '%v' must not be an empty string`, this.OwnerId))
	}
	return nil
}
func (this *GetMarkupResponse) Validate() error {
	if this.OwnerId == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("OwnerId", fmt.Errorf(`value '%v' must not be an empty string`, this.OwnerId))
	}
	return nil
}
func (this *GetDefaultMarkupRequest) Validate() error {
	return nil
}
func (this *GetDefaultMarkupResponse) Validate() error {
	return nil
}
func (this *GetDefaultMarkupHistoryRequest) Validate() error {
	return nil
}
func (this *GetDefaultMarkupHistoryResponse) Validate() error {
	for _, item := range this.MarkupRates {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("MarkupRates", err)
			}
		}
	}
	return nil
}
func (this *GetMarkupHistoryRequest) Validate() error {
	if this.OwnerId == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("OwnerId", fmt.Errorf(`value '%v' must not be an empty string`, this.OwnerId))
	}
	return nil
}
func (this *GetMarkupHistoryResponse) Validate() error {
	if this.OwnerId == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("OwnerId", fmt.Errorf(`value '%v' must not be an empty string`, this.OwnerId))
	}
	for _, item := range this.MarkupRates {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("MarkupRates", err)
			}
		}
	}
	return nil
}
func (this *UpdateDefaultMarkupRequest) Validate() error {
	return nil
}
func (this *UpdateDefaultMarkupResponse) Validate() error {
	return nil
}
func (this *GetRatesRequest) Validate() error {
	return nil
}
func (this *GetRatesResponse) Validate() error {
	for _, item := range this.Rates {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Rates", err)
			}
		}
	}
	return nil
}

var _regex_GetRateRequest_OwnerId = regexp.MustCompile(`^([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[4][a-fA-F0-9]{3}-[8|9|aA|bB][a-fA-F0-9]{3}-[a-fA-F0-9]{12})?$`)

func (this *GetRateRequest) Validate() error {
	if !_regex_GetRateRequest_OwnerId.MatchString(this.OwnerId) {
		return github_com_mwitkow_go_proto_validators.FieldError("OwnerId", fmt.Errorf(`value '%v' must be a string conforming to regex "^([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[4][a-fA-F0-9]{3}-[8|9|aA|bB][a-fA-F0-9]{3}-[a-fA-F0-9]{12})?$"`, this.OwnerId))
	}
	if this.OwnerId == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("OwnerId", fmt.Errorf(`value '%v' must not be an empty string`, this.OwnerId))
	}
	return nil
}
func (this *GetRateResponse) Validate() error {
	for _, item := range this.Rates {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Rates", err)
			}
		}
	}
	return nil
}

var _regex_GetRateByIdRequest_OwnerId = regexp.MustCompile(`^([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[4][a-fA-F0-9]{3}-[8|9|aA|bB][a-fA-F0-9]{3}-[a-fA-F0-9]{12})?$`)
var _regex_GetRateByIdRequest_BaseRate = regexp.MustCompile(`^([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[4][a-fA-F0-9]{3}-[8|9|aA|bB][a-fA-F0-9]{3}-[a-fA-F0-9]{12})?$`)

func (this *GetRateByIdRequest) Validate() error {
	if !_regex_GetRateByIdRequest_OwnerId.MatchString(this.OwnerId) {
		return github_com_mwitkow_go_proto_validators.FieldError("OwnerId", fmt.Errorf(`value '%v' must be a string conforming to regex "^([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[4][a-fA-F0-9]{3}-[8|9|aA|bB][a-fA-F0-9]{3}-[a-fA-F0-9]{12})?$"`, this.OwnerId))
	}
	if this.OwnerId == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("OwnerId", fmt.Errorf(`value '%v' must not be an empty string`, this.OwnerId))
	}
	if !_regex_GetRateByIdRequest_BaseRate.MatchString(this.BaseRate) {
		return github_com_mwitkow_go_proto_validators.FieldError("BaseRate", fmt.Errorf(`value '%v' must be a string conforming to regex "^([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[4][a-fA-F0-9]{3}-[8|9|aA|bB][a-fA-F0-9]{3}-[a-fA-F0-9]{12})?$"`, this.BaseRate))
	}
	if this.BaseRate == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("BaseRate", fmt.Errorf(`value '%v' must not be an empty string`, this.BaseRate))
	}
	return nil
}
func (this *GetRateByIdResponse) Validate() error {
	if this.Rate != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Rate); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Rate", err)
		}
	}
	return nil
}
