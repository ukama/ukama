// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: msgClient.proto

package gen

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/protobuf/types/known/anypb"
	regexp "regexp"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *RegisterServiceReq) Validate() error {
	if this.SystemName == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("SystemName", fmt.Errorf(`value '%v' must not be an empty string`, this.SystemName))
	}
	if this.ServiceName == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("ServiceName", fmt.Errorf(`value '%v' must not be an empty string`, this.ServiceName))
	}
	if this.InstanceId == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("InstanceId", fmt.Errorf(`value '%v' must not be an empty string`, this.InstanceId))
	}
	if this.MsgBusURI == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("MsgBusURI", fmt.Errorf(`value '%v' must not be an empty string`, this.MsgBusURI))
	}
	return nil
}
func (this *RegisterServiceResp) Validate() error {
	return nil
}
func (this *UnregisterServiceReq) Validate() error {
	if this.ServiceUuid == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("ServiceUuid", fmt.Errorf(`value '%v' must not be an empty string`, this.ServiceUuid))
	}
	return nil
}
func (this *UnregisterServiceResp) Validate() error {
	return nil
}
func (this *StartMsgBusHandlerReq) Validate() error {
	if this.ServiceUuid == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("ServiceUuid", fmt.Errorf(`value '%v' must not be an empty string`, this.ServiceUuid))
	}
	return nil
}
func (this *StopMsgBusHandlerReq) Validate() error {
	if this.ServiceUuid == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("ServiceUuid", fmt.Errorf(`value '%v' must not be an empty string`, this.ServiceUuid))
	}
	return nil
}
func (this *StartMsgBusHandlerResp) Validate() error {
	return nil
}
func (this *StopMsgBusHandlerResp) Validate() error {
	return nil
}
func (this *PublishMsgRequest) Validate() error {
	if this.ServiceUuid == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("ServiceUuid", fmt.Errorf(`value '%v' must not be an empty string`, this.ServiceUuid))
	}
	if this.RoutingKey == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("RoutingKey", fmt.Errorf(`value '%v' must not be an empty string`, this.RoutingKey))
	}
	if this.Msg != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Msg); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Msg", err)
		}
	}
	return nil
}
func (this *PublishMsgResponse) Validate() error {
	return nil
}

var _regex_NodeFeederReq_Org = regexp.MustCompile(`^([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[4][a-fA-F0-9]{3}-[8|9|aA|bB][a-fA-F0-9]{3}-[a-fA-F0-9]{12})?$`)

func (this *NodeFeederReq) Validate() error {
	if !_regex_NodeFeederReq_Org.MatchString(this.Org) {
		return github_com_mwitkow_go_proto_validators.FieldError("Org", fmt.Errorf(`value '%v' must be a string conforming to regex "^([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[4][a-fA-F0-9]{3}-[8|9|aA|bB][a-fA-F0-9]{3}-[a-fA-F0-9]{12})?$"`, this.Org))
	}
	if this.Org == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Org", fmt.Errorf(`value '%v' must not be an empty string`, this.Org))
	}
	if this.Node == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Node", fmt.Errorf(`value '%v' must not be an empty string`, this.Node))
	}
	if this.Path == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Path", fmt.Errorf(`value '%v' must not be an empty string`, this.Path))
	}
	if this.Method == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Method", fmt.Errorf(`value '%v' must not be an empty string`, this.Method))
	}
	return nil
}
func (this *NodeFeederResp) Validate() error {
	return nil
}
