// Code generated by mockery v2.53.2. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	gen "github.com/ukama/ukama/systems/init/bootstrap/pb/gen"
)

// BootstrapEP is an autogenerated mock type for the BootstrapEP type
type BootstrapEP struct {
	mock.Mock
}

// GetNodeCredentials provides a mock function with given fields: req
func (_m *BootstrapEP) GetNodeCredentials(req *gen.GetNodeCredentialsRequest) (*gen.GetNodeCredentialsResponse, error) {
	ret := _m.Called(req)

	if len(ret) == 0 {
		panic("no return value specified for GetNodeCredentials")
	}

	var r0 *gen.GetNodeCredentialsResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(*gen.GetNodeCredentialsRequest) (*gen.GetNodeCredentialsResponse, error)); ok {
		return rf(req)
	}
	if rf, ok := ret.Get(0).(func(*gen.GetNodeCredentialsRequest) *gen.GetNodeCredentialsResponse); ok {
		r0 = rf(req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*gen.GetNodeCredentialsResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(*gen.GetNodeCredentialsRequest) error); ok {
		r1 = rf(req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewBootstrapEP creates a new instance of BootstrapEP. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewBootstrapEP(t interface {
	mock.TestingT
	Cleanup(func())
}) *BootstrapEP {
	mock := &BootstrapEP{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
