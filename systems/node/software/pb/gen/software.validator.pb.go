// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: software.proto

package gen

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	_ "google.golang.org/protobuf/types/known/wrapperspb"
	regexp "regexp"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *UpdateSoftwareRequest) Validate() error {
	return nil
}
func (this *UpdateSoftwareResponse) Validate() error {
	return nil
}
func (this *CreateSoftwareUpdateRequest) Validate() error {
	return nil
}
func (this *CreateSoftwareUpdateResponse) Validate() error {
	if this.SoftwareUpdate != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SoftwareUpdate); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SoftwareUpdate", err)
		}
	}
	return nil
}

var _regex_SoftwareUpdate_Id = regexp.MustCompile(`^([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[4][a-fA-F0-9]{3}-[8|9|aA|bB][a-fA-F0-9]{3}-[a-fA-F0-9]{12})?$`)

func (this *SoftwareUpdate) Validate() error {
	if !_regex_SoftwareUpdate_Id.MatchString(this.Id) {
		return github_com_mwitkow_go_proto_validators.FieldError("Id", fmt.Errorf(`value '%v' must be a string conforming to regex "^([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[4][a-fA-F0-9]{3}-[8|9|aA|bB][a-fA-F0-9]{3}-[a-fA-F0-9]{12})?$"`, this.Id))
	}
	if this.Id == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Id", fmt.Errorf(`value '%v' must not be an empty string`, this.Id))
	}
	return nil
}
func (this *GetLatestSoftwareUpdateRequest) Validate() error {
	return nil
}
func (this *GetLatestSoftwareUpdateResponse) Validate() error {
	if this.SoftwareUpdate != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SoftwareUpdate); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SoftwareUpdate", err)
		}
	}
	return nil
}
