// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: software_manager.proto

package gen

import (
	_ "github.com/mwitkow/go-proto-validators"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	_ "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Status int32

const (
	Status_Stable Status = 0
	Status_Beta   Status = 1
	Status_Alpha  Status = 2
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "Stable",
		1: "Beta",
		2: "Alpha",
	}
	Status_value = map[string]int32{
		"Stable": 0,
		"Beta":   1,
		"Alpha":  2,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_software_manager_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_software_manager_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_software_manager_proto_rawDescGZIP(), []int{0}
}

type CreateSoftwareUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tag  string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *CreateSoftwareUpdateRequest) Reset() {
	*x = CreateSoftwareUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_software_manager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSoftwareUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSoftwareUpdateRequest) ProtoMessage() {}

func (x *CreateSoftwareUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_software_manager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSoftwareUpdateRequest.ProtoReflect.Descriptor instead.
func (*CreateSoftwareUpdateRequest) Descriptor() ([]byte, []int) {
	return file_software_manager_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSoftwareUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateSoftwareUpdateRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type CreateSoftwareUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SoftwareUpdate *SoftwareUpdate `protobuf:"bytes,1,opt,name=software_update,json=softwareUpdate,proto3" json:"software_update,omitempty"`
}

func (x *CreateSoftwareUpdateResponse) Reset() {
	*x = CreateSoftwareUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_software_manager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSoftwareUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSoftwareUpdateResponse) ProtoMessage() {}

func (x *CreateSoftwareUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_software_manager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSoftwareUpdateResponse.ProtoReflect.Descriptor instead.
func (*CreateSoftwareUpdateResponse) Descriptor() ([]byte, []int) {
	return file_software_manager_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSoftwareUpdateResponse) GetSoftwareUpdate() *SoftwareUpdate {
	if x != nil {
		return x.SoftwareUpdate
	}
	return nil
}

type SoftwareUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Tag         string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	ReleaseDate string `protobuf:"bytes,4,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	Status      Status `protobuf:"varint,6,opt,name=status,proto3,enum=ukama.node.software_manager.v1.Status" json:"status,omitempty"`
	Name        string `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SoftwareUpdate) Reset() {
	*x = SoftwareUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_software_manager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoftwareUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoftwareUpdate) ProtoMessage() {}

func (x *SoftwareUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_software_manager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoftwareUpdate.ProtoReflect.Descriptor instead.
func (*SoftwareUpdate) Descriptor() ([]byte, []int) {
	return file_software_manager_proto_rawDescGZIP(), []int{2}
}

func (x *SoftwareUpdate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SoftwareUpdate) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *SoftwareUpdate) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *SoftwareUpdate) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_Stable
}

func (x *SoftwareUpdate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetLatestSoftwareUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLatestSoftwareUpdateRequest) Reset() {
	*x = GetLatestSoftwareUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_software_manager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestSoftwareUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestSoftwareUpdateRequest) ProtoMessage() {}

func (x *GetLatestSoftwareUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_software_manager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestSoftwareUpdateRequest.ProtoReflect.Descriptor instead.
func (*GetLatestSoftwareUpdateRequest) Descriptor() ([]byte, []int) {
	return file_software_manager_proto_rawDescGZIP(), []int{3}
}

type GetLatestSoftwareUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SoftwareUpdate *SoftwareUpdate `protobuf:"bytes,1,opt,name=software_update,json=softwareUpdate,proto3" json:"software_update,omitempty"`
}

func (x *GetLatestSoftwareUpdateResponse) Reset() {
	*x = GetLatestSoftwareUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_software_manager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestSoftwareUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestSoftwareUpdateResponse) ProtoMessage() {}

func (x *GetLatestSoftwareUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_software_manager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestSoftwareUpdateResponse.ProtoReflect.Descriptor instead.
func (*GetLatestSoftwareUpdateResponse) Descriptor() ([]byte, []int) {
	return file_software_manager_proto_rawDescGZIP(), []int{4}
}

func (x *GetLatestSoftwareUpdateResponse) GetSoftwareUpdate() *SoftwareUpdate {
	if x != nil {
		return x.SoftwareUpdate
	}
	return nil
}

var File_software_manager_proto protoreflect.FileDescriptor

var file_software_manager_proto_rawDesc = []byte{
	0x0a, 0x16, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x75, 0x6b, 0x61, 0x6d, 0x61, 0x2e,
	0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x43, 0x0a, 0x1b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22,
	0x77, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x57, 0x0a, 0x0f, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x75, 0x6b, 0x61, 0x6d, 0x61,
	0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61,
	0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0e, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61,
	0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0xb4, 0x01, 0x0a, 0x0e, 0x53, 0x6f, 0x66,
	0x74, 0x77, 0x61, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x58, 0x01, 0x90,
	0x01, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x75, 0x6b,
	0x61, 0x6d, 0x61, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72,
	0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x20, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x53, 0x6f, 0x66, 0x74,
	0x77, 0x61, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x7a, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x53, 0x6f,
	0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0f, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x75, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x73, 0x6f, 0x66, 0x74, 0x77,
	0x61, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0e, 0x73,
	0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2a, 0x29, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x65, 0x74, 0x61, 0x10, 0x01, 0x12, 0x09, 0x0a,
	0x05, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x10, 0x02, 0x32, 0xc9, 0x02, 0x0a, 0x16, 0x53, 0x6f, 0x66,
	0x74, 0x77, 0x61, 0x72, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x91, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6f,
	0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x2e, 0x75,
	0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61,
	0x72, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x75, 0x6b, 0x61, 0x6d,
	0x61, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x9a, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x3e, 0x2e, 0x75, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x6e, 0x6f, 0x64, 0x65,
	0x2e, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x53, 0x6f,
	0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x75, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x6e, 0x6f, 0x64, 0x65,
	0x2e, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x53, 0x6f,
	0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x75, 0x6b, 0x61, 0x6d, 0x61, 0x2f, 0x75, 0x6b, 0x61, 0x6d, 0x61, 0x2f, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x73, 0x6f, 0x66, 0x74,
	0x77, 0x61, 0x72, 0x65, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x70, 0x62, 0x2f,
	0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_software_manager_proto_rawDescOnce sync.Once
	file_software_manager_proto_rawDescData = file_software_manager_proto_rawDesc
)

func file_software_manager_proto_rawDescGZIP() []byte {
	file_software_manager_proto_rawDescOnce.Do(func() {
		file_software_manager_proto_rawDescData = protoimpl.X.CompressGZIP(file_software_manager_proto_rawDescData)
	})
	return file_software_manager_proto_rawDescData
}

var file_software_manager_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_software_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_software_manager_proto_goTypes = []interface{}{
	(Status)(0),                             // 0: ukama.node.software_manager.v1.Status
	(*CreateSoftwareUpdateRequest)(nil),     // 1: ukama.node.software_manager.v1.CreateSoftwareUpdateRequest
	(*CreateSoftwareUpdateResponse)(nil),    // 2: ukama.node.software_manager.v1.CreateSoftwareUpdateResponse
	(*SoftwareUpdate)(nil),                  // 3: ukama.node.software_manager.v1.SoftwareUpdate
	(*GetLatestSoftwareUpdateRequest)(nil),  // 4: ukama.node.software_manager.v1.GetLatestSoftwareUpdateRequest
	(*GetLatestSoftwareUpdateResponse)(nil), // 5: ukama.node.software_manager.v1.GetLatestSoftwareUpdateResponse
}
var file_software_manager_proto_depIdxs = []int32{
	3, // 0: ukama.node.software_manager.v1.CreateSoftwareUpdateResponse.software_update:type_name -> ukama.node.software_manager.v1.SoftwareUpdate
	0, // 1: ukama.node.software_manager.v1.SoftwareUpdate.status:type_name -> ukama.node.software_manager.v1.Status
	3, // 2: ukama.node.software_manager.v1.GetLatestSoftwareUpdateResponse.software_update:type_name -> ukama.node.software_manager.v1.SoftwareUpdate
	1, // 3: ukama.node.software_manager.v1.SoftwareManagerService.CreateSoftwareUpdate:input_type -> ukama.node.software_manager.v1.CreateSoftwareUpdateRequest
	4, // 4: ukama.node.software_manager.v1.SoftwareManagerService.GetLatestSoftwareUpdate:input_type -> ukama.node.software_manager.v1.GetLatestSoftwareUpdateRequest
	2, // 5: ukama.node.software_manager.v1.SoftwareManagerService.CreateSoftwareUpdate:output_type -> ukama.node.software_manager.v1.CreateSoftwareUpdateResponse
	5, // 6: ukama.node.software_manager.v1.SoftwareManagerService.GetLatestSoftwareUpdate:output_type -> ukama.node.software_manager.v1.GetLatestSoftwareUpdateResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_software_manager_proto_init() }
func file_software_manager_proto_init() {
	if File_software_manager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_software_manager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSoftwareUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_software_manager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSoftwareUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_software_manager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SoftwareUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_software_manager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestSoftwareUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_software_manager_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestSoftwareUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_software_manager_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_software_manager_proto_goTypes,
		DependencyIndexes: file_software_manager_proto_depIdxs,
		EnumInfos:         file_software_manager_proto_enumTypes,
		MessageInfos:      file_software_manager_proto_msgTypes,
	}.Build()
	File_software_manager_proto = out.File
	file_software_manager_proto_rawDesc = nil
	file_software_manager_proto_goTypes = nil
	file_software_manager_proto_depIdxs = nil
}
