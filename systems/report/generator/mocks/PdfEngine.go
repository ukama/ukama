// Code generated by mockery v2.49.0. DO NOT EDIT.

package mocks

import (
	io "io"

	mock "github.com/stretchr/testify/mock"
)

// PdfEngine is an autogenerated mock type for the PdfEngine type
type PdfEngine struct {
	mock.Mock
}

// Configure provides a mock function with given fields: _a0, _a1
func (_m *PdfEngine) Configure(_a0 io.ReadWriteCloser, _a1 uint) error {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for Configure")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(io.ReadWriteCloser, uint) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Generate provides a mock function with given fields: _a0
func (_m *PdfEngine) Generate(_a0 string) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for Generate")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewPdfEngine creates a new instance of PdfEngine. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPdfEngine(t interface {
	mock.TestingT
	Cleanup(func())
}) *PdfEngine {
	mock := &PdfEngine{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
