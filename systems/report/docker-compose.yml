version: '3.9'

services:
 postgresd-report:
  image: postgres:13.3
  ports:
   - '5417:5432'
  environment:
   - POSTGRES_USER=postgres
   - POSTGRES_PASSWORD=Pass2020!
  networks:
   - ukama-net
  volumes:
   - postgress-data:/var/lib/postgresql

 # Report System

 report:
  container_name: report-api-gateway
  build: ./api-gateway
  ports:
   - '8780:8080'
  environment:
   - DEBUGMODE=true
   - BYPASS_AUTH_MODE=true
  restart: always
  networks:
   - ukama-net
  depends_on:
   - postgresd-report
   - report-generator

 report-generator:
  build: ./generator
  environment:
   - DEBUGMODE=true
   - DB_HOST=postgresd-report
   - DB_PASSWORD=Pass2020!
   - DB_USER=postgres
   - QUEUE_URI=amqp://guest:guest@${LOCAL_HOST_IP}:5672
   - MSGCLIENT_HOST=msg-client-report:9095
   - GENERATOR_SERVICE_HOST=report-generator
   - GENERATOR_SERVICE_PORT=9090
   - ORGNAME=${ORGNAME}
   - ORGID=${ORGID}
  restart: always
  networks:
   - ukama-net
  depends_on:
   - postgresd-report


 msg-client-report:
  build: ../services/msgClient
  environment:
   - DEBUGMODE=true
   - DB_HOST=postgresd-report
   - DB_PASSWORD=Pass2020!
   - DB_USER=postgres
   - GRPC_PORT=9095
   - QUEUE_URI=amqp://guest:guest@${LOCAL_HOST_IP}:5672
   - SYSTEM=report
  restart: always
  networks:
   - ukama-net
  depends_on:
   - postgresd-report


 initclient-report:
  build:
   dockerfile: ./Dockerfile
   context: ../services/initClient
  environment:
   - ENV_SYSTEM_ORG=${ORGNAME}
   - ENV_SYSTEM_NAME=report
   - ENV_DNS_REFRESH_TIME_PERIOD=30
   - ENV_SYSTEM_DNS=api-gateway-report
   - ENV_DNS_SERVER=false
   - ENV_SYSTEM_PORT=8080
   - ENV_SYSTEM_CERT=This-is-a-certificate
   - ENV_INIT_SYSTEM_ADDR=${LOCAL_HOST_IP}
   - ENV_INIT_SYSTEM_PORT=8071
   - ENV_INIT_CLIENT_ADDR=initclient-report
   - ENV_INIT_CLIENT_PORT=8080
   - ENV_INIT_CLIENT_TEMP_FILE=/tmp/tmpfile
  restart: always
  networks:
   - ukama-net

networks:
 ukama-net:
  external: true
  name: services_ukama-net

volumes:
 postgress-data:
