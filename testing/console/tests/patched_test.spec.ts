// Code generated by playwright codegen. DO NOT EDIT.
import { test } from '@playwright/test';
import { TEST_USER_EMAIL, TEST_USER_PASSWORD, LOGIN_URL, CONSOLE_ROOT_URL } from '../constants';
import { faker } from '@faker-js/faker';
import { selectRandomOption } from '../utils';


test('Login Test', async ({ page }) => {
  await page.goto(LOGIN_URL);
  await page.getByRole('textbox', { name: 'EMAIL' }).click();
  await page.getByRole('textbox', { name: 'EMAIL' }).fill(TEST_USER_EMAIL);
  await page.getByRole('textbox', { name: 'EMAIL' }).press('Tab');
  await page.getByRole('textbox', { name: 'PASSWORD' }).fill(TEST_USER_PASSWORD);
  await page.getByRole('button', { name: 'LOG IN' }).click();
});

test('Onboarding Test', async ({ page }) => {
  await page.goto(LOGIN_URL);
  await page.getByRole('textbox', { name: 'EMAIL' }).click();
  await page.getByRole('textbox', { name: 'EMAIL' }).fill(TEST_USER_EMAIL);
  await page.getByRole('textbox', { name: 'EMAIL' }).press('Tab');
  await page.getByRole('textbox', { name: 'PASSWORD' }).fill(TEST_USER_PASSWORD);
  await page.getByRole('button', { name: 'LOG IN' }).click();
  await page.goto(`${CONSOLE_ROOT_URL}/welcome`);
  await page.getByRole('button', { name: 'Next' }).click();
  await page.getByRole('textbox', { name: 'Network name' }).click();
  await page.getByRole('textbox', { name: 'Network name' }).fill(`${faker.lorem.word(4)}-network`);
  await page.getByRole('button', { name: 'NAME NETWORK' }).click();
  await page.goto(
    'http://localhost:3000/configure?step=2&flow=onb',
  );
  await page
    .getByRole('checkbox', { name: 'I have installed my site' })
    .check();
  await page.getByRole('button', { name: 'Next' }).click();
  await page.waitForTimeout(5000);
          while (!(await page.getByRole('button', { name: 'Next' }).isVisible())) {
            await page.getByRole('button', { name: 'Retry' }).click();
            await page.waitForTimeout(5000);
          }
  await page.getByRole('button', { name: 'Next' }).click();
  await page.getByRole('textbox', { name: 'Site name' }).click();
  await page.getByRole('textbox', { name: 'Site name' }).fill(`${faker.lorem.word(5)}-site`);
  await page.getByRole('button', { name: 'Next' }).click();
  await page.getByRole('combobox', { name: 'SWITCH' }).click();
      await page.locator('li:nth-child(1)').click();
  await page.getByRole('combobox', { name: 'POWER' }).click();
      await page.locator('li:nth-child(1)').click();
  await page.getByRole('combobox', { name: 'BACKHAUL' }).click();
      await page.locator('li:nth-child(1)').click();
  await page.getByRole('button', { name: 'Configure site' }).click();
  await page.locator('#csv-file-input-onboarding').click();
  await page.locator('#csv-file-input-onboarding input[type="file"]').setInputFiles('/Users/salmannaseem/Documents/Github/ukama/ukama/testing/console/test-temp/Sims_5.csv');
  await page.getByRole('button', { name: 'Upload sims' }).click();
  await page.getByRole('button', { name: 'Continue to console' }).click();
});

test('Network Creation Test', async ({ page }) => {
  await page.goto(LOGIN_URL);
  await page.getByRole('textbox', { name: 'EMAIL' }).click();
  await page.getByRole('textbox', { name: 'EMAIL' }).fill(TEST_USER_EMAIL);
  await page.getByRole('textbox', { name: 'EMAIL' }).press('Tab');
  await page.getByRole('textbox', { name: 'PASSWORD' }).fill(TEST_USER_PASSWORD);
  await page.getByRole('button', { name: 'LOG IN' }).click();
  await page.getByTestId("create-network-select").click();
  await page.getByTestId('create-network-add-button').click();
  await page.getByRole('textbox', { name: 'Network name' }).click();
  await page.getByRole('textbox', { name: 'Network name' }).fill(`${faker.lorem.word(4)}-network`);
  await page.getByRole('button', { name: 'Submit' }).click();
});

test('Sim Pool Test', async ({ page }) => {
  await page.goto(LOGIN_URL);
  await page.getByRole('textbox', { name: 'EMAIL' }).click();
  await page.getByRole('textbox', { name: 'EMAIL' }).fill(TEST_USER_EMAIL);
  await page.getByRole('textbox', { name: 'EMAIL' }).press('Tab');
  await page.getByRole('textbox', { name: 'PASSWORD' }).fill(TEST_USER_PASSWORD);
  await page.getByRole('button', { name: 'LOG IN' }).click();
  await page.locator('#manage-btn').click();
  await page.getByRole('link', { name: 'SIM pool' }).click();
  await page.getByRole('button', { name: 'CLAIM SIMS' }).click();
  await page.locator('#csv-file-input').click();
  await page.locator('#csv-file-input input[type="file"]').setInputFiles('/Users/salmannaseem/Documents/Github/ukama/ukama/testing/console/test-temp/Sims_27.csv');
  await page.getByRole('button', { name: 'Claim' }).click();
});

test('Data Plan Creation Test', async ({ page }) => {
  await page.goto(LOGIN_URL);
  await page.getByRole('textbox', { name: 'EMAIL' }).click();
  await page.getByRole('textbox', { name: 'EMAIL' }).fill(TEST_USER_EMAIL);
  await page.getByRole('textbox', { name: 'EMAIL' }).press('Tab');
  await page.getByRole('textbox', { name: 'PASSWORD' }).fill(TEST_USER_PASSWORD);
  await page.getByRole('button', { name: 'LOG IN' }).click();
  await page.locator('#manage-btn').click();
  await page.getByRole('link', { name: 'Data plans' }).click();
  await page.getByRole('button', { name: 'CREATE DATA PLAN' }).click();
  await page.getByRole('textbox', { name: 'DATA PLAN NAME' }).click();
  await page.getByRole('textbox', { name: 'DATA PLAN NAME' }).fill(`${faker.lorem.word(6)}-plan`);
  await page.getByRole('textbox', { name: 'PRICE' }).click();
  await page.getByRole('textbox', { name: 'PRICE' }).fill(`${faker.number.int({ min: 1000, max: 2000 })}`);
  await page.getByRole('textbox', { name: 'DATA LIMIT' }).click();
  await page.getByRole('textbox', { name: 'DATA LIMIT' }).fill(`${faker.number.int({ min: 10, max: 20 })}`);
  await page.getByRole('combobox', { name: 'DURATION' }).click();
        await page.getByRole('option', { name: 'Month' }).click();
  await page.getByRole('button', { name: 'Save Data Plan' }).click();
});

test('Rename Node Test', async ({ page }) => {
  await page.goto(LOGIN_URL);
  await page.getByRole('textbox', { name: 'EMAIL' }).click();
  await page.getByRole('textbox', { name: 'EMAIL' }).fill(TEST_USER_EMAIL);
  await page.getByRole('textbox', { name: 'EMAIL' }).press('Tab');
  await page.getByRole('textbox', { name: 'PASSWORD' }).fill(TEST_USER_PASSWORD);
  await page.getByRole('button', { name: 'LOG IN' }).click();
  await page.getByRole('link', { name: 'Nodes' }).click();
  await page.locator('table tbody tr:first-child td:first-child a').click();
  await page.getByRole('button', { name: 'Edit NODE' }).click();
  await page.getByRole('textbox', { name: 'NODE NAME' }).click();
  await page
    .getByRole('textbox', { name: 'NODE NAME' })
    .press('ControlOrMeta+a');
  await page.getByRole('textbox', { name: 'NODE NAME' }).fill(`${faker.lorem.word(5)}-node`);
  await page.getByRole('button', { name: 'Save' }).click();
});

test('Rename Site Test', async ({ page }) => {
  await page.goto(LOGIN_URL);
  await page.getByRole('textbox', { name: 'EMAIL' }).click();
  await page.getByRole('textbox', { name: 'EMAIL' }).fill(TEST_USER_EMAIL);
  await page.getByRole('textbox', { name: 'EMAIL' }).press('Tab');
  await page.getByRole('textbox', { name: 'PASSWORD' }).fill(TEST_USER_PASSWORD);
  await page.getByRole('button', { name: 'LOG IN' }).click();
  await page.getByRole('link', { name: 'Sites' }).click();
  await page.getByRole('button', { name: 'menu' }).click();
  await page.getByRole('menuitem', { name: 'Edit Name' }).click();
  await page.getByRole('textbox', { name: 'Site Name' }).click();
  await page
    .getByRole('textbox', { name: 'Site Name' })
    .press('ControlOrMeta+a');
  await page.getByRole('textbox', { name: 'Site Name' }).fill(`${faker.lorem.word(5)}-site`);
  await page.getByRole('button', { name: 'Save' }).click();
});

test('Reset node Test', async ({ page }) => {
  await page.goto(LOGIN_URL);
  await page.getByRole('textbox', { name: 'EMAIL' }).click();
  await page.getByRole('textbox', { name: 'EMAIL' }).fill(TEST_USER_EMAIL);
  await page.getByRole('textbox', { name: 'EMAIL' }).press('Tab');
  await page.getByRole('textbox', { name: 'PASSWORD' }).fill(TEST_USER_PASSWORD);
  await page.getByRole('button', { name: 'LOG IN' }).click();
  await page.getByRole('link', { name: 'Nodes' }).click();
  await page.locator('table tbody tr:first-child td:first-child a').click();
  await page.getByRole('button', { name: 'Restart' }).click();
  await page.getByRole('button', { name: 'Confirm' }).click();
});

test('Node RF Off Test', async ({ page }) => {
  await page.goto(LOGIN_URL);
  await page.getByRole('textbox', { name: 'EMAIL' }).click();
  await page.getByRole('textbox', { name: 'EMAIL' }).fill(TEST_USER_EMAIL);
  await page.getByRole('textbox', { name: 'EMAIL' }).press('Tab');
  await page.getByRole('textbox', { name: 'PASSWORD' }).fill(TEST_USER_PASSWORD);
  await page.getByRole('button', { name: 'LOG IN' }).click();
  await page.getByRole('link', { name: 'Nodes' }).click();
  await page.locator('table tbody tr:first-child td:first-child a').click();
  await page.getByRole('button', { name: 'select merge strategy' }).click();
  await page.getByRole('menuitem', { name: 'Turn RF Off' }).click();
  await page.getByRole('button', { name: 'Turn RF Off' }).click();
  await page.getByRole('button', { name: 'Confirm' }).click();
});

test('Node RF On Test', async ({ page }) => {
  await page.goto(LOGIN_URL);
  await page.getByRole('textbox', { name: 'EMAIL' }).click();
  await page.getByRole('textbox', { name: 'EMAIL' }).fill(TEST_USER_EMAIL);
  await page.getByRole('textbox', { name: 'EMAIL' }).press('Tab');
  await page.getByRole('textbox', { name: 'PASSWORD' }).fill(TEST_USER_PASSWORD);
  await page.getByRole('button', { name: 'LOG IN' }).click();
  await page.getByRole('link', { name: 'Nodes' }).click();
  await page.locator('table tbody tr:first-child td:first-child a').click();
  await page.getByRole('button', { name: 'select merge strategy' }).click();
  await page.getByRole('menuitem', { name: 'Turn RF On' }).click();
  await page.getByRole('button', { name: 'Turn RF On' }).click();
  await page.getByRole('button', { name: 'Confirm' }).click();
});

test('Create Subscriber Test', async ({ page }) => {
  await page.goto(LOGIN_URL);
  await page.getByRole('textbox', { name: 'EMAIL' }).click();
  await page.getByRole('textbox', { name: 'EMAIL' }).fill(TEST_USER_EMAIL);
  await page.getByRole('textbox', { name: 'EMAIL' }).press('Tab');
  await page.getByRole('textbox', { name: 'PASSWORD' }).fill(TEST_USER_PASSWORD);
  await page.getByRole('button', { name: 'LOG IN' }).click();
  await page.getByRole('link', { name: 'Subscribers' }).click();
  await page.getByRole('button', { name: 'Add Subscriber' }).click();
  await page.getByRole('textbox', { name: 'Name' }).click();
  await page.getByRole('textbox', { name: 'Name' }).fill(`${faker.person.fullName()}`);
  await page.getByRole('textbox', { name: 'Email' }).click();
  await page.getByRole('textbox', { name: 'Email' }).fill(`${faker.internet.email()}`);
  await page.getByRole('button', { name: 'Next' }).click();
  await page.getByRole('combobox', { name: 'SIM ICCID*' }).click();
      await selectRandomOption(
        page,
        page.getByRole('combobox', { name: 'SIM ICCID*' }),
      );
  await page.getByRole('button', { name: 'Next' }).click();
  await page.getByLabel('', { exact: true }).click();
        await page.waitForSelector('li[role="option"]', { state: 'visible' });
        await page.locator('li[role="option"]').first().click();
        await page.waitForSelector('button:not([disabled])', {
          state: 'visible',
        });
  await page.getByRole('button', { name: 'ADD SUBSCRIBER' }).click();
  await page.getByRole('button', { name: 'Close', exact: true }).click();
});

test('Topup Subscriber Test', async ({ page }) => {
  await page.goto(LOGIN_URL);
  await page.getByRole('textbox', { name: 'EMAIL' }).click();
  await page.getByRole('textbox', { name: 'EMAIL' }).fill(TEST_USER_EMAIL);
  await page.getByRole('textbox', { name: 'EMAIL' }).press('Tab');
  await page.getByRole('textbox', { name: 'PASSWORD' }).fill(TEST_USER_PASSWORD);
  await page.getByRole('button', { name: 'LOG IN' }).click();
  await page.getByRole('link', { name: 'Subscribers' }).click();
  await page.locator('table tbody tr:first-child').locator('#data-table-action-popover').click();
  await page.getByText('Top up data').click();
  await page.getByLabel('', { exact: true }).click();
        await page.waitForSelector('li[role="option"]', { state: 'visible' });
        await page.locator('li[role="option"]').first().click();
        await page.waitForSelector('button:not([disabled])', {
          state: 'visible',
        });
  await page.getByRole('button', { name: 'TOP UP' }).click();
});

test('Logout Test', async ({ page }) => {
  await page.goto(LOGIN_URL);
  await page.getByRole('textbox', { name: 'EMAIL' }).click();
  await page.getByRole('textbox', { name: 'EMAIL' }).fill(TEST_USER_EMAIL);
  await page.getByRole('textbox', { name: 'EMAIL' }).press('Tab');
  await page.getByRole('textbox', { name: 'PASSWORD' }).fill(TEST_USER_PASSWORD);
  await page.getByRole('button', { name: 'LOG IN' }).click();
  await page.locator('#account-settings-btn').click();
  await page.getByRole('link', { name: 'Logout of account' }).click();
});
