//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.
//
// Copyright (c) 2023-present, Ukama Inc.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: dnode.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=nodeId,json=node_id,proto3" json:"nodeId,omitempty"`
}

func (x *ResetRequest) Reset() {
	*x = ResetRequest{}
	mi := &file_dnode_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetRequest) ProtoMessage() {}

func (x *ResetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnode_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetRequest.ProtoReflect.Descriptor instead.
func (*ResetRequest) Descriptor() ([]byte, []int) {
	return file_dnode_proto_rawDescGZIP(), []int{0}
}

func (x *ResetRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type ResetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=nodeId,json=node_id,proto3" json:"nodeId,omitempty"`
}

func (x *ResetResponse) Reset() {
	*x = ResetResponse{}
	mi := &file_dnode_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetResponse) ProtoMessage() {}

func (x *ResetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnode_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetResponse.ProtoReflect.Descriptor instead.
func (*ResetResponse) Descriptor() ([]byte, []int) {
	return file_dnode_proto_rawDescGZIP(), []int{1}
}

func (x *ResetResponse) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type NodeRFOnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=nodeId,json=node_id,proto3" json:"nodeId,omitempty"`
}

func (x *NodeRFOnRequest) Reset() {
	*x = NodeRFOnRequest{}
	mi := &file_dnode_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeRFOnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeRFOnRequest) ProtoMessage() {}

func (x *NodeRFOnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnode_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeRFOnRequest.ProtoReflect.Descriptor instead.
func (*NodeRFOnRequest) Descriptor() ([]byte, []int) {
	return file_dnode_proto_rawDescGZIP(), []int{2}
}

func (x *NodeRFOnRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type NodeRFOnResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=nodeId,json=node_id,proto3" json:"nodeId,omitempty"`
}

func (x *NodeRFOnResponse) Reset() {
	*x = NodeRFOnResponse{}
	mi := &file_dnode_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeRFOnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeRFOnResponse) ProtoMessage() {}

func (x *NodeRFOnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnode_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeRFOnResponse.ProtoReflect.Descriptor instead.
func (*NodeRFOnResponse) Descriptor() ([]byte, []int) {
	return file_dnode_proto_rawDescGZIP(), []int{3}
}

func (x *NodeRFOnResponse) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type TurnNodeOffRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=nodeId,json=node_id,proto3" json:"nodeId,omitempty"`
}

func (x *TurnNodeOffRequest) Reset() {
	*x = TurnNodeOffRequest{}
	mi := &file_dnode_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TurnNodeOffRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TurnNodeOffRequest) ProtoMessage() {}

func (x *TurnNodeOffRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnode_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TurnNodeOffRequest.ProtoReflect.Descriptor instead.
func (*TurnNodeOffRequest) Descriptor() ([]byte, []int) {
	return file_dnode_proto_rawDescGZIP(), []int{4}
}

func (x *TurnNodeOffRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type TurnNodeOffResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=nodeId,json=node_id,proto3" json:"nodeId,omitempty"`
}

func (x *TurnNodeOffResponse) Reset() {
	*x = TurnNodeOffResponse{}
	mi := &file_dnode_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TurnNodeOffResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TurnNodeOffResponse) ProtoMessage() {}

func (x *TurnNodeOffResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnode_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TurnNodeOffResponse.ProtoReflect.Descriptor instead.
func (*TurnNodeOffResponse) Descriptor() ([]byte, []int) {
	return file_dnode_proto_rawDescGZIP(), []int{5}
}

func (x *TurnNodeOffResponse) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type NodeRFOffRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=nodeId,json=node_id,proto3" json:"nodeId,omitempty"`
}

func (x *NodeRFOffRequest) Reset() {
	*x = NodeRFOffRequest{}
	mi := &file_dnode_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeRFOffRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeRFOffRequest) ProtoMessage() {}

func (x *NodeRFOffRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnode_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeRFOffRequest.ProtoReflect.Descriptor instead.
func (*NodeRFOffRequest) Descriptor() ([]byte, []int) {
	return file_dnode_proto_rawDescGZIP(), []int{6}
}

func (x *NodeRFOffRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type NodeRFOffResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=nodeId,json=node_id,proto3" json:"nodeId,omitempty"`
}

func (x *NodeRFOffResponse) Reset() {
	*x = NodeRFOffResponse{}
	mi := &file_dnode_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeRFOffResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeRFOffResponse) ProtoMessage() {}

func (x *NodeRFOffResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnode_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeRFOffResponse.ProtoReflect.Descriptor instead.
func (*NodeRFOffResponse) Descriptor() ([]byte, []int) {
	return file_dnode_proto_rawDescGZIP(), []int{7}
}

func (x *NodeRFOffResponse) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

var File_dnode_proto protoreflect.FileDescriptor

var file_dnode_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x64, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x75,
	0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x64,
	0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x22, 0x27, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64,
	0x22, 0x28, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x17, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x0f, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x46, 0x4f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x2b, 0x0a, 0x10, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x46,
	0x4f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x06, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x69, 0x64, 0x22, 0x2d, 0x0a, 0x12, 0x54, 0x75, 0x72, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x4f,
	0x66, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x22, 0x2e, 0x0a, 0x13, 0x54, 0x75, 0x72, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x4f, 0x66,
	0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x22, 0x2b, 0x0a, 0x10, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x46, 0x4f, 0x66, 0x66, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x22,
	0x2c, 0x0a, 0x11, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x46, 0x4f, 0x66, 0x66, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x32, 0xa8, 0x03,
	0x0a, 0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5e, 0x0a,
	0x09, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x2e, 0x75, 0x6b, 0x61,
	0x6d, 0x61, 0x2e, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x64, 0x6e, 0x6f,
	0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x75, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x75, 0x6d, 0x6d, 0x79,
	0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x64, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a,
	0x08, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x46, 0x4f, 0x6e, 0x12, 0x29, 0x2e, 0x75, 0x6b, 0x61, 0x6d,
	0x61, 0x2e, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x64, 0x6e, 0x6f, 0x64,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x46, 0x4f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x75, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x75, 0x6d,
	0x6d, 0x79, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x64, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x46, 0x4f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x6c, 0x0a, 0x0b, 0x54, 0x75, 0x72, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x4f, 0x66,
	0x66, 0x12, 0x2c, 0x2e, 0x75, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x6e,
	0x6f, 0x64, 0x65, 0x2e, 0x64, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x75, 0x72,
	0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x4f, 0x66, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2d, 0x2e, 0x75, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x6e, 0x6f, 0x64,
	0x65, 0x2e, 0x64, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x75, 0x72, 0x6e, 0x4e,
	0x6f, 0x64, 0x65, 0x4f, 0x66, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x66, 0x0a, 0x09, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x46, 0x4f, 0x66, 0x66, 0x12, 0x2a, 0x2e,
	0x75, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x6e, 0x6f, 0x64, 0x65, 0x2e,
	0x64, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x46, 0x4f,
	0x66, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x75, 0x6b, 0x61, 0x6d,
	0x61, 0x2e, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x64, 0x6e, 0x6f, 0x64,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x46, 0x4f, 0x66, 0x66, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x6b, 0x61, 0x6d, 0x61, 0x2f, 0x75, 0x6b, 0x61,
	0x6d, 0x61, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2f, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x2d, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x64,
	0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x70, 0x62, 0x2f, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_dnode_proto_rawDescOnce sync.Once
	file_dnode_proto_rawDescData = file_dnode_proto_rawDesc
)

func file_dnode_proto_rawDescGZIP() []byte {
	file_dnode_proto_rawDescOnce.Do(func() {
		file_dnode_proto_rawDescData = protoimpl.X.CompressGZIP(file_dnode_proto_rawDescData)
	})
	return file_dnode_proto_rawDescData
}

var file_dnode_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_dnode_proto_goTypes = []any{
	(*ResetRequest)(nil),        // 0: ukama.dummynode.dnode.v1.ResetRequest
	(*ResetResponse)(nil),       // 1: ukama.dummynode.dnode.v1.ResetResponse
	(*NodeRFOnRequest)(nil),     // 2: ukama.dummynode.dnode.v1.NodeRFOnRequest
	(*NodeRFOnResponse)(nil),    // 3: ukama.dummynode.dnode.v1.NodeRFOnResponse
	(*TurnNodeOffRequest)(nil),  // 4: ukama.dummynode.dnode.v1.TurnNodeOffRequest
	(*TurnNodeOffResponse)(nil), // 5: ukama.dummynode.dnode.v1.TurnNodeOffResponse
	(*NodeRFOffRequest)(nil),    // 6: ukama.dummynode.dnode.v1.NodeRFOffRequest
	(*NodeRFOffResponse)(nil),   // 7: ukama.dummynode.dnode.v1.NodeRFOffResponse
}
var file_dnode_proto_depIdxs = []int32{
	0, // 0: ukama.dummynode.dnode.v1.NodeService.ResetNode:input_type -> ukama.dummynode.dnode.v1.ResetRequest
	2, // 1: ukama.dummynode.dnode.v1.NodeService.NodeRFOn:input_type -> ukama.dummynode.dnode.v1.NodeRFOnRequest
	4, // 2: ukama.dummynode.dnode.v1.NodeService.TurnNodeOff:input_type -> ukama.dummynode.dnode.v1.TurnNodeOffRequest
	6, // 3: ukama.dummynode.dnode.v1.NodeService.NodeRFOff:input_type -> ukama.dummynode.dnode.v1.NodeRFOffRequest
	1, // 4: ukama.dummynode.dnode.v1.NodeService.ResetNode:output_type -> ukama.dummynode.dnode.v1.ResetResponse
	3, // 5: ukama.dummynode.dnode.v1.NodeService.NodeRFOn:output_type -> ukama.dummynode.dnode.v1.NodeRFOnResponse
	5, // 6: ukama.dummynode.dnode.v1.NodeService.TurnNodeOff:output_type -> ukama.dummynode.dnode.v1.TurnNodeOffResponse
	7, // 7: ukama.dummynode.dnode.v1.NodeService.NodeRFOff:output_type -> ukama.dummynode.dnode.v1.NodeRFOffResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_dnode_proto_init() }
func file_dnode_proto_init() {
	if File_dnode_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dnode_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dnode_proto_goTypes,
		DependencyIndexes: file_dnode_proto_depIdxs,
		MessageInfos:      file_dnode_proto_msgTypes,
	}.Build()
	File_dnode_proto = out.File
	file_dnode_proto_rawDesc = nil
	file_dnode_proto_goTypes = nil
	file_dnode_proto_depIdxs = nil
}
