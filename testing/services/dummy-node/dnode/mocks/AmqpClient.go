// Code generated by mockery v2.46.3. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	anypb "google.golang.org/protobuf/types/known/anypb"
)

// AmqpClient is an autogenerated mock type for the AmqpClient type
type AmqpClient struct {
	mock.Mock
}

// PublishMessage provides a mock function with given fields: vhost, exchange, route, payload
func (_m *AmqpClient) PublishMessage(vhost string, exchange string, route string, payload *anypb.Any) (any, error) {
	ret := _m.Called(vhost, exchange, route, payload)

	if len(ret) == 0 {
		panic("no return value specified for PublishMessage")
	}

	var r0 any
	var r1 error
	if rf, ok := ret.Get(0).(func(string, string, string, *anypb.Any) (any, error)); ok {
		return rf(vhost, exchange, route, payload)
	}
	if rf, ok := ret.Get(0).(func(string, string, string, *anypb.Any) any); ok {
		r0 = rf(vhost, exchange, route, payload)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(any)
		}
	}

	if rf, ok := ret.Get(1).(func(string, string, string, *anypb.Any) error); ok {
		r1 = rf(vhost, exchange, route, payload)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewAmqpClient creates a new instance of AmqpClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAmqpClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *AmqpClient {
	mock := &AmqpClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
