// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: dcontroller.proto

package gen

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *GetSiteMetricsRequest) Validate() error {
	return nil
}
func (this *GetSiteMetricsResponse) Validate() error {
	if this.Backhaul != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Backhaul); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Backhaul", err)
		}
	}
	if this.Ethernet != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Ethernet); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Ethernet", err)
		}
	}
	if this.Power != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Power); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Power", err)
		}
	}
	return nil
}
func (this *BackhaulMetrics) Validate() error {
	return nil
}
func (this *EthernetMetrics) Validate() error {
	return nil
}
func (this *PowerMetrics) Validate() error {
	return nil
}
func (this *StartMetricsRequest) Validate() error {
	return nil
}
func (this *StartMetricsResponse) Validate() error {
	return nil
}
func (this *UpdateMetricsRequest) Validate() error {
	for _, item := range this.PortUpdates {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("PortUpdates", err)
			}
		}
	}
	return nil
}
func (this *UpdateMetricsResponse) Validate() error {
	return nil
}
func (this *PortUpdate) Validate() error {
	return nil
}
func (this *MonitorSiteRequest) Validate() error {
	return nil
}
func (this *MonitorSiteResponse) Validate() error {
	return nil
}
func (this *StopMonitoringRequest) Validate() error {
	return nil
}
func (this *StopMonitoringResponse) Validate() error {
	return nil
}
