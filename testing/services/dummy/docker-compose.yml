services:

 postgresd-dummy:
  image: postgres:13.3
  ports:
   - 5407:5432
  environment:
   - POSTGRES_USER=postgres
   - POSTGRES_PASSWORD=Pass2020!
  networks:
   - ukama-net
  volumes:
   - postgress-data:/var/lib/postgresql

 dnode:
  build: ./dnode
  ports:
   - 8085:8085
  environment:
   - DEBUGMODE=true
   - ORGID=${ORGID}
   - ORGNAME=${ORGNAME}
   - AMQPCONFIG_URI=http://rabbitmq:15672
   - AMQPCONFIG_USERNAME=guest
   - AMQPCONFIG_PASSWORD=guest
  restart: always
  networks:
   - ukama-net

 controller:
  build: ./controller
  ports:
   - 9065:9090
   - 2112:2112  
  environment:
   - DEBUGMODE=true
   - ORGID=${ORGID}
   - ORGNAME=${ORGNAME}
   - QUEUE_URI=amqp://guest:guest@rabbitmq:5672
   - CONTROLLER_SERVICE_HOST=controller
   - CONTROLLER_SERVICE_PORT=9090
   - REGISTRYCLIENT=http://api-gateway-registry:8080
  restart: always
  networks:
   - ukama-net

 msgclient-dummy:
  build: ../../../systems/services/msgClient
  environment:
   - DEBUGMODE=true
   - DB_HOST=postgresd-dummy
   - DB_PASSWORD=Pass2020!
   - DB_USER=postgres
   - GRPC_PORT=9095
   - QUEUE_URI=amqp://guest:guest@${LOCAL_HOST_IP}:5672
   - SYSTEM=controller
  restart: always
  networks:
   - ukama-net

 api-gateway:
  build: ./api-gateway
  ports:
   - 8082:8080
  networks:
   - ukama-net
  environment:
   - DEBUGMODE=true
   - BYPASS_AUTH_MODE=true


 prometheus:
  image: prom/prometheus:latest
  container_name: prometheus
  ports:
   - "9090:9090"
  volumes:
   - ./prometheus.yml:/etc/prometheus/prometheus.yml
   - prometheus-data:/prometheus
  command:
   - '--config.file=/etc/prometheus/prometheus.yml'
   - '--storage.tsdb.path=/prometheus'
   - '--web.console.libraries=/usr/share/prometheus/console_libraries'
   - '--web.console.templates=/usr/share/prometheus/consoles'
  restart: always
  networks:
   - ukama-net

 grafana:
  image: grafana/grafana:latest
  container_name: grafana
  ports:
   - "3000:3000"
  environment:
   - GF_SECURITY_ADMIN_USER=admin
   - GF_SECURITY_ADMIN_PASSWORD=admin
   - GF_USERS_ALLOW_SIGN_UP=false
  volumes:
   - grafana-data:/var/lib/grafana
   - ./grafana/dashboards:/etc/grafana/dashboards
   - ./grafana/provisioning:/etc/grafana/provisioning
  depends_on:
   - prometheus
  restart: always
  networks:
   - ukama-net

networks:
 ukama-net:
  external: true
  name: services_ukama-net

volumes:
 postgress-data:
 prometheus-data:
 grafana-data:


