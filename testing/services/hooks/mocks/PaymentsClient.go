// Code generated by mockery v2.49.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	clients "github.com/ukama/ukama/testing/services/hooks/internal/clients"
)

// PaymentsClient is an autogenerated mock type for the PaymentsClient type
type PaymentsClient struct {
	mock.Mock
}

// ListPayments provides a mock function with given fields: _a0
func (_m *PaymentsClient) ListPayments(_a0 string) ([]*clients.PaymentInfo, error) {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for ListPayments")
	}

	var r0 []*clients.PaymentInfo
	var r1 error
	if rf, ok := ret.Get(0).(func(string) ([]*clients.PaymentInfo, error)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func(string) []*clients.PaymentInfo); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*clients.PaymentInfo)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewPaymentsClient creates a new instance of PaymentsClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPaymentsClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *PaymentsClient {
	mock := &PaymentsClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
