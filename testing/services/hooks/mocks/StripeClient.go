// Code generated by mockery v2.49.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	util "github.com/ukama/ukama/testing/services/hooks/util"
)

// StripeClient is an autogenerated mock type for the StripeClient type
type StripeClient struct {
	mock.Mock
}

// GetPaymentIntent provides a mock function with given fields: id
func (_m *StripeClient) GetPaymentIntent(id string) (*util.PaymentIntent, error) {
	ret := _m.Called(id)

	if len(ret) == 0 {
		panic("no return value specified for GetPaymentIntent")
	}

	var r0 *util.PaymentIntent
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*util.PaymentIntent, error)); ok {
		return rf(id)
	}
	if rf, ok := ret.Get(0).(func(string) *util.PaymentIntent); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*util.PaymentIntent)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewStripeClient creates a new instance of StripeClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewStripeClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *StripeClient {
	mock := &StripeClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
