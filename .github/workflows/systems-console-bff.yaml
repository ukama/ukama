# THIS FILE IS GENERATED AUTOMATICALLY BY RUNNING gen-workflow.sh 
# DON'T CHANGE IT MANUALLY TO AVOID YOUR CHANGES BEING OVERWRITTEN
# USE workflow-template.yaml FOR MAKING CHANGES IN WORKFLOWS
name: build-systems-bff
on:  
  push:   
    paths:
        - "systems/console-bff/**"
        - ".github/workflows/systems-console-bff.yaml"
 
  workflow_dispatch:

jobs:  
  build:
    env: 
      working-directory: systems/console-bff
      PLANNING_TOOL_DB: ${{ secrets.PLANNING_TOOL_DB }}

    name: build and test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
              # init vars required for tag generation
    - name: Init vars
      id: vars_step
      uses: ./.github/actions/git-vars

    - name: Get yarn cache
      id: yarn-cache
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Cache node_modules
      uses: actions/cache@v4
      with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

    - name: Build bff
      run: make build
      working-directory: ${{ env.working-directory }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4.0.2
      with:
          aws-access-key-id: ${{ secrets.AWS_REGISTRY_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_REGISTRY_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

    - name: Login to Amazon ECR
      run: |
          aws ecr get-login-password --region us-east-1 | \
          buildah login \
            --username AWS \
            --password-stdin \
            003664043471.dkr.ecr.us-east-1.amazonaws.com

    - name: OCI build and push
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      env:
        REGISTRY: 003664043471.dkr.ecr.us-east-1.amazonaws.com/console/bff
      run: |
        buildah bud --pull -t $REGISTRY\:${{ steps.vars_step.outputs.sha-short }} \
          -t $REGISTRY\:${{ steps.vars_step.outputs.tag }} \
          -t $REGISTRY\:${{ steps.vars_step.outputs.branch }}-${{ github.run_number }} \
          -t $REGISTRY\:latest .  && \
        buildah push $REGISTRY\:${{ steps.vars_step.outputs.branch }}-${{ github.run_number }} && \
        buildah push $REGISTRY\:${{ steps.vars_step.outputs.sha-short }}  && \
        buildah push $REGISTRY\:${{ steps.vars_step.outputs.tag }}  
    
  sonar-scan:
    name: sonar-scan
    needs: build
    runs-on: ubuntu-latest
    env: 
      working-directory: systems/console-bff
    steps:
      - uses: actions/checkout@v4
      - name: scan
        uses: ./.github/actions/sonar-go
        with:         
          working-directory: ${{ env.working-directory }}
          github-bot-token: ${{ secrets.UKAMA_BOT_GITHUB_TOKEN }}
          sonar-token: ${{ secrets.SONAR_TOKEN }}
          project-key: ukama_ukama_console_bff

  lint:
    name: lint
    runs-on: ubuntu-latest
    env:
      working-directory: systems/console-bff
    steps:
        - name: Check out Git repository
          uses: actions/checkout@v4

        - name: Set up Node.js
          uses: actions/setup-node@v4
          with:
              node-version: 18

        # ESLint and Prettier must be in `package.json`
        - name: Install Node.js dependencies
          run: yarn install
          working-directory: ${{ env.working-directory }} 

        - name: Run linters
          run: yarn lint
          working-directory: ${{ env.working-directory }} 

  release:
      name: release
      needs: [build, lint]
      if: github.ref == 'refs/heads/main'
      runs-on: ubuntu-latest
      env:
        working-directory: systems/console-bff
      steps:
        - uses: actions/checkout@v4
        
        - name: Init vars
          id: vars_step
          uses: ./.github/actions/git-vars

        - name: update gitops
          uses: denispalnitsky/gitops-release@v9
          with:
            filename: "releases/console-helmfile.yaml"
            key: "consoleBffImageTag"
            value:  ${{ steps.vars_step.outputs.sha-short }}
            github-token: ${{ secrets.UKAMA_BOT_GITHUB_TOKEN }}
            github-org-and-repo: "ukama/infra-as-code"
            github-user-mail: "bot@ukama.com"
            github-username: "ukama-bot"
