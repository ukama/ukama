name: services-network-mesh
on:
  push:
    paths:
        - "transport/mesh/**"
        - ".github/workflows/services-network-mesh.yaml"

  workflow_dispatch:

jobs:  
  build:
    env: 
      working-directory: transport/mesh
    name: build and test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Install Dependencies
      run:  sudo apt-get update && sudo apt-get install bc libncurses5-dev lzop libssl-dev gnat flex zlib1g-dev gcc-arm-linux-gnueabihf automake-1.15 bison libelf-dev cmake curl libtool tcl pkg-config autopoint wget libisl-dev g++ texinfo texlive ghostscript libnftnl-dev libmnl-dev patchelf uuid-dev libpthread-stubs0-dev libcurl4-gnutls-dev libgnutls28-dev libgcrypt20-dev zlib1g-dev -y

      # init vars required for tag generation
    - name: Init vars
      id: vars_step
      uses: ./.github/actions/git-vars

    - name: Granting private modules access
      run: |
          git config --global url."https://none:${{ secrets.UKAMA_BOT_GITHUB_TOKEN }}@github.com/ukama".insteadOf "https://github.com/ukama"     
  
    - name: Checkout submodules
      run: git submodule update --init --recursive

    - name: Building
      working-directory: ./transport/mesh
      env:
        BUILD_NUMBER: ${{ github.run_number }}
      run: |
        make

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
          aws-access-key-id: ${{ secrets.AWS_REGISTRY_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_REGISTRY_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

    - name: Login to Amazon ECR
      run: | 
            aws ecr get-login-password --region us-east-1 | \
            buildah login \
              --username AWS \
              --password-stdin \
              003664043471.dkr.ecr.us-east-1.amazonaws.com

    - name: OCI build and push
      working-directory: ${{ env.working-directory }}
      env:
        REGISTRY: 003664043471.dkr.ecr.us-east-1.amazonaws.com/mesh
      run: |                        
            buildah bud -f . -t $REGISTRY\:${{ steps.vars_step.outputs.sha-short }} \
                -t $REGISTRY\:${{ steps.vars_step.outputs.branch }}-${{ github.run_number }} \
                -t $REGISTRY\:latest .  && \
            buildah push $REGISTRY\:${{ steps.vars_step.outputs.branch }}-${{ github.run_number }} && \
            buildah push $REGISTRY\:${{ steps.vars_step.outputs.sha-short }} && \
            buildah push $REGISTRY\:latest 
