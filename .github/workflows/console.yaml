name: console
on:
  push:
    paths:
        - "interfaces/console/**"
        - ".github/workflows/console.yaml"
 
  workflow_dispatch:

jobs:
  build:
    name: build and test
    runs-on: ubuntu-latest
    env:
       working-directory: interfaces/console
    steps:
      - uses: actions/checkout@v2
        # init vars required for tag generation
      - name: Init vars
        id: vars_step
        uses: ./.github/actions/git-vars

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: | 
                ${{ steps.yarn-cache-dir-path.outputs.dir }}
                /opt/sonar-scanner/.sonar/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-


      - name: Build console
        run: make build
        working-directory: ${{ env.working-directory }}

      - name: Test
        run: make test
        working-directory: ${{ env.working-directory }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_REGISTRY_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_REGISTRY_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        run: | 
              aws ecr get-login-password --region us-east-1 | \
              buildah login \
                --username AWS \
                --password-stdin \
                003664043471.dkr.ecr.us-east-1.amazonaws.com
                          
      - name: OCI build and push        
        env:
          REGISTRY: 003664043471.dkr.ecr.us-east-1.amazonaws.com/console/app
        run: |                        
              buildah bud -t $REGISTRY\:${{ steps.vars_step.outputs.sha-short }} \
                  -t $REGISTRY\:${{ steps.vars_step.outputs.branch }}-${{ github.run_number }} \
                  -t $REGISTRY\:latest .  && \
              buildah push $REGISTRY\:${{ steps.vars_step.outputs.branch }}-${{ github.run_number }} && \
              buildah push $REGISTRY\:${{ steps.vars_step.outputs.sha-short }} && \
              buildah push $REGISTRY\:latest
        working-directory: ${{ env.working-directory }} 

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v1.6
        env:
          GITHUB_TOKEN: ${{ secrets.UKAMA_BOT_GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir:  ${{ env.working-directory }}
          args: >
            -Dsonar.organization=ukama
            -Dsonar.projectKey=ukama_ukama_console_app
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.test.exclusions=tests/**
            -Dsonar.verbose=false
            -Dsonar.sources=.

  lint:
    name: lint
    runs-on: ubuntu-latest
    env:
      working-directory: interfaces/console
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      # ESLint and Prettier must be in `package.json`
      - name: Install Node.js dependencies
        run: yarn install
        working-directory: ${{ env.working-directory }} 

      - name: Run linters
        run: yarn lint
        working-directory: ${{ env.working-directory }} 

  release:
    name: release
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      working-directory: interfaces/console
    steps:
      # init vars required for tag generation
      - uses: actions/checkout@v3

      - name: Init vars
        id: vars_step
        uses: ./.github/actions/git-vars

      - name: update gitops
        uses: denispalnitsky/gitops-release@v9
        with:
          filename: 'releases/console-helmfile.yaml'
          key: 'consoleAppImageTag'
          value: ${{ steps.vars_step.outputs.sha-short }}
          github-token: ${{ secrets.UKAMA_BOT_GITHUB_TOKEN }}
          github-org-and-repo: 'ukama/infra-as-code'
          github-user-mail: "ukama-bot@ukama.com"
          github-username: "ukama-bot"
