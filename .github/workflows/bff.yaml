name: bff
on:
  push:
    paths:
        - "services/bff/**"
        - ".github/workflows/bff.yaml"
  workflow_dispatch:

jobs:
    build:
        name: build and test
        runs-on: ubuntu-latest
        env:
          working-directory: services/bff
        steps:
            - uses: actions/checkout@v2
              # init vars required for tag generation
            - name: Init vars
              id: vars_step
              run: |
                  echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
                  echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
            - name: Get yarn cache
              id: yarn-cache
              run: echo "::set-output name=dir::$(yarn cache dir)"

            - name: Cache node_modules
              uses: actions/cache@v1
              with:
                  path: ${{ steps.yarn-cache.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-yarn-

            - name: Build bff
              run: make build
              working-directory: ${{ env.working-directory }}

            # - name: Test
            #   run: make test
            #   working-directory: ${{ env.working-directory }}

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_REGISTRY_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_REGISTRY_SECRET_ACCESS_KEY }}
                  aws-region: us-east-1

            - name: Login to Amazon ECR
              run: |
                  aws ecr get-login-password --region us-east-1 | \
                  buildah login \
                    --username AWS \
                    --password-stdin \
                    003664043471.dkr.ecr.us-east-1.amazonaws.com

            - name: OCI build and push
              env:
                  REGISTRY: 003664043471.dkr.ecr.us-east-1.amazonaws.com/console/bff
              run: |
                  buildah bud -t $REGISTRY\:${{ steps.vars_step.outputs.sha_short }} \
                      -t $REGISTRY\:${{ steps.vars_step.outputs.branch }}-${{ github.run_number }} \
                      -t $REGISTRY\:latest .  && \
                  buildah push $REGISTRY\:${{ steps.vars_step.outputs.branch }}-${{ github.run_number }} && \
                  buildah push $REGISTRY\:${{ steps.vars_step.outputs.sha_short }} && \
                  buildah push $REGISTRY\:latest
              working-directory: ${{ env.working-directory }}

            - name: Set up Go
              uses: actions/setup-go@v2
              with:
                  go-version: 1.16

            - name: Granting private modules access
              run: |
                  git config --global url."https://none:${{ secrets.UKAMA_BOT_GITHUB_TOKEN }}@github.com/ukama".insteadOf "https://github.com/ukama"

            - name: Make test build
              working-directory: "services/bff/bff_integration/test/integration"
              run: |
                  env CGO_ENABLED=0 go test . -tags integration -v -c -o bin/integration

            - name: OCI Push bff-api test
              working-directory: "services/bff/bff_integration"
              env:
                  REGISTRY: 003664043471.dkr.ecr.us-east-1.amazonaws.com/console/bff
                  UKAMA_BOT_GITHUB_TOKEN: ${{ secrets.UKAMA_BOT_GITHUB_TOKEN }}

              run: |
                  buildah bud -f Int.Dockerfile -t $REGISTRY\:${{ steps.vars_step.outputs.sha_short }}-test \
                      -t $REGISTRY\:${{ steps.vars_step.outputs.branch }}-${{ github.run_number }}-test \
                      -t $REGISTRY\:latest-test . && \
                  buildah push $REGISTRY\:${{ steps.vars_step.outputs.branch }}-${{ github.run_number }}-test && \
                  buildah push $REGISTRY\:${{ steps.vars_step.outputs.sha_short }}-test && \
                  buildah push $REGISTRY\:latest-test
            - name: SonarCloud Scan
              uses: sonarsource/sonarcloud-github-action@v1.6
              env:
                  GITHUB_TOKEN: ${{ secrets.UKAMA_BOT_GITHUB_TOKEN }}
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
              with:
                  projectBaseDir:  ${{ env.working-directory }}
                  args: >
                      -Dsonar.organization=ukama
                      -Dsonar.projectKey=ukama_ukama_console_bff
                      -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
                      -Dsonar.test.exclusions=tests/**
                      -Dsonar.verbose=false
                      -Dsonar.sources=.
    lint:
        name: lint
        runs-on: ubuntu-latest
        env:
          working-directory: services/bff
        steps:
            - name: Check out Git repository
              uses: actions/checkout@v2

            - name: Set up Node.js
              uses: actions/setup-node@v1
              with:
                  node-version: 12

            # ESLint and Prettier must be in `package.json`
            - name: Install Node.js dependencies
              run: yarn install
              working-directory: ${{ env.working-directory }} 

            - name: Run linters
              run: yarn lint
              working-directory: ${{ env.working-directory }} 

    release:
        name: release
        needs: build
        if: github.ref == 'refs/heads/main'
        runs-on: ubuntu-latest
        env:
          working-directory: services/bff
        steps:
            # init vars required for tag generation
            - uses: actions/checkout@v2
            - name: Init vars
              id: vars_step
              run: |
                  echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
                  echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
            - name: update gitops
              uses: denispalnitsky/gitops-release@v7
              with:
                  filename: "releases/console-helmfile.yaml"
                  key: "consoleBffImageTag"
                  value: ${{ steps.vars_step.outputs.sha_short }}
                  github-token: ${{ secrets.UKAMA_BOT_GITHUB_TOKEN }}
                  github-org-and-repo: "ukama/infra-as-code"
                  github-user-mail: "ukama-bot@ukama.com"
                  github-username: "ukama-bot"
