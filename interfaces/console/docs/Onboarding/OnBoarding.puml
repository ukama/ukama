@startuml C4_Elements
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

Person(personAlias, "User")
Container_Boundary(c1, "onBoarding Flow") {
  
Container(consoleAlias, "Console", "ReactJS, Typescript & MUI", "Home")
Container(ukamaAuthAlias,"Auth App","ReactJs,Typescript&MUI")
ContainerDb(KratosDataBaseAlias, "Auth Database","PostgreSQL")
ContainerDb(DataBaseAlias, "User Database","PostgreSQL")
Container(consoleOnBoardingAlias, "Console", "ReactJS, Typescript & MUI", "OnBoarding Page")
Container(bffAlias, "Console Bff", "NodeJs, Typescript & GraphQl", "User services")
Container(AuthAlias, "Auth Registery", "Go, Kratos", "Auth services")
Container(cloudAlias, "User Registery", "Go", "User services")
Rel(personAlias, ukamaAuthAlias, "{{Check auth service for  [firstVisit] to redirect the user}}")
Rel(ukamaAuthAlias, AuthAlias, "{{ return firstVisit from database}}")
Rel( AuthAlias, ukamaAuthAlias, "{{ return firstVisit from database}}")
Rel(ukamaAuthAlias, consoleOnBoardingAlias, "{{Check user service for  [firstVisit=true] to redirect the user}}", "/onBoarding")
Rel( ukamaAuthAlias, consoleAlias, "{{Check user service for  [firstVisit=false] to redirect the user}}", "/home")
Rel( AuthAlias, KratosDataBaseAlias, "get user details")
Rel( consoleOnBoardingAlias, bffAlias, "Mutation","addUser")
Rel( consoleAlias, bffAlias, " Query","getUser")
Rel( bffAlias , cloudAlias, " Query","getUser")
Rel(cloudAlias,DataBaseAlias,"user")
}
@enduml