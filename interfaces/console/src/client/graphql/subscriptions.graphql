# Subscriptions

query GetNotifications(
  $networkId: String!
  $orgId: String!
  $orgName: String!
  $role: String!
  $startTimestamp: String!
  $subscriberId: String!
  $userId: String!
) {
  getNotifications(
    networkId: $networkId
    orgId: $orgId
    orgName: $orgName
    startTimestamp: $startTimestamp
    subscriberId: $subscriberId
    userId: $userId
    role: $role
  ) {
    notifications {
      id
      type
      scope
      title
      isRead
      eventKey
      createdAt
      resourceId
      description
      redirect {
        action
        title
      }
    }
  }
}

subscription NotificationSubscription(
  $networkId: String!
  $orgId: String!
  $orgName: String!
  $role: String!
  $startTimestamp: String!
  $subscriberId: String!
  $userId: String!
) {
  notificationSubscription(
    networkId: $networkId
    orgId: $orgId
    orgName: $orgName
    startTimestamp: $startTimestamp
    subscriberId: $subscriberId
    userId: $userId
    role: $role
  ) {
    id
    type
    scope
    title
    isRead
    eventKey
    createdAt
    resourceId
    description
    redirect {
      action
      title
    }
  }
}

query GetMetricByTab($data: GetMetricByTabInput!) {
  getMetricByTab(data: $data) {
    metrics {
      success
      msg
      orgId
      nodeId
      type
      values
    }
  }
}

# subscription GetMetricByTabSub(
#   $nodeId: String!
#   $orgId: String!
#   $type: GRAPHS_TYPE!
#   $userId: String!
#   $from: Float!
# ) {
#   getMetricByTabSub(
#     nodeId: $nodeId
#     orgId: $orgId
#     type: $type
#     userId: $userId
#     from: $from
#   ) {
#     success
#     msg
#     orgId
#     nodeId
#     type
#     value
#   }
# }

# query GetStatsMetric {
#   getStatsMetric {
#     activeSubscriber
#     averageSignalStrength
#     averageThroughput
#   }
# }

# query GetLatestMetric($data: GetLatestMetricInput!) {
#   getLatestMetric(data: $data) {
#     success
#     msg
#     orgId
#     nodeId
#     type
#     value
#   }
# }
