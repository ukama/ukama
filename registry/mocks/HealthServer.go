// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	context "context"
	generated "ukamaX/registry/pb/generated"

	mock "github.com/stretchr/testify/mock"
)

// HealthServer is an autogenerated mock type for the HealthServer type
type HealthServer struct {
	mock.Mock
}

// Check provides a mock function with given fields: _a0, _a1
func (_m *HealthServer) Check(_a0 context.Context, _a1 *generated.HealthCheckRequest) (*generated.HealthCheckResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *generated.HealthCheckResponse
	if rf, ok := ret.Get(0).(func(context.Context, *generated.HealthCheckRequest) *generated.HealthCheckResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*generated.HealthCheckResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *generated.HealthCheckRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Watch provides a mock function with given fields: _a0, _a1
func (_m *HealthServer) Watch(_a0 *generated.HealthCheckRequest, _a1 generated.Health_WatchServer) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(*generated.HealthCheckRequest, generated.Health_WatchServer) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
