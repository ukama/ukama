version: "3.2"
services:
  postgresd:
    image: postgres:13.3
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Pass2020!
    networks:
      - intranet
    volumes:
      - postgress-data:/var/lib/postgresql

  adminer:
    image: adminer
    restart: always
    ports:
      - 8090:8080
    networks:
      - intranet

  rabbitmq:
    # Web interface: http://localhost:15672
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - rabbitmq-data:/var/lib/rabbitmq/
        #- ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
        - intranet
  
  registry:
    build: ./registry
    ports:
      - "9090:9090"
    environment:
      - DEBUGMODE=true
      - DB_HOST=postgresd
      - DB_PASSWORD=Pass2020!
      - DB_USER=postgres
      - BOOTSTRAP_URL=bootstrap.dev.ukama.com
      - BOOTSTRAP_AUTH0_CLIENTID=${BOOTSTRAP_AUTH0_CLIENTID}
      - BOOTSTRAP_AUTH0_SECRET=${BOOTSTRAP_AUTH0_SECRET}
      - BOOTSTRAP_AUTH0_HOST=${BOOTSTRAP_AUTH0_HOST}
      - DEBUG_DISABLEBOOTSTRAP=true
    restart: always
    networks:
      - intranet
  
  hss:
    build: ./hss
    ports:
      - "9091:9090"
    environment:
      - DEBUGMODE=true
      - DB_HOST=postgresd
      - DB_PASSWORD=Pass2020!
      - DB_USER=postgres
    restart: always
    networks:
      - intranet

  listener:
    build:
      dockerfile: ./Dockerfile.listener
      context: ./registry
    restart: always
    networks:
      - intranet
    environment:
      - QUEUE=amqp://guest:guest@rabbitmq:5672

  device-feeder:
    build:
      dockerfile: ./Dockerfile
      context: ./device-feeder
    restart: always
    ports:
      - "8080:8080"
    networks:
      - intranet
    environment:
      - DEBUGMODE=true
      - QUEUE_URI=amqp://guest:guest@rabbitmq:5672
      - REGISTRY_HOST=registry:9090
      - DEVICE_PORT=8080
      - LISTENER_THREADS=1
      - RETRYPERIODSEC=30
  
  api-gateway:
    build:
      dockerfile: ./Dockerfile
      context: ./api-gateway
    restart: always
    networks:
      - intranet
    environment:
      - DEBUGMODE=true
      - BYPASSAUTHMODE=true
      - CORS_ALLOWALLORIGINS=true
  

  etcd:
    image: 'bitnami/etcd:latest'
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
    ports:
      - 2379:2379
      - 2380:2380    

networks:
  intranet:

volumes:
  postgress-data:
  rabbitmq-data:
