diff -urN kconfig-0rig//conf.c kconfig/conf.c
--- kconfig-0rig//conf.c	2010-01-01 14:37:32.000000000 +0100
+++ kconfig/conf.c	2010-01-01 14:37:59.000000000 +0100
@@ -513,13 +513,12 @@
     }
     name = av[optind];
     conf_parse(name);
-    //zconfdump(stdout);
     if (sync_kconfig) {
         name = conf_get_configname();
         if (stat(name, &tmpstat)) {
             fprintf(stderr, _("***\n"
-                              "*** You have not yet configured your kernel!\n"
-                              "*** (missing kernel .config file \"%s\")\n"
+                              "*** You have not yet configured at91bootstrap!\n"
+                              "*** (missing .config file \"%s\")\n"
                               "***\n"
                               "*** Please run some configurator (e.g. \"make oldconfig\" or\n"
                               "*** \"make menuconfig\" or \"make xconfig\").\n"
@@ -575,7 +574,7 @@
             if (name && *name) {
                 fprintf(stderr,
                         _
-                        ("\n*** Kernel configuration requires explicit update.\n\n"));
+                        ("\n*** at91bootstrap configuration requires explicit update.\n\n"));
                 return 1;
             }
         }
@@ -621,13 +620,13 @@
         if (conf_get_changed() && conf_write(NULL)) {
             fprintf(stderr,
                     _
-                    ("\n*** Error during writing of the kernel configuration.\n\n"));
+                    ("\n*** Error during writing of the at91bootstrap configuration.\n\n"));
             exit(1);
         }
         if (conf_write_autoconf()) {
             fprintf(stderr,
                     _
-                    ("\n*** Error during update of the kernel configuration.\n\n"));
+                    ("\n*** Error during update of the at91bootstrap configuration.\n\n"));
             return 1;
         }
     } else if (input_mode == savedefconfig) {
@@ -640,9 +639,15 @@
         if (conf_write(NULL)) {
             fprintf(stderr,
                     _
-                    ("\n*** Error during writing of the kernel configuration.\n\n"));
+                    ("\n*** Error during writing of the at91bootstrap configuration.\n\n"));
             exit(1);
         }
+        if (conf_write_autoconf()) {
+            fprintf(stderr,
+                    _
+                    ("\n*** Error during update of the at91bootstrap configuration.\n\n"));
+            return 1;
+        }
     }
     return 0;
 }
diff -urN kconfig-0rig//confdata.c kconfig/confdata.c
--- kconfig-0rig//confdata.c	2010-01-01 14:37:32.000000000 +0100
+++ kconfig/confdata.c	2010-01-01 14:37:59.000000000 +0100
@@ -11,6 +11,7 @@
 #include <string.h>
 #include <time.h>
 #include <unistd.h>
+#include <libgen.h>
 
 #define LKC_DIRECT_LINK
 #include "lkc.h"
@@ -22,7 +23,7 @@
 
 static int conf_lineno, conf_warnings, conf_unsaved;
 
-const char conf_defname[] = "arch/$ARCH/defconfig";
+const char conf_defname[] = ".defconfig";
 
 static void conf_warning(const char *fmt, ...)
 {
@@ -38,16 +39,14 @@
 
 const char *conf_get_configname(void)
 {
-    char *name = getenv("KCONFIG_CONFIG");
+    char *name = getenv("AT91BOOTSTRAP_CONFIG");
 
     return name ? name : ".config";
 }
 
 const char *conf_get_autoconfig_name(void)
 {
-    char *name = getenv("KCONFIG_AUTOCONFIG");
-
-    return name ? name : "include/config/auto.conf";
+    return getenv("KCONFIG_AUTOCONFIG");
 }
 
 static char *conf_expand_value(const char *in)
@@ -612,7 +611,7 @@
     if (!out)
         return 1;
 
-    sym = sym_lookup("KERNELVERSION", 0);
+    sym = sym_lookup("BR2_VERSION", 0);
     sym_calc_value(sym);
     time(&now);
     env = getenv("KCONFIG_NOTIMESTAMP");
@@ -621,10 +620,8 @@
 
     fprintf(out, _("#\n"
                    "# Automatically generated make config: don't edit\n"
-                   "# Linux kernel version: %s\n"
                    "%s%s"
                    "#\n"),
-            sym_get_string_value(sym),
             use_timestamp ? "# " : "", use_timestamp ? ctime(&now) : "");
 
     if (!conf_get_changed())
@@ -691,6 +688,8 @@
 
     char path[128];
 
+    char *opwd, *dir, *_name;
+
     char *s, *d, c;
 
     struct symbol *sym;
@@ -702,8 +701,20 @@
     name = conf_get_autoconfig_name();
     conf_read_simple(name, S_DEF_AUTO);
 
-    if (chdir("include/config"))
+    opwd = malloc(256);
+    _name = strdup(name);
+    if (opwd == NULL || _name == NULL)
         return 1;
+    opwd = getcwd(opwd, 256);
+    dir = dirname(_name);
+    if (dir == NULL) {
+        res = 1;
+        goto err;
+    }
+    if (chdir(dir)) {
+        res = 1;
+        goto err;
+    }
 
     res = 0;
     for_all_symbols(i, sym) {
@@ -804,9 +815,11 @@
         close(fd);
     }
  out:
-    if (chdir("../.."))
-        return 1;
-
+    if (chdir(opwd))
+        res = 1;
+ err:
+    free(opwd);
+    free(_name);
     return res;
 }
 
@@ -826,7 +839,7 @@
 
     sym_clear_all_valid();
 
-    file_write_dep("include/config/auto.conf.cmd");
+    file_write_dep(".config.cmd");
 
     if (conf_split_config())
         return 1;
@@ -841,20 +854,15 @@
         return 1;
     }
 
-    sym = sym_lookup("KERNELVERSION", 0);
+    sym = sym_lookup("BR2_VERSION", 0);
     sym_calc_value(sym);
     time(&now);
     fprintf(out, "#\n"
             "# Automatically generated make config: don't edit\n"
-            "# Linux kernel version: %s\n"
-            "# %s" "#\n", sym_get_string_value(sym), ctime(&now));
+            "# %s" "#\n", ctime(&now));
     fprintf(out_h, "/*\n"
             " * Automatically generated C config: don't edit\n"
-            " * Linux kernel version: %s\n"
-            " * %s"
-            " */\n"
-            "#define AUTOCONF_INCLUDED\n",
-            sym_get_string_value(sym), ctime(&now));
+            " * %s" " */\n", ctime(&now));
 
     for_all_symbols(i, sym) {
         sym_calc_value(sym);
diff -urN kconfig-0rig//gconf.c kconfig/gconf.c
--- kconfig-0rig//gconf.c	2010-01-01 14:37:32.000000000 +0100
+++ kconfig/gconf.c	2010-01-01 14:37:59.000000000 +0100
@@ -293,7 +293,7 @@
                                        */
                                       NULL);
 
-    sprintf(title, _("Linux Kernel v%s Configuration"), getenv("KERNELVERSION"));
+    sprintf(title, _("at91bootstrap v%s Configuration"), getenv("BR2_VERSION"));
     gtk_window_set_title(GTK_WINDOW(main_wnd), title);
 
     gtk_widget_show(main_wnd);
diff -urN kconfig-0rig//gconf.glade kconfig/gconf.glade
--- kconfig-0rig//gconf.glade	2010-01-01 14:37:32.000000000 +0100
+++ kconfig/gconf.glade	2010-01-01 14:37:59.000000000 +0100
@@ -5,7 +5,7 @@
 
 <widget class="GtkWindow" id="window1">
   <property name="visible">True</property>
-  <property name="title" translatable="yes">Gtk Kernel Configurator</property>
+  <property name="title" translatable="yes">Gtk at91bootstrap Configurator</property>
   <property name="type">GTK_WINDOW_TOPLEVEL</property>
   <property name="window_position">GTK_WIN_POS_NONE</property>
   <property name="modal">False</property>
diff -urN kconfig-0rig//Makefile kconfig/Makefile
--- kconfig-0rig//Makefile	2010-01-01 14:37:32.000000000 +0100
+++ kconfig/Makefile	2010-01-01 14:37:59.000000000 +0100
@@ -153,10 +153,17 @@
 ifeq ($(MAKECMDGOALS),menuconfig)
 	hostprogs-y += mconf
 endif
+ifeq ($(findstring mconf,$(MAKECMDGOALS)),mconf)
+       hostprogs-y += mconf
+endif
 
 ifeq ($(MAKECMDGOALS),xconfig)
 	qconf-target := 1
 endif
+ifeq ($(findstring qconf,$(MAKECMDGOALS)),qconf)
+	qconf-target := 1
+endif
+
 ifeq ($(MAKECMDGOALS),gconfig)
 	gconf-target := 1
 endif
diff -urN kconfig-0rig//mconf.c kconfig/mconf.c
--- kconfig-0rig//mconf.c	2010-01-01 14:37:32.000000000 +0100
+++ kconfig/mconf.c	2010-01-01 14:41:02.000000000 +0100
@@ -24,10 +24,9 @@
 
 static const char mconf_readme[] = N_("Overview\n"
                                       "--------\n"
-                                      "Some kernel features may be built directly into the kernel.\n"
-                                      "Some may be made into loadable runtime modules.  Some features\n"
+                                      "Some features may be built directly into at91bootstrap. Some features\n"
                                       "may be completely removed altogether.  There are also certain\n"
-                                      "kernel parameters which are not really features, but must be\n"
+                                      "parameters which are not really features, but must be\n"
                                       "entered in as decimal or hexadecimal numbers or possibly text.\n"
                                       "\n"
                                       "Menu items beginning with following braces represent features that\n"
@@ -114,7 +113,7 @@
                                       "-----------------------------\n"
                                       "Menuconfig supports the use of alternate configuration files for\n"
                                       "those who, for various reasons, find it necessary to switch\n"
-                                      "between different kernel configurations.\n"
+                                      "between different configurations.\n"
                                       "\n"
                                       "At the end of the main menu you will find two options.  One is\n"
                                       "for saving the current configuration to a file of your choosing.\n"
@@ -147,7 +146,7 @@
                                       "\n"
                                       "Optional personality available\n"
                                       "------------------------------\n"
-                                      "If you prefer to have all of the kernel options listed in a single\n"
+                                      "If you prefer to have all of the options listed in a single\n"
                                       "menu, rather than the default multimenu hierarchy, run the menuconfig\n"
                                       "with MENUCONFIG_MODE environment variable set to single_menu. Example:\n"
                                       "\n"
@@ -176,9 +175,9 @@
     menu_instructions[] = N_("Arrow keys navigate the menu.  "
                              "<Enter> selects submenus --->.  "
                              "Highlighted letters are hotkeys.  "
-                             "Pressing <Y> includes, <N> excludes, <M> modularizes features.  "
+                             "Pressing <Y> selectes a feature, while <N> will exclude a feature.  "
                              "Press <Esc><Esc> to exit, <?> for Help, </> for Search.  "
-                             "Legend: [*] built-in  [ ] excluded  <M> module  < > module capable"),
+                             "Legend: [*] feature is selected  [ ] feature is excluded"),
     radiolist_instructions[] =
 N_("Use the arrow keys to navigate this window or "
    "press the hotkey of the item you wish to select "
@@ -189,9 +188,9 @@
 inputbox_instructions_hex[] = N_("Please enter a hexadecimal value. " "Use the <TAB> key to move from the input field to the buttons below it."), inputbox_instructions_string[] =
 N_("Please enter a string value. " "Use the <TAB> key to move from the input field to the buttons below it."), setmod_text[] = N_("This feature depends on another which has been configured as a module.\n" "As a result, this feature will be built as a module."), load_config_text[] =
 N_("Enter the name of the configuration file you wish to load.  " "Accept the name shown to restore the configuration you " "last retrieved.  Leave blank to abort."), load_config_help[] =
-N_("\n" "For various reasons, one may wish to keep several different kernel\n" "configurations available on a single machine.\n" "\n" "If you have saved a previous configuration in a file other than the\n" "kernel's default, entering the name of the file here will allow you\n" "to modify that configuration.\n" "\n"
+N_("\n" "For various reasons, one may wish to keep several different at91bootstrap\n" "configurations available on a single machine.\n" "\n" "If you have saved a previous configuration in a file other than the\n" "at91bootstrap's default, entering the name of the file here will allow you\n" "to modify that configuration.\n" "\n"
 "If you are uncertain, then you have probably never used alternate\n" "configuration files.  You should therefor leave this blank to abort.\n"), save_config_text[] = N_("Enter a filename to which this configuration should be saved " "as an alternate.  Leave blank to abort."), save_config_help[] =
-N_("\n" "For various reasons, one may wish to keep different kernel\n" "configurations available on a single machine.\n" "\n" "Entering a file name here will allow you to later retrieve, modify\n" "and use the current configuration as an alternate to whatever\n" "configuration options you have selected at that time.\n" "\n"
+N_("\n" "For various reasons, one may wish to keep different at91bootstrap\n" "configurations available on a single machine.\n" "\n" "Entering a file name here will allow you to later retrieve, modify\n" "and use the current configuration as an alternate to whatever\n" "configuration options you have selected at that time.\n" "\n"
 "If you are uncertain what all this means then you should probably\n" "leave this blank.\n"), search_help[] =
 N_("\n" "Search for CONFIG_ symbols and display their relations.\n" "Regular expressions are allowed.\n" "Example: search for \"^FOO\"\n" "Result:\n" "-----------------------------------------------------------------\n" "Symbol: FOO [=m]\n" "Prompt: Foo bus is used to drive the bar HW\n" "Defined at drivers/pci/Kconfig:47\n"
 "Depends on: X86_LOCAL_APIC && X86_IO_APIC || IA64\n" "Location:\n" "  -> Bus options (PCI, PCMCIA, EISA, MCA, ISA)\n" "    -> PCI support (PCI [=y])\n" "      -> PCI access mode (<choice> [=y])\n" "Selects: LIBCRC32\n" "Selected by: BAR\n" "-----------------------------------------------------------------\n"
@@ -249,10 +248,10 @@
 
     struct symbol *sym;
 
-    sym = sym_lookup("KERNELVERSION", 0);
+    sym = sym_lookup("BR2_VERSION", 0);
     sym_calc_value(sym);
     size = snprintf(menu_backtitle, sizeof (menu_backtitle),
-                    _("%s - Linux Kernel v%s Configuration"),
+                    _("%s - at91bootstrap v%s Configuration"),
                     config_filename, sym_get_string_value(sym));
     if (size >= sizeof (menu_backtitle))
         menu_backtitle[sizeof (menu_backtitle) - 1] = '\0';
@@ -814,7 +813,7 @@
         if (conf_get_changed())
             res = dialog_yesno(NULL,
                                _("Do you wish to save your "
-                                 "new kernel configuration?\n"
+                                 "new at91bootstrap configuration?\n"
                                  "<ESC><ESC> to continue."), 6, 60);
         else
             res = -1;
@@ -825,22 +824,22 @@
     case 0:
         if (conf_write(filename)) {
             fprintf(stderr, _("\n\n"
-                              "Error during writing of the kernel configuration.\n"
-                              "Your kernel configuration changes were NOT saved."
+                              "Error during writing of the at91bootstrap configuration.\n"
+                              "Your at91bootstrap configuration changes were NOT saved."
                               "\n\n"));
             return 1;
         }
     case -1:
         printf(_("\n\n"
-                 "*** End of Linux kernel configuration.\n"
-                 "*** Execute 'make' to build the kernel or try 'make help'."
+                 "*** End of at91bootstrap configuration.\n"
+                 "*** Execute 'make' to build at91bootstrap or try 'make help'."
                  "\n\n"));
         break;
     default:
         fprintf(stderr, _("\n\n"
-                          "Your kernel configuration changes were NOT saved."
+                          "Your at91bootstrap configuration changes were NOT saved."
                           "\n\n"));
     }
 
-    return 0;
+    return conf_write_autoconf();
 }
diff -urN kconfig-0rig//qconf.cc kconfig/qconf.cc
--- kconfig-0rig//qconf.cc	2010-01-01 14:37:32.000000000 +0100
+++ kconfig/qconf.cc	2010-01-01 14:37:59.000000000 +0100
@@ -1275,8 +1275,7 @@
 	char title[256];
 
 	QDesktopWidget *d = configApp->desktop();
-	snprintf(title, sizeof(title), _("Linux Kernel v%s Configuration"),
-		getenv("KERNELVERSION"));
+	snprintf(title, sizeof(title), _("at91bootstrap Configuration"));
 	setCaption(title);
 
 	width = configSettings->readNumEntry("/window width", d->width() - 64);
@@ -1610,6 +1609,7 @@
 {
 	if (!conf_get_changed()) {
 		e->accept();
+		conf_write_autoconf();
 		return;
 	}
 	QMessageBox mb("qconf", _("Save configuration?"), QMessageBox::Warning,
@@ -1620,6 +1620,7 @@
 	switch (mb.exec()) {
 	case QMessageBox::Yes:
 		conf_write(NULL);
+		conf_write_autoconf();
 	case QMessageBox::No:
 		e->accept();
 		break;
diff -urN kconfig-0rig//README.at91bootstrap kconfig/README.at91bootstrap
--- kconfig-0rig//README.at91bootstrap	1970-01-01 01:00:00.000000000 +0100
+++ kconfig/README.at91bootstrap	2010-01-01 14:37:59.000000000 +0100
@@ -0,0 +1,22 @@
+This is a copy of the kconfig code in the kernel (currently 2.6.32) tweaked
+to suit at91bootstrap.
+
+To update:
+	cp -r /usr/src/linux/scripts/kconfig package/config.new
+	cd package/config.new
+	cp /usr/src/linux/Documentation/kbuild/kconfig-language.txt .
+	patch -p1 < ../config/kconfig-to-at91bootstrap.patch
+	mv Makefile Makefile.kconfig
+	cp ../config/README.at91bootstrap .
+	cp ../config/foo.h .
+	cp ../config/Makefile .
+	cp ../config/kconfig-to-at91bootstrap.patch .
+	cd ..
+	rm -rf config
+	mv config.new config
+
+Then verify the toplevel targets work:
+	config
+	defconfig
+	menuconfig
+	oldconfig
diff -urN kconfig-0rig//util.c kconfig/util.c
--- kconfig-0rig//util.c	2010-01-01 14:37:32.000000000 +0100
+++ kconfig/util.c	2010-01-01 14:37:59.000000000 +0100
@@ -26,6 +26,121 @@
     return file;
 }
 
+static char *br2_symbol_printer(const char *const in)
+{
+    ssize_t i, j, len = strlen(in);
+
+    char *ret;
+
+    if (len < 1)
+        return NULL;
+    ret = malloc(len + 1);
+    if (!ret) {
+        printf("Out of memory!");
+        exit(1);
+    }
+    memset(ret, 0, len + 1);
+    i = j = 0;
+    if (strncmp("BR2_", in, 4) == 0)
+        i += 4;
+    if (strncmp("PACKAGE_", in + i, 8) == 0)
+        i += 8;
+    else if (strncmp("TARGET_", in + i, 7) == 0)
+        i += 7;
+    while (i <= len)
+        ret[j++] = tolower(in[i++]);
+    return ret;
+}
+
+/* write dependencies of the infividual config-symbols */
+static int write_make_deps(const char *name)
+{
+    struct menu *menu;
+
+    struct symbol *sym;
+
+    struct property *prop, *p;
+
+    unsigned done;
+
+    const char *const name_tmp = "..make.deps.tmp";
+
+    FILE *out;
+
+    if (!name)
+        name = ".auto.deps";
+    out = fopen(name_tmp, "w");
+    if (!out)
+        return 1;
+    fprintf(out,
+            "# ATTENTION! This does not handle 'depends', just 'select'! \n"
+            "# See package/config/util.c write_make_deps()\n#\n");
+    menu = &rootmenu;           //rootmenu.list;
+    while (menu) {
+        sym = menu->sym;
+        if (!sym) {
+            if (!menu_is_visible(menu))
+                goto next;
+        } else if (!(sym->flags & SYMBOL_CHOICE)) {
+            sym_calc_value(sym);
+            if (sym->type == S_BOOLEAN && sym_get_tristate_value(sym) != no) {
+                done = 0;
+                for_all_prompts(sym, prop) {
+                    struct expr *e;
+
+//printf("\nname=%s\n", sym->name);
+                    for_all_properties(sym, p, P_SELECT) {
+                        e = p->expr;
+                        if (e && e->left.sym->name) {
+                            if (!done) {
+                                fprintf(out, "%s: $(BASE_TARGETS)",
+                                        br2_symbol_printer(sym->name));
+                                done = 1;
+                            }
+//printf("SELECTS %s\n",e->left.sym->name);
+                            fprintf(out, " %s",
+                                    br2_symbol_printer(e->left.sym->name));
+                        }
+                    }
+                    if (done)
+                        fprintf(out, "\n");
+#if 0
+                    e = sym->rev_dep.expr;
+                    if (e && e->type == E_SYMBOL && e->left.sym->name) {
+                        fprintf(out, "%s: %s",
+                                br2_symbol_printer(e->left.sym->name),
+                                br2_symbol_printer(sym->name));
+                        printf("%s is Selected BY: %s", sym->name,
+                               e->left.sym->name);
+                    }
+#endif
+                }
+            }
+        }
+ next:
+        if (menu->list) {
+            menu = menu->list;
+            continue;
+        }
+        if (menu->next)
+            menu = menu->next;
+        else
+            while ((menu = menu->parent)) {
+                if (menu->next) {
+                    menu = menu->next;
+                    break;
+                }
+            }
+    }
+    fclose(out);
+    rename(name_tmp, name);
+    printf(_("#\n"
+             "# make dependencies written to %s\n"
+             "# See top of this file before playing with this auto-preprequisites!\n"
+             "#\n"), name);
+    return 0;
+}
+
 /* write a dependency file as used by kbuild to track dependencies */
 int file_write_dep(const char *name)
 {
@@ -72,7 +187,7 @@
     fprintf(out, "\n$(deps_config): ;\n");
     fclose(out);
     rename("..config.tmp", name);
-    return 0;
+    return write_make_deps(NULL);
 }
 
 /* Allocate initial growable sting */
diff -urN kconfig-0rig//zconf.tab.c_shipped kconfig/zconf.tab.c_shipped
--- kconfig-0rig//zconf.tab.c_shipped	2010-01-01 14:37:32.000000000 +0100
+++ kconfig/zconf.tab.c_shipped	2010-01-01 14:37:59.000000000 +0100
@@ -2224,7 +2224,7 @@
 	modules_sym = sym_lookup(NULL, 0);
 	modules_sym->type = S_BOOLEAN;
 	modules_sym->flags |= SYMBOL_AUTO;
-	rootmenu.prompt = menu_add_prompt(P_MENU, "Linux Kernel Configuration", NULL);
+	rootmenu.prompt = menu_add_prompt(P_MENU, "at91bootstrap Configuration", NULL);
 
 #if YYDEBUG
 	if (getenv("ZCONF_DEBUG"))
diff -urN kconfig-0rig//zconf.y kconfig/zconf.y
--- kconfig-0rig//zconf.y	2010-01-01 14:37:32.000000000 +0100
+++ kconfig/zconf.y	2010-01-01 14:37:59.000000000 +0100
@@ -479,7 +479,7 @@
 	modules_sym = sym_lookup(NULL, 0);
 	modules_sym->type = S_BOOLEAN;
 	modules_sym->flags |= SYMBOL_AUTO;
-	rootmenu.prompt = menu_add_prompt(P_MENU, "Linux Kernel Configuration", NULL);
+	rootmenu.prompt = menu_add_prompt(P_MENU, "at91bootstrap Configuration", NULL);
 
 #if YYDEBUG
 	if (getenv("ZCONF_DEBUG"))
