/* DO NOT EDIT! GENERATED AUTOMATICALLY! */
/* Properties of Unicode characters.  */
/* Generated automatically by gen-uni-tables.c for Unicode 15.0.0.  */

/* Copyright (C) 2000-2022 Free Software Foundation, Inc.

   This file is free software.
   It is dual-licensed under "the GNU LGPLv3+ or the GNU GPLv2+".
   You can redistribute it and/or modify it under either
     - the terms of the GNU Lesser General Public License as published
       by the Free Software Foundation, either version 3, or (at your
       option) any later version, or
     - the terms of the GNU General Public License as published by the
       Free Software Foundation; either version 2, or (at your option)
       any later version, or
     - the same dual license "the GNU LGPLv3+ or the GNU GPLv2+".

   This file is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License and the GNU General Public License
   for more details.

   You should have received a copy of the GNU Lesser General Public
   License and of the GNU General Public License along with this
   program.  If not, see <https://www.gnu.org/licenses/>.  */

#define header_0 16
#define header_2 9
#define header_3 127
#define header_4 15
static const
struct
  {
    int header[1];
    int level1[2];
    short level2[2 << 7];
    unsigned int level3[29 << 4];
  }
u_property_composite =
{
  { 2 },
  {
        3 * sizeof (int) / sizeof (short) +     0,
        3 * sizeof (int) / sizeof (short) +   128
  },
  {
        3 +   256 * sizeof (short) / sizeof (int) +     0,
        3 +   256 * sizeof (short) / sizeof (int) +    16,
        3 +   256 * sizeof (short) / sizeof (int) +    32,
        3 +   256 * sizeof (short) / sizeof (int) +    48,
        3 +   256 * sizeof (short) / sizeof (int) +    64,
        3 +   256 * sizeof (short) / sizeof (int) +    80,
        3 +   256 * sizeof (short) / sizeof (int) +    96,
        3 +   256 * sizeof (short) / sizeof (int) +   112,
        3 +   256 * sizeof (short) / sizeof (int) +   128,
       -1,
       -1,
       -1,
       -1,
        3 +   256 * sizeof (short) / sizeof (int) +   144,
       -1,
        3 +   256 * sizeof (short) / sizeof (int) +   160,
        3 +   256 * sizeof (short) / sizeof (int) +   176,
        3 +   256 * sizeof (short) / sizeof (int) +   192,
        3 +   256 * sizeof (short) / sizeof (int) +   208,
       -1,
       -1,
        3 +   256 * sizeof (short) / sizeof (int) +   224,
       -1,
       -1,
        3 +   256 * sizeof (short) / sizeof (int) +   240,
        3 +   256 * sizeof (short) / sizeof (int) +   256,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
        3 +   256 * sizeof (short) / sizeof (int) +   272,
        3 +   256 * sizeof (short) / sizeof (int) +   272,
        3 +   256 * sizeof (short) / sizeof (int) +   272,
        3 +   256 * sizeof (short) / sizeof (int) +   272,
        3 +   256 * sizeof (short) / sizeof (int) +   272,
        3 +   256 * sizeof (short) / sizeof (int) +   272,
        3 +   256 * sizeof (short) / sizeof (int) +   272,
        3 +   256 * sizeof (short) / sizeof (int) +   272,
        3 +   256 * sizeof (short) / sizeof (int) +   272,
        3 +   256 * sizeof (short) / sizeof (int) +   272,
        3 +   256 * sizeof (short) / sizeof (int) +   272,
        3 +   256 * sizeof (short) / sizeof (int) +   272,
        3 +   256 * sizeof (short) / sizeof (int) +   272,
        3 +   256 * sizeof (short) / sizeof (int) +   272,
        3 +   256 * sizeof (short) / sizeof (int) +   272,
        3 +   256 * sizeof (short) / sizeof (int) +   272,
        3 +   256 * sizeof (short) / sizeof (int) +   272,
        3 +   256 * sizeof (short) / sizeof (int) +   272,
        3 +   256 * sizeof (short) / sizeof (int) +   272,
        3 +   256 * sizeof (short) / sizeof (int) +   272,
        3 +   256 * sizeof (short) / sizeof (int) +   272,
        3 +   256 * sizeof (short) / sizeof (int) +   288,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
        3 +   256 * sizeof (short) / sizeof (int) +   304,
        3 +   256 * sizeof (short) / sizeof (int) +   320,
        3 +   256 * sizeof (short) / sizeof (int) +   336,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
        3 +   256 * sizeof (short) / sizeof (int) +   352,
        3 +   256 * sizeof (short) / sizeof (int) +   368,
        3 +   256 * sizeof (short) / sizeof (int) +   384,
       -1,
        3 +   256 * sizeof (short) / sizeof (int) +   400,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
        3 +   256 * sizeof (short) / sizeof (int) +   416,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
        3 +   256 * sizeof (short) / sizeof (int) +   432,
        3 +   256 * sizeof (short) / sizeof (int) +   448,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1
  },
  {
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x70000000U, 0x3E7EFFBFU, 0xBE7EFFBFU,
    0xFFFCFFFFU, 0xFEFDFF3FU, 0xFFF3F3F9U, 0x7FFFFF3FU,
    0x00000000U, 0x00018003U, 0xDFFFFFF0U, 0xFF3FFFCFU,
    0xCFFFFFFFU, 0x000FFFC0U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000010U, 0x00000000U,
    0x0001D760U, 0x0001FC00U, 0x00187C00U, 0x00000000U,
    0x0200708BU, 0x02000000U, 0x708B0000U, 0x00C00000U,
    0x00000000U, 0x00000000U, 0xFCCF0006U, 0x033FFCFCU,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000080U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x0000007CU, 0x00000000U, 0x01E00000U,
    0x00000000U, 0x00000000U, 0x00080005U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00120200U, 0xFF000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0xB0001800U, 0x00000000U,
    0x00000000U, 0x00480000U, 0x4E000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x30001900U, 0x00000000U,
    0x00100000U, 0x00000000U, 0x00001C00U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000100U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000D81U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00001C00U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x74000000U, 0x00000000U,
    0x00000000U, 0x00080000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00080000U, 0x30000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x10842008U, 0x03E80200U,
    0x20080002U, 0x02001084U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000040U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00045540U, 0x28000000U, 0x0000000BU, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0xFFFFFFFFU, 0xFFFFFFFFU, 0xFFFFFFFFU, 0xFFFFFFFFU,
    0x0FFFFFFFU, 0xFFFFFFFFU, 0xFFFFFFFFU, 0x03FFFFFFU,
    0x3F3FFFFFU, 0xFFFFFFFFU, 0xAAFF3F3FU, 0x1555FFFFU,
    0xFFFFFFFFU, 0x17DFFFFFU, 0xE7C7F5DEU, 0x15DC37F7U,
    0x00000000U, 0x10D80060U, 0x00800380U, 0x00000000U,
    0x00000000U, 0x00000100U, 0x00000000U, 0x00000000U,
    0x0040026BU, 0x08000007U, 0xFFFF0000U, 0x0DEE0DEEU,
    0x0C000200U, 0x00004000U, 0x0000E000U, 0x00000000U,
    0x00001210U, 0x0001B050U, 0x00000292U, 0x0333E005U,
    0x00000333U, 0x0000F000U, 0x00000000U, 0x00003C0FU,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0xFFFFFE00U,
    0xFFFFFFFFU, 0x003FFFFFU, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00001000U, 0x00000000U, 0x00000000U, 0x00700000U,
    0x00000000U, 0x00000000U, 0x10000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x55555000U, 0x36DB02A5U,
    0xC0100000U, 0x55555000U, 0x36DB02A5U, 0xC7900000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x7FFFFFFFU, 0xFFFFFFFFU, 0xFFFF000FU, 0x7FFFC000U,
    0x00000000U, 0xFFFE0000U, 0x0000FFFFU, 0x80000000U,
    0xFFFFFFFFU, 0xFFFFFFFFU, 0xFFFFFFFFU, 0xFFFFFFFFU,
    0xFFFFFFFFU, 0xFFFFFFFFU, 0xFFFFFFFFU, 0xFFFFFFFFU,
    0xFFFFFFFFU, 0xFFFFFFFFU, 0xFFFFFFFFU, 0xFFFFFFFFU,
    0xFFFFFFFFU, 0xFFFFFFFFU, 0xFFFFFFFFU, 0xFFFFFFFFU,
    0xFFFFFFFFU, 0xFFFFFFFFU, 0xFFFFFFFFU, 0xFFFFFFFFU,
    0xFFFFFFFFU, 0xFFFFFFFFU, 0xFFFFFFFFU, 0xFFFFFFFFU,
    0xFFFFFFFFU, 0xFFFFFFFFU, 0xFFFFFFFFU, 0xFFFFFFFFU,
    0xFFFFFFFFU, 0xFFFFFFFFU, 0xFFFFFFFFU, 0xFFFFFFFFU,
    0xFFFFFFFFU, 0xFFFFFFFFU, 0xFFFFFFFFU, 0xFFFFFFFFU,
    0xFFFFFFFFU, 0x0000001FU, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0xA0F8007FU, 0x5F7FFC00U, 0x0000FFDBU, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x0FFFFC00U,
    0xFFFFFFFFU, 0xFFFFFFFFU, 0x3FFFFFFFU, 0xFFFFFFF0U,
    0xFFFFFFFFU, 0xFFFFFFFFU, 0xFFFFFFFFU, 0xFFFFFFFFU,
    0xFFFFFFFFU, 0x3FFFFFFFU, 0xFFFF0000U, 0xFFFFFFFFU,
    0xFFFCFFFFU, 0xFFFFFFFFU, 0x000000FFU, 0x1FFF0000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0xAA820000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x1FE00000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x14000000U, 0x00000800U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x0000C000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00001800U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x58000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x0C000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x01000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0xC0000000U, 0x0000001FU,
    0x00000000U, 0xF8000000U, 0x00000001U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0xFFFF07FFU, 0x000067FFU, 0x0000FC00U, 0x00001C00U,
    0x00010000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000003U, 0x00000000U, 0x000001FFU, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U
  }
};
