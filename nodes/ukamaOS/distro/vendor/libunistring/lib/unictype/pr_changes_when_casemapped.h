/* DO NOT EDIT! GENERATED AUTOMATICALLY! */
/* Properties of Unicode characters.  */
/* Generated automatically by gen-uni-tables.c for Unicode 15.0.0.  */

/* Copyright (C) 2000-2022 Free Software Foundation, Inc.

   This file is free software.
   It is dual-licensed under "the GNU LGPLv3+ or the GNU GPLv2+".
   You can redistribute it and/or modify it under either
     - the terms of the GNU Lesser General Public License as published
       by the Free Software Foundation, either version 3, or (at your
       option) any later version, or
     - the terms of the GNU General Public License as published by the
       Free Software Foundation; either version 2, or (at your option)
       any later version, or
     - the same dual license "the GNU LGPLv3+ or the GNU GPLv2+".

   This file is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License and the GNU General Public License
   for more details.

   You should have received a copy of the GNU Lesser General Public
   License and of the GNU General Public License along with this
   program.  If not, see <https://www.gnu.org/licenses/>.  */

#define header_0 16
#define header_2 9
#define header_3 127
#define header_4 15
static const
struct
  {
    int header[1];
    int level1[2];
    short level2[2 << 7];
    unsigned int level3[19 << 4];
  }
u_property_changes_when_casemapped =
{
  { 2 },
  {
        3 * sizeof (int) / sizeof (short) +     0,
        3 * sizeof (int) / sizeof (short) +   128
  },
  {
        3 +   256 * sizeof (short) / sizeof (int) +     0,
        3 +   256 * sizeof (short) / sizeof (int) +    16,
        3 +   256 * sizeof (short) / sizeof (int) +    32,
       -1,
       -1,
       -1,
       -1,
       -1,
        3 +   256 * sizeof (short) / sizeof (int) +    48,
        3 +   256 * sizeof (short) / sizeof (int) +    64,
       -1,
       -1,
       -1,
       -1,
        3 +   256 * sizeof (short) / sizeof (int) +    80,
        3 +   256 * sizeof (short) / sizeof (int) +    96,
        3 +   256 * sizeof (short) / sizeof (int) +   112,
       -1,
        3 +   256 * sizeof (short) / sizeof (int) +   128,
       -1,
       -1,
       -1,
        3 +   256 * sizeof (short) / sizeof (int) +   144,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
        3 +   256 * sizeof (short) / sizeof (int) +   160,
       -1,
        3 +   256 * sizeof (short) / sizeof (int) +   176,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
        3 +   256 * sizeof (short) / sizeof (int) +   192,
       -1,
        3 +   256 * sizeof (short) / sizeof (int) +   208,
       -1,
       -1,
        3 +   256 * sizeof (short) / sizeof (int) +   224,
       -1,
       -1,
       -1,
        3 +   256 * sizeof (short) / sizeof (int) +   240,
       -1,
       -1,
       -1,
       -1,
       -1,
        3 +   256 * sizeof (short) / sizeof (int) +   256,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
        3 +   256 * sizeof (short) / sizeof (int) +   272,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
        3 +   256 * sizeof (short) / sizeof (int) +   288,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1,
       -1
  },
  {
    0x00000000U, 0x00000000U, 0x07FFFFFEU, 0x07FFFFFEU,
    0x00000000U, 0x00200000U, 0xFF7FFFFFU, 0xFF7FFFFFU,
    0xFFFFFFFFU, 0xFEFFFFFFU, 0xFFFFFFFFU, 0xFFFFFFFFU,
    0xF7FFDFFFU, 0xB3FFF3FFU, 0xFFFFFFF0U, 0xFFFFFFFFU,
    0xFFFFFFFFU, 0xFC0FFFFDU, 0x1ADFFFFFU, 0x20269F6BU,
    0x60041F8DU, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000020U, 0xB8CF0000U,
    0xFFFFD740U, 0xFFFFFFFBU, 0xFFE3FFFFU, 0xEFBFFFFFU,
    0xFFFFFFFFU, 0xFFFFFFFFU, 0xFFFFFFFFU, 0xFFFFFFFFU,
    0xFFFFFC03U, 0xFFFFFFFFU, 0xFFFFFFFFU, 0xFFFFFFFFU,
    0xFFFFFFFFU, 0xFFFEFFFFU, 0x007FFFFFU, 0xFFFFFFFEU,
    0x000000FFU, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0xFFFFFFFFU, 0xFFFF20BFU, 0xE7FFFFFFU,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0xFFFFFFFFU, 0xFFFFFFFFU, 0x3F3FFFFFU,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0xFFFF01FFU, 0xE7FFFFFFU, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x22000000U,
    0x00004000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0xFFFFFFFFU, 0xFFFFFFFFU, 0xFFFFFFFFU, 0xFFFFFFFFU,
    0x4FFFFFFFU, 0xFFFFFFFFU, 0xFFFFFFFFU, 0xFFFFFFFFU,
    0x3F3FFFFFU, 0xFFFFFFFFU, 0xAAFF3F3FU, 0x3FFFFFFFU,
    0xFFFFFFFFU, 0x5FDFFFFFU, 0x0FCF1FDCU, 0x1FDC1FFFU,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00040C40U, 0x00004000U, 0xFFFFFFFFU,
    0x00000018U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0xFFC00000U, 0xFFFFFFFFU, 0x000003FFU,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0xFFFFFFFFU, 0xFFFFFFFFU, 0xFFFFFFFFU, 0xC06DFFFFU,
    0xFFFFFFFFU, 0xFFFFFFFFU, 0xFFFFFFFFU, 0x000C780FU,
    0xFFFFFFFFU, 0x000020BFU, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0xFFFFFFFFU, 0x00003FFFU,
    0x0FFFFFFFU, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0xFFFCFFFCU, 0xFFFFFFFFU, 0xFE00FFFFU,
    0xFFDF38FFU, 0xFFFF7FFFU, 0x03C307FFU, 0x00600000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00080000U, 0xFFFF0000U,
    0xFFFFFFFFU, 0xFFFFFFFFU, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00F8007FU, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x07FFFFFEU, 0x07FFFFFEU, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0xFFFFFFFFU, 0xFFFFFFFFU, 0x0000FFFFU, 0x00000000U,
    0x00000000U, 0xFFFF0000U, 0xFF0FFFFFU, 0x0FFFFFFFU,
    0x00000000U, 0x00000000U, 0x00000000U, 0xF7FF0000U,
    0xFFB7F7FFU, 0x1BFBFFFBU, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0xFFFFFFFFU, 0x0007FFFFU, 0xFFFFFFFFU, 0x0007FFFFU,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0xFFFFFFFFU, 0xFFFFFFFFU, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0xFFFFFFFFU, 0xFFFFFFFFU,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U,
    0xFFFFFFFFU, 0xFFFFFFFFU, 0x0000000FU, 0x00000000U,
    0x00000000U, 0x00000000U, 0x00000000U, 0x00000000U
  }
};
