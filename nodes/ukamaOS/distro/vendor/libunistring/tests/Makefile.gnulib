## DO NOT EDIT! GENERATED AUTOMATICALLY!
## Process this file with automake to produce Makefile.in.
# Copyright (C) 2002-2022 Free Software Foundation, Inc.
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this file.  If not, see <https://www.gnu.org/licenses/>.
#
# As a special exception to the GNU General Public License,
# this file may be distributed as part of a program that
# contains a configuration script generated by Autoconf, under
# the same distribution terms as the rest of that program.
#
# Generated by gnulib-tool.

AUTOMAKE_OPTIONS = 1.14 foreign subdir-objects

SUBDIRS = .
TESTS =
XFAIL_TESTS =
TESTS_ENVIRONMENT =
noinst_PROGRAMS =
check_PROGRAMS =
EXTRA_PROGRAMS =
noinst_HEADERS =
noinst_LIBRARIES =
check_LIBRARIES = libtests.a
EXTRA_DIST =
BUILT_SOURCES =
SUFFIXES =
MOSTLYCLEANFILES = core *.stackdump
MOSTLYCLEANDIRS =
CLEANFILES =
DISTCLEANFILES =
MAINTAINERCLEANFILES =

CFLAGS = @GL_CFLAG_ALLOW_WARNINGS@ $(GL_CFLAG_GNULIB_WARNINGS) @CFLAGS@
CXXFLAGS = @GL_CXXFLAG_ALLOW_WARNINGS@ @CXXFLAGS@

AM_CPPFLAGS = \
  -D@gltests_WITNESS@=1 \
  -I. -I$(srcdir) \
  -I.. -I$(srcdir)/.. \
  -I../lib -I$(srcdir)/../lib

LDADD = libtests.a ../lib/libunistring.la libtests.a ../lib/libunistring.la libtests.a $(LIBTESTS_LIBDEPS)

libtests_a_SOURCES =
libtests_a_LIBADD = $(gltests_LIBOBJS)
libtests_a_DEPENDENCIES = $(gltests_LIBOBJS)
EXTRA_libtests_a_SOURCES =
AM_LIBTOOLFLAGS = --preserve-dup-deps

TESTS_ENVIRONMENT += EXEEXT='@EXEEXT@' srcdir='$(srcdir)'

## begin gnulib module accept

if GL_COND_OBJ_ACCEPT
libtests_a_SOURCES += accept.c
endif

EXTRA_DIST += w32sock.h

## end   gnulib module accept

## begin gnulib module accept-tests

TESTS += test-accept
check_PROGRAMS += test-accept
test_accept_LDADD = $(LDADD) @LIBSOCKET@
EXTRA_DIST += test-accept.c signature.h macros.h

## end   gnulib module accept-tests

## begin gnulib module alloca


libtests_a_LIBADD += @ALLOCA@
libtests_a_DEPENDENCIES += @ALLOCA@
EXTRA_DIST += alloca.c

EXTRA_libtests_a_SOURCES += alloca.c

## end   gnulib module alloca

## begin gnulib module alloca-opt-tests

TESTS += test-alloca-opt
check_PROGRAMS += test-alloca-opt

EXTRA_DIST += test-alloca-opt.c

## end   gnulib module alloca-opt-tests

## begin gnulib module arpa_inet

BUILT_SOURCES += arpa/inet.h

# We need the following in order to create <arpa/inet.h> when the system
# doesn't have one.
arpa/inet.h: arpa_inet.in.h $(top_builddir)/config.status $(CXXDEFS_H) $(WARN_ON_USE_H) $(ARG_NONNULL_H)
	$(AM_V_GEN)$(MKDIR_P) '%reldir%/arpa'
	$(AM_V_at)$(SED_HEADER_STDOUT) \
	      -e 's|@''GUARD_PREFIX''@|GL|g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''HAVE_FEATURES_H''@|$(HAVE_FEATURES_H)|g' \
	      -e 's|@''NEXT_ARPA_INET_H''@|$(NEXT_ARPA_INET_H)|g' \
	      -e 's|@''HAVE_ARPA_INET_H''@|$(HAVE_ARPA_INET_H)|g' \
	      -e 's/@''GNULIB_INET_NTOP''@/$(GL_GNULIB_INET_NTOP)/g' \
	      -e 's/@''GNULIB_INET_PTON''@/$(GL_GNULIB_INET_PTON)/g' \
	      -e 's|@''HAVE_WS2TCPIP_H''@|$(HAVE_WS2TCPIP_H)|g' \
	      -e 's|@''HAVE_DECL_INET_NTOP''@|$(HAVE_DECL_INET_NTOP)|g' \
	      -e 's|@''HAVE_DECL_INET_PTON''@|$(HAVE_DECL_INET_PTON)|g' \
	      -e 's|@''REPLACE_INET_NTOP''@|$(REPLACE_INET_NTOP)|g' \
	      -e 's|@''REPLACE_INET_PTON''@|$(REPLACE_INET_PTON)|g' \
	      -e '/definitions of _GL_FUNCDECL_RPL/r $(CXXDEFS_H)' \
	      -e '/definition of _GL_ARG_NONNULL/r $(ARG_NONNULL_H)' \
	      -e '/definition of _GL_WARN_ON_USE/r $(WARN_ON_USE_H)' \
	      $(srcdir)/arpa_inet.in.h > $@-t
	$(AM_V_at)mv $@-t $@
MOSTLYCLEANFILES += arpa/inet.h arpa/inet.h-t
MOSTLYCLEANDIRS += arpa

EXTRA_DIST += arpa_inet.in.h

## end   gnulib module arpa_inet

## begin gnulib module arpa_inet-tests

TESTS += test-arpa_inet
check_PROGRAMS += test-arpa_inet
EXTRA_DIST += test-arpa_inet.c

## end   gnulib module arpa_inet-tests

## begin gnulib module array-mergesort-tests

TESTS += test-array-mergesort
check_PROGRAMS += test-array-mergesort
EXTRA_DIST += test-array-mergesort.c macros.h

## end   gnulib module array-mergesort-tests

## begin gnulib module assert-h-tests

TESTS += test-assert
check_PROGRAMS += test-assert
EXTRA_DIST += test-assert.c

## end   gnulib module assert-h-tests

## begin gnulib module basename-lgpl

libtests_a_SOURCES += basename-lgpl.c

EXTRA_DIST += basename-lgpl.h

## end   gnulib module basename-lgpl

## begin gnulib module binary-io

libtests_a_SOURCES += binary-io.h binary-io.c

## end   gnulib module binary-io

## begin gnulib module binary-io-tests

TESTS += test-binary-io.sh
check_PROGRAMS += test-binary-io

EXTRA_DIST += test-binary-io.sh test-binary-io.c macros.h

## end   gnulib module binary-io-tests

## begin gnulib module bind

if GL_COND_OBJ_BIND
libtests_a_SOURCES += bind.c
endif

EXTRA_DIST += w32sock.h

## end   gnulib module bind

## begin gnulib module bind-tests

TESTS += test-bind
check_PROGRAMS += test-bind
test_bind_LDADD = $(LDADD) @LIBSOCKET@ $(INET_PTON_LIB)
EXTRA_DIST += test-bind.c signature.h macros.h

## end   gnulib module bind-tests

## begin gnulib module btowc

if GL_COND_OBJ_BTOWC
libtests_a_SOURCES += btowc.c
endif

## end   gnulib module btowc

## begin gnulib module btowc-tests

TESTS += test-btowc1.sh test-btowc2.sh
TESTS_ENVIRONMENT += LOCALE_FR='@LOCALE_FR@' LOCALE_FR_UTF8='@LOCALE_FR_UTF8@'
check_PROGRAMS += test-btowc
test_btowc_LDADD = $(LDADD) $(LIB_SETLOCALE)
EXTRA_DIST += test-btowc1.sh test-btowc2.sh test-btowc.c signature.h macros.h

## end   gnulib module btowc-tests

## begin gnulib module c-ctype-tests

TESTS += test-c-ctype
check_PROGRAMS += test-c-ctype
test_c_ctype_LDADD = $(LDADD) $(LIB_SETLOCALE)
EXTRA_DIST += test-c-ctype.c macros.h

## end   gnulib module c-ctype-tests

## begin gnulib module c-strcase-tests

TESTS += test-c-strcase.sh
TESTS_ENVIRONMENT += LOCALE_FR='@LOCALE_FR@' LOCALE_TR_UTF8='@LOCALE_TR_UTF8@'
check_PROGRAMS += test-c-strcasecmp test-c-strncasecmp
test_c_strcasecmp_LDADD = $(LDADD) $(LIB_SETLOCALE)
test_c_strncasecmp_LDADD = $(LDADD) $(LIB_SETLOCALE)
EXTRA_DIST += test-c-strcase.sh test-c-strcasecmp.c test-c-strncasecmp.c macros.h

## end   gnulib module c-strcase-tests

## begin gnulib module calloc-gnu


EXTRA_DIST += calloc.c

EXTRA_libtests_a_SOURCES += calloc.c

## end   gnulib module calloc-gnu

## begin gnulib module calloc-gnu-tests

TESTS += test-calloc-gnu
check_PROGRAMS += test-calloc-gnu
EXTRA_DIST += test-calloc-gnu.c macros.h

## end   gnulib module calloc-gnu-tests

## begin gnulib module calloc-posix


EXTRA_DIST += calloc.c

EXTRA_libtests_a_SOURCES += calloc.c

## end   gnulib module calloc-posix

## begin gnulib module cloexec

libtests_a_SOURCES += cloexec.c

EXTRA_DIST += cloexec.h

## end   gnulib module cloexec

## begin gnulib module cloexec-tests

TESTS += test-cloexec
check_PROGRAMS += test-cloexec
EXTRA_DIST += test-cloexec.c macros.h

## end   gnulib module cloexec-tests

## begin gnulib module close

if GL_COND_OBJ_CLOSE
libtests_a_SOURCES += close.c
endif

## end   gnulib module close

## begin gnulib module close-tests

TESTS += test-close
check_PROGRAMS += test-close
EXTRA_DIST += test-close.c signature.h macros.h

## end   gnulib module close-tests

## begin gnulib module connect

if GL_COND_OBJ_CONNECT
libtests_a_SOURCES += connect.c
endif

EXTRA_DIST += w32sock.h

## end   gnulib module connect

## begin gnulib module connect-tests

TESTS += test-connect
check_PROGRAMS += test-connect
test_connect_LDADD = $(LDADD) @LIBSOCKET@ $(INET_PTON_LIB)
EXTRA_DIST += test-connect.c signature.h macros.h

## end   gnulib module connect-tests

## begin gnulib module ctype

BUILT_SOURCES += ctype.h

# We need the following in order to create <ctype.h> when the system
# doesn't have one that works with the given compiler.
ctype.h: ctype.in.h $(top_builddir)/config.status $(CXXDEFS_H) $(WARN_ON_USE_H)
	$(gl_V_at)$(SED_HEADER_STDOUT) \
	      -e 's|@''GUARD_PREFIX''@|GL|g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''NEXT_CTYPE_H''@|$(NEXT_CTYPE_H)|g' \
	      -e 's/@''GNULIB_ISBLANK''@/$(GL_GNULIB_ISBLANK)/g' \
	      -e 's/@''HAVE_ISBLANK''@/$(HAVE_ISBLANK)/g' \
	      -e '/definitions of _GL_FUNCDECL_RPL/r $(CXXDEFS_H)' \
	      -e '/definition of _GL_WARN_ON_USE/r $(WARN_ON_USE_H)' \
	      $(srcdir)/ctype.in.h > $@-t
	$(AM_V_at)mv $@-t $@
MOSTLYCLEANFILES += ctype.h ctype.h-t

EXTRA_DIST += ctype.in.h

## end   gnulib module ctype

## begin gnulib module ctype-tests

TESTS += test-ctype
check_PROGRAMS += test-ctype
EXTRA_DIST += test-ctype.c

## end   gnulib module ctype-tests

## begin gnulib module dup2

if GL_COND_OBJ_DUP2
libtests_a_SOURCES += dup2.c
endif

## end   gnulib module dup2

## begin gnulib module dup2-tests

TESTS += test-dup2
check_PROGRAMS += test-dup2
EXTRA_DIST += test-dup2.c signature.h macros.h

## end   gnulib module dup2-tests

## begin gnulib module environ-tests

TESTS += test-environ
check_PROGRAMS += test-environ

EXTRA_DIST += test-environ.c

## end   gnulib module environ-tests

## begin gnulib module errno-tests

TESTS += test-errno
check_PROGRAMS += test-errno

EXTRA_DIST += test-errno.c

## end   gnulib module errno-tests

## begin gnulib module error

if GL_COND_OBJ_ERROR
libtests_a_SOURCES += error.c
endif

EXTRA_DIST += error.h

## end   gnulib module error

## begin gnulib module exitfail

libtests_a_SOURCES += exitfail.c

EXTRA_DIST += exitfail.h

## end   gnulib module exitfail

## begin gnulib module fcntl

if GL_COND_OBJ_FCNTL
libtests_a_SOURCES += fcntl.c
endif

## end   gnulib module fcntl

## begin gnulib module fcntl-h

BUILT_SOURCES += fcntl.h

# We need the following in order to create <fcntl.h> when the system
# doesn't have one that works with the given compiler.
fcntl.h: fcntl.in.h $(top_builddir)/config.status $(CXXDEFS_H) $(ARG_NONNULL_H) $(WARN_ON_USE_H)
	$(gl_V_at)$(SED_HEADER_STDOUT) \
	      -e 's|@''GUARD_PREFIX''@|GL|g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''NEXT_FCNTL_H''@|$(NEXT_FCNTL_H)|g' \
	      -e 's/@''GNULIB_CREAT''@/$(GL_GNULIB_CREAT)/g' \
	      -e 's/@''GNULIB_FCNTL''@/$(GL_GNULIB_FCNTL)/g' \
	      -e 's/@''GNULIB_NONBLOCKING''@/$(GL_GNULIB_NONBLOCKING)/g' \
	      -e 's/@''GNULIB_OPEN''@/$(GL_GNULIB_OPEN)/g' \
	      -e 's/@''GNULIB_OPENAT''@/$(GL_GNULIB_OPENAT)/g' \
	      -e 's/@''GNULIB_MDA_CREAT''@/$(GL_GNULIB_MDA_CREAT)/g' \
	      -e 's/@''GNULIB_MDA_OPEN''@/$(GL_GNULIB_MDA_OPEN)/g' \
	      -e 's|@''HAVE_FCNTL''@|$(HAVE_FCNTL)|g' \
	      -e 's|@''HAVE_OPENAT''@|$(HAVE_OPENAT)|g' \
	      -e 's|@''REPLACE_CREAT''@|$(REPLACE_CREAT)|g' \
	      -e 's|@''REPLACE_FCNTL''@|$(REPLACE_FCNTL)|g' \
	      -e 's|@''REPLACE_OPEN''@|$(REPLACE_OPEN)|g' \
	      -e 's|@''REPLACE_OPENAT''@|$(REPLACE_OPENAT)|g' \
	      -e '/definitions of _GL_FUNCDECL_RPL/r $(CXXDEFS_H)' \
	      -e '/definition of _GL_ARG_NONNULL/r $(ARG_NONNULL_H)' \
	      -e '/definition of _GL_WARN_ON_USE/r $(WARN_ON_USE_H)' \
	      $(srcdir)/fcntl.in.h > $@-t
	$(AM_V_at)mv $@-t $@
MOSTLYCLEANFILES += fcntl.h fcntl.h-t

EXTRA_DIST += fcntl.in.h

## end   gnulib module fcntl-h

## begin gnulib module fcntl-h-tests

TESTS += test-fcntl-h
check_PROGRAMS += test-fcntl-h
EXTRA_DIST += test-fcntl-h.c

## end   gnulib module fcntl-h-tests

## begin gnulib module fcntl-tests

TESTS += test-fcntl
check_PROGRAMS += test-fcntl
EXTRA_DIST += test-fcntl.c signature.h macros.h

## end   gnulib module fcntl-tests

## begin gnulib module fd-hook

libtests_a_SOURCES += fd-hook.c

EXTRA_DIST += fd-hook.h

## end   gnulib module fd-hook

## begin gnulib module fdopen

if GL_COND_OBJ_FDOPEN
libtests_a_SOURCES += fdopen.c
endif

## end   gnulib module fdopen

## begin gnulib module fdopen-tests

TESTS += test-fdopen
check_PROGRAMS += test-fdopen
EXTRA_DIST += test-fdopen.c signature.h macros.h

## end   gnulib module fdopen-tests

## begin gnulib module fgetc-tests

TESTS += test-fgetc
check_PROGRAMS += test-fgetc
EXTRA_DIST += test-fgetc.c signature.h macros.h

## end   gnulib module fgetc-tests

## begin gnulib module filename


EXTRA_DIST += filename.h

## end   gnulib module filename

## begin gnulib module float-tests

TESTS += test-float
check_PROGRAMS += test-float
EXTRA_DIST += test-float.c macros.h

## end   gnulib module float-tests

## begin gnulib module fputc-tests

TESTS += test-fputc
check_PROGRAMS += test-fputc
EXTRA_DIST += test-fputc.c signature.h macros.h

## end   gnulib module fputc-tests

## begin gnulib module fread-tests

TESTS += test-fread
check_PROGRAMS += test-fread
EXTRA_DIST += test-fread.c signature.h macros.h

## end   gnulib module fread-tests

## begin gnulib module free-posix-tests

TESTS += test-free
check_PROGRAMS += test-free
EXTRA_DIST += test-free.c macros.h

## end   gnulib module free-posix-tests

## begin gnulib module frexp-nolibm-tests

TESTS += test-frexp-nolibm
check_PROGRAMS += test-frexp-nolibm
test_frexp_nolibm_SOURCES = test-frexp.c randomd.c
EXTRA_DIST += test-frexp.c test-frexp.h minus-zero.h infinity.h nan.h signature.h macros.h randomd.c

## end   gnulib module frexp-nolibm-tests

## begin gnulib module frexpl-nolibm-tests

TESTS += test-frexpl-nolibm
check_PROGRAMS += test-frexpl-nolibm
test_frexpl_nolibm_SOURCES = test-frexpl.c randoml.c
EXTRA_DIST += test-frexpl.c test-frexp.h minus-zero.h infinity.h nan.h signature.h macros.h randoml.c

## end   gnulib module frexpl-nolibm-tests

## begin gnulib module fseterr-tests

TESTS += test-fseterr
check_PROGRAMS += test-fseterr

EXTRA_DIST += test-fseterr.c

## end   gnulib module fseterr-tests

## begin gnulib module fstat

if GL_COND_OBJ_FSTAT
libtests_a_SOURCES += fstat.c
endif

EXTRA_DIST += stat-w32.c stat-w32.h

EXTRA_libtests_a_SOURCES += stat-w32.c

## end   gnulib module fstat

## begin gnulib module fstat-tests

TESTS += test-fstat
check_PROGRAMS += test-fstat
EXTRA_DIST += test-fstat.c signature.h macros.h

## end   gnulib module fstat-tests

## begin gnulib module ftruncate

if GL_COND_OBJ_FTRUNCATE
libtests_a_SOURCES += ftruncate.c
endif

## end   gnulib module ftruncate

## begin gnulib module ftruncate-tests

TESTS += test-ftruncate.sh
check_PROGRAMS += test-ftruncate
EXTRA_DIST += test-ftruncate.c test-ftruncate.sh signature.h macros.h

## end   gnulib module ftruncate-tests

## begin gnulib module fwrite-tests

TESTS += test-fwrite
check_PROGRAMS += test-fwrite
EXTRA_DIST += test-fwrite.c signature.h macros.h

## end   gnulib module fwrite-tests

## begin gnulib module gen-header

# In 'sed', replace the pattern space with a "DO NOT EDIT" comment.
SED_HEADER_NOEDIT = s,.*,/* DO NOT EDIT! GENERATED AUTOMATICALLY! */,

# '$(SED_HEADER_STDOUT) -e "..."' runs 'sed' but first outputs "DO NOT EDIT".
SED_HEADER_STDOUT = sed -e 1h -e '1$(SED_HEADER_NOEDIT)' -e 1G

# '$(SED_HEADER_TO_AT_t) FILE' copies FILE to $@-t, prepending a leading
# "DO_NOT_EDIT".  Although this could be done more simply via:
#	SED_HEADER_TO_AT_t = $(SED_HEADER_STDOUT) > $@-t
# the -n and 'w' avoid a fork+exec, at least when GNU Make is used.
SED_HEADER_TO_AT_t = $(SED_HEADER_STDOUT) -n -e 'w $@-t'

# Use $(gl_V_at) instead of $(AM_V_GEN) or $(AM_V_at) on a line that
gl_V_at = $(AM_V_GEN)

## end   gnulib module gen-header

## begin gnulib module getcwd-lgpl

if GL_COND_OBJ_GETCWD_LGPL
libtests_a_SOURCES += getcwd-lgpl.c
endif

## end   gnulib module getcwd-lgpl

## begin gnulib module getcwd-lgpl-tests

TESTS += test-getcwd-lgpl
check_PROGRAMS += test-getcwd-lgpl
test_getcwd_lgpl_LDADD = $(LDADD) $(LIBINTL)
EXTRA_DIST += test-getcwd-lgpl.c signature.h macros.h

## end   gnulib module getcwd-lgpl-tests

## begin gnulib module getdtablesize

if GL_COND_OBJ_GETDTABLESIZE
libtests_a_SOURCES += getdtablesize.c
endif

## end   gnulib module getdtablesize

## begin gnulib module getdtablesize-tests

TESTS += test-getdtablesize
check_PROGRAMS += test-getdtablesize
EXTRA_DIST += test-getdtablesize.c signature.h macros.h

## end   gnulib module getdtablesize-tests

## begin gnulib module getpagesize

if GL_COND_OBJ_GETPAGESIZE
libtests_a_SOURCES += getpagesize.c
endif

## end   gnulib module getpagesize

## begin gnulib module getprogname

libtests_a_SOURCES += getprogname.h getprogname.c

## end   gnulib module getprogname

## begin gnulib module getprogname-tests

DEFS += -DEXEEXT=\"@EXEEXT@\"
TESTS += test-getprogname
check_PROGRAMS += test-getprogname
test_getprogname_LDADD = $(LDADD)
EXTRA_DIST += test-getprogname.c

## end   gnulib module getprogname-tests

## begin gnulib module gettext-h

libtests_a_SOURCES += gettext.h

## end   gnulib module gettext-h

## begin gnulib module gettimeofday

if GL_COND_OBJ_GETTIMEOFDAY
libtests_a_SOURCES += gettimeofday.c
endif

## end   gnulib module gettimeofday

## begin gnulib module gettimeofday-tests

TESTS += test-gettimeofday
check_PROGRAMS += test-gettimeofday

EXTRA_DIST += signature.h test-gettimeofday.c

## end   gnulib module gettimeofday-tests

## begin gnulib module gperf

GPERF = gperf
V_GPERF = $(V_GPERF_@AM_V@)
V_GPERF_ = $(V_GPERF_@AM_DEFAULT_V@)
V_GPERF_0 = @echo "  GPERF   " $@;

## end   gnulib module gperf

## begin gnulib module hard-locale-tests

TESTS += test-hard-locale
check_PROGRAMS += test-hard-locale
test_hard_locale_LDADD = $(LDADD) $(LIB_SETLOCALE) @LIB_HARD_LOCALE@
# We cannot call this program 'locale', because the C++ compiler on Mac OS X
# would then barf upon '#include <locale>'. So, call it 'current-locale'.
noinst_PROGRAMS += current-locale
current_locale_SOURCES = locale.c
EXTRA_DIST += test-hard-locale.c locale.c

## end   gnulib module hard-locale-tests

## begin gnulib module ialloc

libtests_a_SOURCES += ialloc.c

EXTRA_DIST += ialloc.h

## end   gnulib module ialloc

## begin gnulib module iconv-h-tests

TESTS += test-iconv-h
check_PROGRAMS += test-iconv-h
EXTRA_DIST += test-iconv-h.c

## end   gnulib module iconv-h-tests

## begin gnulib module iconv-tests

TESTS += test-iconv
check_PROGRAMS += test-iconv
test_iconv_LDADD = $(LDADD) @LIBICONV@

EXTRA_DIST += test-iconv.c signature.h macros.h

## end   gnulib module iconv-tests

## begin gnulib module ignore-value


EXTRA_DIST += ignore-value.h

## end   gnulib module ignore-value

## begin gnulib module ignore-value-tests

TESTS += test-ignore-value
check_PROGRAMS += test-ignore-value
EXTRA_DIST += test-ignore-value.c

## end   gnulib module ignore-value-tests

## begin gnulib module inet_pton

if GL_COND_OBJ_INET_PTON
libtests_a_SOURCES += inet_pton.c
endif

## end   gnulib module inet_pton

## begin gnulib module inet_pton-tests

TESTS += test-inet_pton
check_PROGRAMS += test-inet_pton
test_inet_pton_LDADD = $(LDADD) @INET_PTON_LIB@
EXTRA_DIST += test-inet_pton.c signature.h macros.h

## end   gnulib module inet_pton-tests

## begin gnulib module intprops


EXTRA_DIST += intprops-internal.h intprops.h

## end   gnulib module intprops

## begin gnulib module intprops-tests

TESTS += test-intprops
check_PROGRAMS += test-intprops
EXTRA_DIST += test-intprops.c macros.h

## end   gnulib module intprops-tests

## begin gnulib module inttypes-tests

TESTS += test-inttypes
check_PROGRAMS += test-inttypes
EXTRA_DIST += test-inttypes.c

## end   gnulib module inttypes-tests

## begin gnulib module ioctl

if GL_COND_OBJ_IOCTL
libtests_a_SOURCES += ioctl.c
endif

EXTRA_DIST += w32sock.h

## end   gnulib module ioctl

## begin gnulib module ioctl-tests

TESTS += test-ioctl
check_PROGRAMS += test-ioctl
EXTRA_DIST += test-ioctl.c signature.h macros.h

## end   gnulib module ioctl-tests

## begin gnulib module isblank

if GL_COND_OBJ_ISBLANK
libtests_a_SOURCES += isblank.c
endif

## end   gnulib module isblank

## begin gnulib module isblank-tests

TESTS += test-isblank
check_PROGRAMS += test-isblank
EXTRA_DIST += test-isblank.c signature.h macros.h

## end   gnulib module isblank-tests

## begin gnulib module isnand-nolibm-tests

TESTS += test-isnand-nolibm
check_PROGRAMS += test-isnand-nolibm

EXTRA_DIST += test-isnand-nolibm.c test-isnand.h minus-zero.h infinity.h nan.h macros.h

## end   gnulib module isnand-nolibm-tests

## begin gnulib module isnanf-nolibm-tests

TESTS += test-isnanf-nolibm
check_PROGRAMS += test-isnanf-nolibm

EXTRA_DIST += test-isnanf-nolibm.c test-isnanf.h minus-zero.h infinity.h nan.h macros.h

## end   gnulib module isnanf-nolibm-tests

## begin gnulib module isnanl-nolibm-tests

TESTS += test-isnanl-nolibm
check_PROGRAMS += test-isnanl-nolibm

EXTRA_DIST += test-isnanl-nolibm.c test-isnanl.h minus-zero.h infinity.h nan.h macros.h

## end   gnulib module isnanl-nolibm-tests

## begin gnulib module iswblank-tests

TESTS += test-iswblank
check_PROGRAMS += test-iswblank
EXTRA_DIST += test-iswblank.c macros.h

## end   gnulib module iswblank-tests

## begin gnulib module iswdigit-tests

TESTS += test-iswdigit.sh
TESTS_ENVIRONMENT += \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' \
  LOCALE_JA='@LOCALE_JA@' \
  LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-iswdigit
test_iswdigit_LDADD = $(LDADD) $(LIB_SETLOCALE) $(LIB_MBRTOWC)
EXTRA_DIST += test-iswdigit.sh test-iswdigit.c signature.h macros.h

## end   gnulib module iswdigit-tests

## begin gnulib module iswxdigit-tests

TESTS += test-iswxdigit.sh
TESTS_ENVIRONMENT += \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' \
  LOCALE_JA='@LOCALE_JA@' \
  LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-iswxdigit
test_iswxdigit_LDADD = $(LDADD) $(LIB_SETLOCALE) $(LIB_MBRTOWC)
EXTRA_DIST += test-iswxdigit.sh test-iswxdigit.c signature.h macros.h

## end   gnulib module iswxdigit-tests

## begin gnulib module langinfo-tests

TESTS += test-langinfo
check_PROGRAMS += test-langinfo
EXTRA_DIST += test-langinfo.c

## end   gnulib module langinfo-tests

## begin gnulib module limits-h-tests

TESTS += test-limits-h
check_PROGRAMS += test-limits-h
EXTRA_DIST += test-limits-h.c

## end   gnulib module limits-h-tests

## begin gnulib module listen

if GL_COND_OBJ_LISTEN
libtests_a_SOURCES += listen.c
endif

EXTRA_DIST += w32sock.h

## end   gnulib module listen

## begin gnulib module listen-tests

TESTS += test-listen
check_PROGRAMS += test-listen
test_listen_LDADD = $(LDADD) @LIBSOCKET@
EXTRA_DIST += test-listen.c signature.h macros.h

## end   gnulib module listen-tests

## begin gnulib module localcharset-tests

noinst_PROGRAMS += test-localcharset
test_localcharset_LDADD = $(LDADD) $(LIB_SETLOCALE)
EXTRA_DIST += test-localcharset.c

## end   gnulib module localcharset-tests

## begin gnulib module locale-tests

TESTS += test-locale
check_PROGRAMS += test-locale
EXTRA_DIST += test-locale.c

## end   gnulib module locale-tests

## begin gnulib module localename-tests

TESTS += test-localename
check_PROGRAMS += test-localename
test_localename_LDADD = $(LDADD) $(LIB_SETLOCALE) @INTL_MACOSX_LIBS@ $(LIBTHREAD)

EXTRA_DIST += test-localename.c macros.h

## end   gnulib module localename-tests

## begin gnulib module lock-tests

TESTS += test-rwlock1 test-lock test-once1 test-once2
check_PROGRAMS += test-rwlock1 test-lock test-once1 test-once2
test_rwlock1_LDADD = $(LDADD) @LIBMULTITHREAD@ @YIELD_LIB@
test_lock_LDADD = $(LDADD) @LIBMULTITHREAD@ @YIELD_LIB@ @LIB_SEMAPHORE@
test_once1_SOURCES = test-once.c
test_once1_LDADD = $(LDADD) @LIBTHREAD@
test_once2_SOURCES = test-once.c
test_once2_LDADD = $(LDADD) @LIBMULTITHREAD@
EXTRA_DIST += test-rwlock1.c test-lock.c test-once.c atomic-int-gnulib.h

## end   gnulib module lock-tests

## begin gnulib module lstat

if GL_COND_OBJ_LSTAT
libtests_a_SOURCES += lstat.c
endif

## end   gnulib module lstat

## begin gnulib module lstat-tests

TESTS += test-lstat
check_PROGRAMS += test-lstat
EXTRA_DIST += test-lstat.h test-lstat.c signature.h macros.h

## end   gnulib module lstat-tests

## begin gnulib module malloc-gnu


EXTRA_DIST += malloc.c

EXTRA_libtests_a_SOURCES += malloc.c

## end   gnulib module malloc-gnu

## begin gnulib module malloc-gnu-tests

TESTS += test-malloc-gnu
check_PROGRAMS += test-malloc-gnu
EXTRA_DIST += test-malloc-gnu.c macros.h

## end   gnulib module malloc-gnu-tests

## begin gnulib module malloca-tests

TESTS += test-malloca
check_PROGRAMS += test-malloca

EXTRA_DIST += test-malloca.c

## end   gnulib module malloca-tests

## begin gnulib module math-tests

TESTS += test-math
check_PROGRAMS += test-math
EXTRA_DIST += test-math.c macros.h

## end   gnulib module math-tests

## begin gnulib module mbrtowc-tests

TESTS += \
  test-mbrtowc1.sh test-mbrtowc2.sh test-mbrtowc3.sh test-mbrtowc4.sh \
  test-mbrtowc5.sh \
  test-mbrtowc-w32-1.sh test-mbrtowc-w32-2.sh test-mbrtowc-w32-3.sh \
  test-mbrtowc-w32-4.sh test-mbrtowc-w32-5.sh test-mbrtowc-w32-6.sh \
  test-mbrtowc-w32-7.sh
TESTS_ENVIRONMENT += \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' \
  LOCALE_JA='@LOCALE_JA@' \
  LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-mbrtowc test-mbrtowc-w32
test_mbrtowc_LDADD = $(LDADD) $(LIB_SETLOCALE) $(LIB_MBRTOWC)
EXTRA_DIST += test-mbrtowc1.sh test-mbrtowc2.sh test-mbrtowc3.sh test-mbrtowc4.sh test-mbrtowc5.sh test-mbrtowc.c test-mbrtowc-w32-1.sh test-mbrtowc-w32-2.sh test-mbrtowc-w32-3.sh test-mbrtowc-w32-4.sh test-mbrtowc-w32-5.sh test-mbrtowc-w32-6.sh test-mbrtowc-w32-7.sh test-mbrtowc-w32.c signature.h macros.h

## end   gnulib module mbrtowc-tests

## begin gnulib module mbsinit-tests

TESTS += test-mbsinit.sh
TESTS_ENVIRONMENT += LOCALE_FR_UTF8='@LOCALE_FR_UTF8@'
check_PROGRAMS += test-mbsinit
test_mbsinit_LDADD = $(LDADD) $(LIB_SETLOCALE) $(LIB_MBRTOWC)
EXTRA_DIST += test-mbsinit.sh test-mbsinit.c signature.h macros.h

## end   gnulib module mbsinit-tests

## begin gnulib module mbtowc

if GL_COND_OBJ_MBTOWC
libtests_a_SOURCES += mbtowc.c
endif

EXTRA_DIST += mbtowc-impl.h

## end   gnulib module mbtowc

## begin gnulib module memchr-tests

TESTS += test-memchr
check_PROGRAMS += test-memchr
EXTRA_DIST += test-memchr.c zerosize-ptr.h signature.h macros.h

## end   gnulib module memchr-tests

## begin gnulib module msvc-inval

if GL_COND_OBJ_MSVC_INVAL
libtests_a_SOURCES += msvc-inval.c
endif

EXTRA_DIST += msvc-inval.h

## end   gnulib module msvc-inval

## begin gnulib module msvc-nothrow

if GL_COND_OBJ_MSVC_NOTHROW
libtests_a_SOURCES += msvc-nothrow.c
endif

EXTRA_DIST += msvc-nothrow.h

## end   gnulib module msvc-nothrow

## begin gnulib module nanosleep

if GL_COND_OBJ_NANOSLEEP
libtests_a_SOURCES += nanosleep.c
endif

## end   gnulib module nanosleep

## begin gnulib module nanosleep-tests

TESTS += test-nanosleep
check_PROGRAMS += test-nanosleep
test_nanosleep_LDADD = $(LDADD) $(LIB_NANOSLEEP)
EXTRA_DIST += test-nanosleep.c signature.h macros.h

## end   gnulib module nanosleep-tests

## begin gnulib module netinet_in

BUILT_SOURCES += $(NETINET_IN_H)

# We need the following in order to create <netinet/in.h> when the system
# doesn't have one.
if GL_GENERATE_NETINET_IN_H
netinet/in.h: netinet_in.in.h $(top_builddir)/config.status
	$(AM_V_GEN)$(MKDIR_P) '%reldir%/netinet'
	$(AM_V_at)$(SED_HEADER_STDOUT) \
	      -e 's|@''GUARD_PREFIX''@|GL|g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''NEXT_NETINET_IN_H''@|$(NEXT_NETINET_IN_H)|g' \
	      -e 's|@''HAVE_NETINET_IN_H''@|$(HAVE_NETINET_IN_H)|g' \
	      $(srcdir)/netinet_in.in.h > $@-t
	$(AM_V_at)mv $@-t $@
else
netinet/in.h: $(top_builddir)/config.status
	rm -f $@
endif
MOSTLYCLEANFILES += netinet/in.h netinet/in.h-t
MOSTLYCLEANDIRS += netinet

EXTRA_DIST += netinet_in.in.h

## end   gnulib module netinet_in

## begin gnulib module netinet_in-tests

TESTS += test-netinet_in
check_PROGRAMS += test-netinet_in
EXTRA_DIST += test-netinet_in.c

## end   gnulib module netinet_in-tests

## begin gnulib module open

if GL_COND_OBJ_OPEN
libtests_a_SOURCES += open.c
endif

## end   gnulib module open

## begin gnulib module open-tests

TESTS += test-open
check_PROGRAMS += test-open
EXTRA_DIST += test-open.h test-open.c signature.h macros.h

## end   gnulib module open-tests

## begin gnulib module pathmax


EXTRA_DIST += pathmax.h

## end   gnulib module pathmax

## begin gnulib module pathmax-tests

TESTS += test-pathmax
check_PROGRAMS += test-pathmax
EXTRA_DIST += test-pathmax.c

## end   gnulib module pathmax-tests

## begin gnulib module perror

if GL_COND_OBJ_PERROR
libtests_a_SOURCES += perror.c
endif

## end   gnulib module perror

## begin gnulib module perror-tests

TESTS += test-perror.sh test-perror2
check_PROGRAMS += test-perror test-perror2
EXTRA_DIST += macros.h signature.h test-perror.c test-perror2.c test-perror.sh

## end   gnulib module perror-tests

## begin gnulib module pipe-posix

if GL_COND_OBJ_PIPE
libtests_a_SOURCES += pipe.c
endif

## end   gnulib module pipe-posix

## begin gnulib module pipe-posix-tests

TESTS += test-pipe
check_PROGRAMS += test-pipe
EXTRA_DIST += test-pipe.c signature.h macros.h

## end   gnulib module pipe-posix-tests

## begin gnulib module printf-frexp-tests

TESTS += test-printf-frexp
check_PROGRAMS += test-printf-frexp
EXTRA_DIST += test-printf-frexp.c macros.h

## end   gnulib module printf-frexp-tests

## begin gnulib module printf-frexpl-tests

TESTS += test-printf-frexpl
check_PROGRAMS += test-printf-frexpl
EXTRA_DIST += test-printf-frexpl.c macros.h

## end   gnulib module printf-frexpl-tests

## begin gnulib module pselect

if GL_COND_OBJ_PSELECT
libtests_a_SOURCES += pselect.c
endif

## end   gnulib module pselect

## begin gnulib module pselect-tests

TESTS += test-pselect
check_PROGRAMS += test-pselect
test_pselect_LDADD = $(LDADD) @LIB_SELECT@ @LIBSOCKET@ @LIB_PTHREAD_SIGMASK@ $(INET_PTON_LIB)
EXTRA_DIST += test-pselect.c test-select.h macros.h signature.h

## end   gnulib module pselect-tests

## begin gnulib module pthread-h

BUILT_SOURCES += pthread.h

# We need the following in order to create <pthread.h> when the system
# doesn't have one that works with the given compiler.
pthread.h: pthread.in.h $(top_builddir)/config.status $(CXXDEFS_H) $(_NORETURN_H) $(ARG_NONNULL_H) $(WARN_ON_USE_H)
	$(gl_V_at)$(SED_HEADER_STDOUT) \
	      -e 's|@''GUARD_PREFIX''@|GL|g' \
	      -e 's|@''HAVE_PTHREAD_H''@|$(HAVE_PTHREAD_H)|g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''NEXT_PTHREAD_H''@|$(NEXT_PTHREAD_H)|g' \
	      -e 's/@''GNULIB_PTHREAD_THREAD''@/$(GL_GNULIB_PTHREAD_THREAD)/g' \
	      -e 's/@''GNULIB_PTHREAD_ONCE''@/$(GL_GNULIB_PTHREAD_ONCE)/g' \
	      -e 's/@''GNULIB_PTHREAD_MUTEX''@/$(GL_GNULIB_PTHREAD_MUTEX)/g' \
	      -e 's/@''GNULIB_PTHREAD_RWLOCK''@/$(GL_GNULIB_PTHREAD_RWLOCK)/g' \
	      -e 's/@''GNULIB_PTHREAD_COND''@/$(GL_GNULIB_PTHREAD_COND)/g' \
	      -e 's/@''GNULIB_PTHREAD_TSS''@/$(GL_GNULIB_PTHREAD_TSS)/g' \
	      -e 's/@''GNULIB_PTHREAD_SPIN''@/$(GL_GNULIB_PTHREAD_SPIN)/g' \
	      -e 's/@''GNULIB_PTHREAD_MUTEX_TIMEDLOCK''@/$(GL_GNULIB_PTHREAD_MUTEX_TIMEDLOCK)/g' \
	      -e 's|@''HAVE_PTHREAD_T''@|$(HAVE_PTHREAD_T)|g' \
	      -e 's|@''HAVE_PTHREAD_SPINLOCK_T''@|$(HAVE_PTHREAD_SPINLOCK_T)|g' \
	      -e 's|@''HAVE_PTHREAD_CREATE_DETACHED''@|$(HAVE_PTHREAD_CREATE_DETACHED)|g' \
	      -e 's|@''HAVE_PTHREAD_MUTEX_RECURSIVE''@|$(HAVE_PTHREAD_MUTEX_RECURSIVE)|g' \
	      -e 's|@''HAVE_PTHREAD_MUTEX_ROBUST''@|$(HAVE_PTHREAD_MUTEX_ROBUST)|g' \
	      -e 's|@''HAVE_PTHREAD_PROCESS_SHARED''@|$(HAVE_PTHREAD_PROCESS_SHARED)|g' \
	      -e 's|@''HAVE_PTHREAD_CREATE''@|$(HAVE_PTHREAD_CREATE)|g' \
	      -e 's|@''HAVE_PTHREAD_ATTR_INIT''@|$(HAVE_PTHREAD_ATTR_INIT)|g' \
	      -e 's|@''HAVE_PTHREAD_ATTR_GETDETACHSTATE''@|$(HAVE_PTHREAD_ATTR_GETDETACHSTATE)|g' \
	      -e 's|@''HAVE_PTHREAD_ATTR_SETDETACHSTATE''@|$(HAVE_PTHREAD_ATTR_SETDETACHSTATE)|g' \
	      -e 's|@''HAVE_PTHREAD_ATTR_DESTROY''@|$(HAVE_PTHREAD_ATTR_DESTROY)|g' \
	      -e 's|@''HAVE_PTHREAD_SELF''@|$(HAVE_PTHREAD_SELF)|g' \
	      -e 's|@''HAVE_PTHREAD_EQUAL''@|$(HAVE_PTHREAD_EQUAL)|g' \
	      -e 's|@''HAVE_PTHREAD_DETACH''@|$(HAVE_PTHREAD_DETACH)|g' \
	      -e 's|@''HAVE_PTHREAD_JOIN''@|$(HAVE_PTHREAD_JOIN)|g' \
	      -e 's|@''HAVE_PTHREAD_EXIT''@|$(HAVE_PTHREAD_EXIT)|g' \
	      -e 's|@''HAVE_PTHREAD_ONCE''@|$(HAVE_PTHREAD_ONCE)|g' \
	      -e 's|@''HAVE_PTHREAD_MUTEX_INIT''@|$(HAVE_PTHREAD_MUTEX_INIT)|g' \
	      -e 's|@''HAVE_PTHREAD_MUTEXATTR_INIT''@|$(HAVE_PTHREAD_MUTEXATTR_INIT)|g' \
	      -e 's|@''HAVE_PTHREAD_MUTEXATTR_GETTYPE''@|$(HAVE_PTHREAD_MUTEXATTR_GETTYPE)|g' \
	      -e 's|@''HAVE_PTHREAD_MUTEXATTR_SETTYPE''@|$(HAVE_PTHREAD_MUTEXATTR_SETTYPE)|g' \
	      -e 's|@''HAVE_PTHREAD_MUTEXATTR_GETROBUST''@|$(HAVE_PTHREAD_MUTEXATTR_GETROBUST)|g' \
	      -e 's|@''HAVE_PTHREAD_MUTEXATTR_SETROBUST''@|$(HAVE_PTHREAD_MUTEXATTR_SETROBUST)|g' \
	      -e 's|@''HAVE_PTHREAD_MUTEXATTR_DESTROY''@|$(HAVE_PTHREAD_MUTEXATTR_DESTROY)|g' \
	      -e 's|@''HAVE_PTHREAD_MUTEX_LOCK''@|$(HAVE_PTHREAD_MUTEX_LOCK)|g' \
	      -e 's|@''HAVE_PTHREAD_MUTEX_TRYLOCK''@|$(HAVE_PTHREAD_MUTEX_TRYLOCK)|g' \
	      -e 's|@''HAVE_PTHREAD_MUTEX_TIMEDLOCK''@|$(HAVE_PTHREAD_MUTEX_TIMEDLOCK)|g' \
	      -e 's|@''HAVE_PTHREAD_MUTEX_UNLOCK''@|$(HAVE_PTHREAD_MUTEX_UNLOCK)|g' \
	      -e 's|@''HAVE_PTHREAD_MUTEX_DESTROY''@|$(HAVE_PTHREAD_MUTEX_DESTROY)|g' \
	      -e 's|@''HAVE_PTHREAD_RWLOCK_INIT''@|$(HAVE_PTHREAD_RWLOCK_INIT)|g' \
	      -e 's|@''HAVE_PTHREAD_RWLOCKATTR_INIT''@|$(HAVE_PTHREAD_RWLOCKATTR_INIT)|g' \
	      -e 's|@''HAVE_PTHREAD_RWLOCKATTR_DESTROY''@|$(HAVE_PTHREAD_RWLOCKATTR_DESTROY)|g' \
	      -e 's|@''HAVE_PTHREAD_RWLOCK_RDLOCK''@|$(HAVE_PTHREAD_RWLOCK_RDLOCK)|g' \
	      -e 's|@''HAVE_PTHREAD_RWLOCK_WRLOCK''@|$(HAVE_PTHREAD_RWLOCK_WRLOCK)|g' \
	      -e 's|@''HAVE_PTHREAD_RWLOCK_TRYRDLOCK''@|$(HAVE_PTHREAD_RWLOCK_TRYRDLOCK)|g' \
	      -e 's|@''HAVE_PTHREAD_RWLOCK_TRYWRLOCK''@|$(HAVE_PTHREAD_RWLOCK_TRYWRLOCK)|g' \
	      -e 's|@''HAVE_PTHREAD_RWLOCK_TIMEDRDLOCK''@|$(HAVE_PTHREAD_RWLOCK_TIMEDRDLOCK)|g' \
	      -e 's|@''HAVE_PTHREAD_RWLOCK_TIMEDWRLOCK''@|$(HAVE_PTHREAD_RWLOCK_TIMEDWRLOCK)|g' \
	      -e 's|@''HAVE_PTHREAD_RWLOCK_UNLOCK''@|$(HAVE_PTHREAD_RWLOCK_UNLOCK)|g' \
	      -e 's|@''HAVE_PTHREAD_RWLOCK_DESTROY''@|$(HAVE_PTHREAD_RWLOCK_DESTROY)|g' \
	      -e 's|@''HAVE_PTHREAD_COND_INIT''@|$(HAVE_PTHREAD_COND_INIT)|g' \
	      -e 's|@''HAVE_PTHREAD_CONDATTR_INIT''@|$(HAVE_PTHREAD_CONDATTR_INIT)|g' \
	      -e 's|@''HAVE_PTHREAD_CONDATTR_DESTROY''@|$(HAVE_PTHREAD_CONDATTR_DESTROY)|g' \
	      -e 's|@''HAVE_PTHREAD_COND_WAIT''@|$(HAVE_PTHREAD_COND_WAIT)|g' \
	      -e 's|@''HAVE_PTHREAD_COND_TIMEDWAIT''@|$(HAVE_PTHREAD_COND_TIMEDWAIT)|g' \
	      -e 's|@''HAVE_PTHREAD_COND_SIGNAL''@|$(HAVE_PTHREAD_COND_SIGNAL)|g' \
	      -e 's|@''HAVE_PTHREAD_COND_BROADCAST''@|$(HAVE_PTHREAD_COND_BROADCAST)|g' \
	      -e 's|@''HAVE_PTHREAD_COND_DESTROY''@|$(HAVE_PTHREAD_COND_DESTROY)|g' \
	      -e 's|@''HAVE_PTHREAD_KEY_CREATE''@|$(HAVE_PTHREAD_KEY_CREATE)|g' \
	      -e 's|@''HAVE_PTHREAD_SETSPECIFIC''@|$(HAVE_PTHREAD_SETSPECIFIC)|g' \
	      -e 's|@''HAVE_PTHREAD_GETSPECIFIC''@|$(HAVE_PTHREAD_GETSPECIFIC)|g' \
	      -e 's|@''HAVE_PTHREAD_KEY_DELETE''@|$(HAVE_PTHREAD_KEY_DELETE)|g' \
	      -e 's|@''HAVE_PTHREAD_SPIN_INIT''@|$(HAVE_PTHREAD_SPIN_INIT)|g' \
	      -e 's|@''HAVE_PTHREAD_SPIN_LOCK''@|$(HAVE_PTHREAD_SPIN_LOCK)|g' \
	      -e 's|@''HAVE_PTHREAD_SPIN_TRYLOCK''@|$(HAVE_PTHREAD_SPIN_TRYLOCK)|g' \
	      -e 's|@''HAVE_PTHREAD_SPIN_UNLOCK''@|$(HAVE_PTHREAD_SPIN_UNLOCK)|g' \
	      -e 's|@''HAVE_PTHREAD_SPIN_DESTROY''@|$(HAVE_PTHREAD_SPIN_DESTROY)|g' \
	      < $(srcdir)/pthread.in.h | \
	  sed -e 's|@''REPLACE_PTHREAD_CREATE''@|$(REPLACE_PTHREAD_CREATE)|g' \
	      -e 's|@''REPLACE_PTHREAD_ATTR_INIT''@|$(REPLACE_PTHREAD_ATTR_INIT)|g' \
	      -e 's|@''REPLACE_PTHREAD_ATTR_GETDETACHSTATE''@|$(REPLACE_PTHREAD_ATTR_GETDETACHSTATE)|g' \
	      -e 's|@''REPLACE_PTHREAD_ATTR_SETDETACHSTATE''@|$(REPLACE_PTHREAD_ATTR_SETDETACHSTATE)|g' \
	      -e 's|@''REPLACE_PTHREAD_ATTR_DESTROY''@|$(REPLACE_PTHREAD_ATTR_DESTROY)|g' \
	      -e 's|@''REPLACE_PTHREAD_SELF''@|$(REPLACE_PTHREAD_SELF)|g' \
	      -e 's|@''REPLACE_PTHREAD_EQUAL''@|$(REPLACE_PTHREAD_EQUAL)|g' \
	      -e 's|@''REPLACE_PTHREAD_DETACH''@|$(REPLACE_PTHREAD_DETACH)|g' \
	      -e 's|@''REPLACE_PTHREAD_JOIN''@|$(REPLACE_PTHREAD_JOIN)|g' \
	      -e 's|@''REPLACE_PTHREAD_EXIT''@|$(REPLACE_PTHREAD_EXIT)|g' \
	      -e 's|@''REPLACE_PTHREAD_ONCE''@|$(REPLACE_PTHREAD_ONCE)|g' \
	      -e 's|@''REPLACE_PTHREAD_MUTEX_INIT''@|$(REPLACE_PTHREAD_MUTEX_INIT)|g' \
	      -e 's|@''REPLACE_PTHREAD_MUTEXATTR_INIT''@|$(REPLACE_PTHREAD_MUTEXATTR_INIT)|g' \
	      -e 's|@''REPLACE_PTHREAD_MUTEXATTR_GETTYPE''@|$(REPLACE_PTHREAD_MUTEXATTR_GETTYPE)|g' \
	      -e 's|@''REPLACE_PTHREAD_MUTEXATTR_SETTYPE''@|$(REPLACE_PTHREAD_MUTEXATTR_SETTYPE)|g' \
	      -e 's|@''REPLACE_PTHREAD_MUTEXATTR_GETROBUST''@|$(REPLACE_PTHREAD_MUTEXATTR_GETROBUST)|g' \
	      -e 's|@''REPLACE_PTHREAD_MUTEXATTR_SETROBUST''@|$(REPLACE_PTHREAD_MUTEXATTR_SETROBUST)|g' \
	      -e 's|@''REPLACE_PTHREAD_MUTEXATTR_DESTROY''@|$(REPLACE_PTHREAD_MUTEXATTR_DESTROY)|g' \
	      -e 's|@''REPLACE_PTHREAD_MUTEX_LOCK''@|$(REPLACE_PTHREAD_MUTEX_LOCK)|g' \
	      -e 's|@''REPLACE_PTHREAD_MUTEX_TRYLOCK''@|$(REPLACE_PTHREAD_MUTEX_TRYLOCK)|g' \
	      -e 's|@''REPLACE_PTHREAD_MUTEX_TIMEDLOCK''@|$(REPLACE_PTHREAD_MUTEX_TIMEDLOCK)|g' \
	      -e 's|@''REPLACE_PTHREAD_MUTEX_UNLOCK''@|$(REPLACE_PTHREAD_MUTEX_UNLOCK)|g' \
	      -e 's|@''REPLACE_PTHREAD_MUTEX_DESTROY''@|$(REPLACE_PTHREAD_MUTEX_DESTROY)|g' \
	      -e 's|@''REPLACE_PTHREAD_RWLOCK_INIT''@|$(REPLACE_PTHREAD_RWLOCK_INIT)|g' \
	      -e 's|@''REPLACE_PTHREAD_RWLOCKATTR_INIT''@|$(REPLACE_PTHREAD_RWLOCKATTR_INIT)|g' \
	      -e 's|@''REPLACE_PTHREAD_RWLOCKATTR_DESTROY''@|$(REPLACE_PTHREAD_RWLOCKATTR_DESTROY)|g' \
	      -e 's|@''REPLACE_PTHREAD_RWLOCK_RDLOCK''@|$(REPLACE_PTHREAD_RWLOCK_RDLOCK)|g' \
	      -e 's|@''REPLACE_PTHREAD_RWLOCK_WRLOCK''@|$(REPLACE_PTHREAD_RWLOCK_WRLOCK)|g' \
	      -e 's|@''REPLACE_PTHREAD_RWLOCK_TRYRDLOCK''@|$(REPLACE_PTHREAD_RWLOCK_TRYRDLOCK)|g' \
	      -e 's|@''REPLACE_PTHREAD_RWLOCK_TRYWRLOCK''@|$(REPLACE_PTHREAD_RWLOCK_TRYWRLOCK)|g' \
	      -e 's|@''REPLACE_PTHREAD_RWLOCK_TIMEDRDLOCK''@|$(REPLACE_PTHREAD_RWLOCK_TIMEDRDLOCK)|g' \
	      -e 's|@''REPLACE_PTHREAD_RWLOCK_TIMEDWRLOCK''@|$(REPLACE_PTHREAD_RWLOCK_TIMEDWRLOCK)|g' \
	      -e 's|@''REPLACE_PTHREAD_RWLOCK_UNLOCK''@|$(REPLACE_PTHREAD_RWLOCK_UNLOCK)|g' \
	      -e 's|@''REPLACE_PTHREAD_RWLOCK_DESTROY''@|$(REPLACE_PTHREAD_RWLOCK_DESTROY)|g' \
	      -e 's|@''REPLACE_PTHREAD_COND_INIT''@|$(REPLACE_PTHREAD_COND_INIT)|g' \
	      -e 's|@''REPLACE_PTHREAD_CONDATTR_INIT''@|$(REPLACE_PTHREAD_CONDATTR_INIT)|g' \
	      -e 's|@''REPLACE_PTHREAD_CONDATTR_DESTROY''@|$(REPLACE_PTHREAD_CONDATTR_DESTROY)|g' \
	      -e 's|@''REPLACE_PTHREAD_COND_WAIT''@|$(REPLACE_PTHREAD_COND_WAIT)|g' \
	      -e 's|@''REPLACE_PTHREAD_COND_TIMEDWAIT''@|$(REPLACE_PTHREAD_COND_TIMEDWAIT)|g' \
	      -e 's|@''REPLACE_PTHREAD_COND_SIGNAL''@|$(REPLACE_PTHREAD_COND_SIGNAL)|g' \
	      -e 's|@''REPLACE_PTHREAD_COND_BROADCAST''@|$(REPLACE_PTHREAD_COND_BROADCAST)|g' \
	      -e 's|@''REPLACE_PTHREAD_COND_DESTROY''@|$(REPLACE_PTHREAD_COND_DESTROY)|g' \
	      -e 's|@''REPLACE_PTHREAD_KEY_CREATE''@|$(REPLACE_PTHREAD_KEY_CREATE)|g' \
	      -e 's|@''REPLACE_PTHREAD_SETSPECIFIC''@|$(REPLACE_PTHREAD_SETSPECIFIC)|g' \
	      -e 's|@''REPLACE_PTHREAD_GETSPECIFIC''@|$(REPLACE_PTHREAD_GETSPECIFIC)|g' \
	      -e 's|@''REPLACE_PTHREAD_KEY_DELETE''@|$(REPLACE_PTHREAD_KEY_DELETE)|g' \
	      -e 's|@''REPLACE_PTHREAD_SPIN_INIT''@|$(REPLACE_PTHREAD_SPIN_INIT)|g' \
	      -e 's|@''REPLACE_PTHREAD_SPIN_LOCK''@|$(REPLACE_PTHREAD_SPIN_LOCK)|g' \
	      -e 's|@''REPLACE_PTHREAD_SPIN_TRYLOCK''@|$(REPLACE_PTHREAD_SPIN_TRYLOCK)|g' \
	      -e 's|@''REPLACE_PTHREAD_SPIN_UNLOCK''@|$(REPLACE_PTHREAD_SPIN_UNLOCK)|g' \
	      -e 's|@''REPLACE_PTHREAD_SPIN_DESTROY''@|$(REPLACE_PTHREAD_SPIN_DESTROY)|g' \
	      -e '/definitions of _GL_FUNCDECL_RPL/r $(CXXDEFS_H)' \
	      -e '/definition of _Noreturn/r $(_NORETURN_H)' \
	      -e '/definition of _GL_ARG_NONNULL/r $(ARG_NONNULL_H)' \
	      -e '/definition of _GL_WARN_ON_USE/r $(WARN_ON_USE_H)' \
	      > $@-t
	$(AM_V_at)mv $@-t $@
MOSTLYCLEANFILES += pthread.h pthread.h-t

EXTRA_DIST += pthread.in.h

## end   gnulib module pthread-h

## begin gnulib module pthread-h-tests

TESTS += test-pthread
check_PROGRAMS += test-pthread
EXTRA_DIST += test-pthread.c

## end   gnulib module pthread-h-tests

## begin gnulib module pthread-thread

if GL_COND_OBJ_PTHREAD_THREAD
libtests_a_SOURCES += pthread-thread.c
endif

## end   gnulib module pthread-thread

## begin gnulib module pthread-thread-tests

TESTS += test-pthread-thread
check_PROGRAMS += test-pthread-thread
test_pthread_thread_LDADD = $(LDADD) @LIBPMULTITHREAD@
EXTRA_DIST += test-pthread-thread.c macros.h

## end   gnulib module pthread-thread-tests

## begin gnulib module pthread_sigmask

if GL_COND_OBJ_PTHREAD_SIGMASK
libtests_a_SOURCES += pthread_sigmask.c
endif

## end   gnulib module pthread_sigmask

## begin gnulib module pthread_sigmask-tests

TESTS += test-pthread_sigmask1 test-pthread_sigmask2
check_PROGRAMS += test-pthread_sigmask1 test-pthread_sigmask2
test_pthread_sigmask1_LDADD = $(LDADD) @LIB_PTHREAD_SIGMASK@
test_pthread_sigmask2_LDADD = $(LDADD) @LIB_PTHREAD_SIGMASK@ @LIBMULTITHREAD@
EXTRA_DIST += test-pthread_sigmask1.c test-pthread_sigmask2.c signature.h macros.h

## end   gnulib module pthread_sigmask-tests

## begin gnulib module putenv

if GL_COND_OBJ_PUTENV
libtests_a_SOURCES += putenv.c
endif

## end   gnulib module putenv

## begin gnulib module raise

if GL_COND_OBJ_RAISE
libtests_a_SOURCES += raise.c
endif

## end   gnulib module raise

## begin gnulib module raise-tests

TESTS += test-raise
check_PROGRAMS += test-raise
EXTRA_DIST += test-raise.c signature.h macros.h

## end   gnulib module raise-tests

## begin gnulib module realloc-gnu


EXTRA_DIST += realloc.c

EXTRA_libtests_a_SOURCES += realloc.c

## end   gnulib module realloc-gnu

## begin gnulib module realloc-gnu-tests

TESTS += test-realloc-gnu
check_PROGRAMS += test-realloc-gnu
EXTRA_DIST += test-realloc-gnu.c macros.h

## end   gnulib module realloc-gnu-tests

## begin gnulib module realloc-posix


EXTRA_DIST += realloc.c

EXTRA_libtests_a_SOURCES += realloc.c

## end   gnulib module realloc-posix

## begin gnulib module reallocarray

if GL_COND_OBJ_REALLOCARRAY
libtests_a_SOURCES += reallocarray.c
endif

## end   gnulib module reallocarray

## begin gnulib module reallocarray-tests

TESTS += test-reallocarray
check_PROGRAMS += test-reallocarray
EXTRA_DIST += test-reallocarray.c signature.h macros.h

## end   gnulib module reallocarray-tests

## begin gnulib module same-inode


EXTRA_DIST += same-inode.h

## end   gnulib module same-inode

## begin gnulib module sched

BUILT_SOURCES += sched.h

# We need the following in order to create a replacement for <sched.h> when
# the system doesn't have one.
sched.h: sched.in.h $(top_builddir)/config.status $(CXXDEFS_H) $(WARN_ON_USE_H)
	$(gl_V_at)$(SED_HEADER_STDOUT) \
	      -e 's|@''GUARD_PREFIX''@|GL|g' \
	      -e 's|@''HAVE_SCHED_H''@|$(HAVE_SCHED_H)|g' \
	      -e 's|@''HAVE_SYS_CDEFS_H''@|$(HAVE_SYS_CDEFS_H)|g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''NEXT_SCHED_H''@|$(NEXT_SCHED_H)|g' \
	      -e 's|@''HAVE_STRUCT_SCHED_PARAM''@|$(HAVE_STRUCT_SCHED_PARAM)|g' \
	      -e 's/@''GNULIB_SCHED_YIELD''@/$(GL_GNULIB_SCHED_YIELD)/g' \
	      -e 's|@''HAVE_SCHED_YIELD''@|$(HAVE_SCHED_YIELD)|g' \
	      -e 's|@''REPLACE_SCHED_YIELD''@|$(REPLACE_SCHED_YIELD)|g' \
	      -e '/definitions of _GL_FUNCDECL_RPL/r $(CXXDEFS_H)' \
	      -e '/definition of _GL_WARN_ON_USE/r $(WARN_ON_USE_H)' \
	      $(srcdir)/sched.in.h > $@-t
	$(AM_V_at)mv $@-t $@
MOSTLYCLEANFILES += sched.h sched.h-t

EXTRA_DIST += sched.in.h

## end   gnulib module sched

## begin gnulib module sched-tests

TESTS += test-sched
check_PROGRAMS += test-sched
EXTRA_DIST += test-sched.c

## end   gnulib module sched-tests

## begin gnulib module sched_yield

if GL_COND_OBJ_SCHED_YIELD
libtests_a_SOURCES += sched_yield.c
endif

## end   gnulib module sched_yield

## begin gnulib module select

if GL_COND_OBJ_SELECT
libtests_a_SOURCES += select.c
endif

## end   gnulib module select

## begin gnulib module select-tests

TESTS += test-select test-select-in.sh test-select-out.sh
# test-select-stdin has to be run by hand.
check_PROGRAMS += test-select test-select-fd test-select-stdin
test_select_LDADD = $(LDADD) @LIB_SELECT@ @LIBSOCKET@ $(INET_PTON_LIB)
test_select_fd_LDADD = $(LDADD) @LIB_SELECT@
test_select_stdin_LDADD = $(LDADD) @LIB_SELECT@
EXTRA_DIST += macros.h signature.h test-select.c test-select.h test-select-fd.c test-select-in.sh test-select-out.sh test-select-stdin.c

## end   gnulib module select-tests

## begin gnulib module setenv

if GL_COND_OBJ_SETENV
libtests_a_SOURCES += setenv.c
endif

## end   gnulib module setenv

## begin gnulib module setenv-tests

TESTS += test-setenv
check_PROGRAMS += test-setenv
EXTRA_DIST += test-setenv.c signature.h macros.h

## end   gnulib module setenv-tests

## begin gnulib module setlocale

if GL_COND_OBJ_SETLOCALE
libtests_a_SOURCES += setlocale.c
endif

## end   gnulib module setlocale

## begin gnulib module setlocale-null-tests

TESTS += \
  test-setlocale_null \
  test-setlocale_null-mt-one \
  test-setlocale_null-mt-all
check_PROGRAMS += \
  test-setlocale_null \
  test-setlocale_null-mt-one \
  test-setlocale_null-mt-all
test_setlocale_null_LDADD = $(LDADD) @LIB_SETLOCALE_NULL@
test_setlocale_null_mt_one_LDADD = $(LDADD) @LIB_SETLOCALE_NULL@ $(LIBMULTITHREAD) $(LIB_NANOSLEEP)
test_setlocale_null_mt_all_LDADD = $(LDADD) @LIB_SETLOCALE_NULL@ $(LIBMULTITHREAD) $(LIB_NANOSLEEP)
EXTRA_DIST += test-setlocale_null.c test-setlocale_null-mt-one.c test-setlocale_null-mt-all.c

## end   gnulib module setlocale-null-tests

## begin gnulib module setlocale-tests

TESTS += test-setlocale1.sh test-setlocale2.sh
TESTS_ENVIRONMENT += \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' \
  LOCALE_JA='@LOCALE_JA@' \
  LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-setlocale1 test-setlocale2
test_setlocale1_LDADD = $(LDADD) @LIB_SETLOCALE@
test_setlocale2_LDADD = $(LDADD) @LIB_SETLOCALE@
EXTRA_DIST += test-setlocale1.sh test-setlocale1.c test-setlocale2.sh test-setlocale2.c signature.h macros.h

## end   gnulib module setlocale-tests

## begin gnulib module setsockopt

if GL_COND_OBJ_SETSOCKOPT
libtests_a_SOURCES += setsockopt.c
endif

EXTRA_DIST += w32sock.h

## end   gnulib module setsockopt

## begin gnulib module setsockopt-tests

TESTS += test-setsockopt
check_PROGRAMS += test-setsockopt
test_setsockopt_LDADD = $(LDADD) @LIBSOCKET@
EXTRA_DIST += test-setsockopt.c signature.h macros.h

## end   gnulib module setsockopt-tests

## begin gnulib module signal-h

BUILT_SOURCES += signal.h

# We need the following in order to create <signal.h> when the system
# doesn't have a complete one.
signal.h: signal.in.h $(top_builddir)/config.status $(CXXDEFS_H) $(ARG_NONNULL_H) $(WARN_ON_USE_H)
	$(gl_V_at)$(SED_HEADER_STDOUT) \
	      -e 's|@''GUARD_PREFIX''@|GL|g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''NEXT_SIGNAL_H''@|$(NEXT_SIGNAL_H)|g' \
	      -e 's/@''GNULIB_PTHREAD_SIGMASK''@/$(GL_GNULIB_PTHREAD_SIGMASK)/g' \
	      -e 's/@''GNULIB_RAISE''@/$(GL_GNULIB_RAISE)/g' \
	      -e 's/@''GNULIB_SIGNAL_H_SIGPIPE''@/$(GL_GNULIB_SIGNAL_H_SIGPIPE)/g' \
	      -e 's/@''GNULIB_SIGPROCMASK''@/$(GL_GNULIB_SIGPROCMASK)/g' \
	      -e 's/@''GNULIB_SIGACTION''@/$(GL_GNULIB_SIGACTION)/g' \
	      -e 's|@''HAVE_POSIX_SIGNALBLOCKING''@|$(HAVE_POSIX_SIGNALBLOCKING)|g' \
	      -e 's|@''HAVE_PTHREAD_SIGMASK''@|$(HAVE_PTHREAD_SIGMASK)|g' \
	      -e 's|@''HAVE_RAISE''@|$(HAVE_RAISE)|g' \
	      -e 's|@''HAVE_SIGSET_T''@|$(HAVE_SIGSET_T)|g' \
	      -e 's|@''HAVE_SIGINFO_T''@|$(HAVE_SIGINFO_T)|g' \
	      -e 's|@''HAVE_SIGACTION''@|$(HAVE_SIGACTION)|g' \
	      -e 's|@''HAVE_STRUCT_SIGACTION_SA_SIGACTION''@|$(HAVE_STRUCT_SIGACTION_SA_SIGACTION)|g' \
	      -e 's|@''HAVE_TYPE_VOLATILE_SIG_ATOMIC_T''@|$(HAVE_TYPE_VOLATILE_SIG_ATOMIC_T)|g' \
	      -e 's|@''HAVE_SIGHANDLER_T''@|$(HAVE_SIGHANDLER_T)|g' \
	      -e 's|@''REPLACE_PTHREAD_SIGMASK''@|$(REPLACE_PTHREAD_SIGMASK)|g' \
	      -e 's|@''REPLACE_RAISE''@|$(REPLACE_RAISE)|g' \
	      -e '/definitions of _GL_FUNCDECL_RPL/r $(CXXDEFS_H)' \
	      -e '/definition of _GL_ARG_NONNULL/r $(ARG_NONNULL_H)' \
	      -e '/definition of _GL_WARN_ON_USE/r $(WARN_ON_USE_H)' \
	      $(srcdir)/signal.in.h > $@-t
	$(AM_V_at)mv $@-t $@
MOSTLYCLEANFILES += signal.h signal.h-t

EXTRA_DIST += signal.in.h

## end   gnulib module signal-h

## begin gnulib module signal-h-tests

TESTS += test-signal-h
check_PROGRAMS += test-signal-h
EXTRA_DIST += test-signal-h.c

## end   gnulib module signal-h-tests

## begin gnulib module signbit-tests

TESTS += test-signbit
check_PROGRAMS += test-signbit

EXTRA_DIST += test-signbit.c minus-zero.h infinity.h macros.h

## end   gnulib module signbit-tests

## begin gnulib module sigprocmask

if GL_COND_OBJ_SIGPROCMASK
libtests_a_SOURCES += sigprocmask.c
endif

## end   gnulib module sigprocmask

## begin gnulib module sigprocmask-tests

TESTS += test-sigprocmask
check_PROGRAMS += test-sigprocmask
EXTRA_DIST += test-sigprocmask.c signature.h macros.h

## end   gnulib module sigprocmask-tests

## begin gnulib module sleep

if GL_COND_OBJ_SLEEP
libtests_a_SOURCES += sleep.c
endif

## end   gnulib module sleep

## begin gnulib module sleep-tests

TESTS += test-sleep
check_PROGRAMS += test-sleep
EXTRA_DIST += test-sleep.c signature.h macros.h

## end   gnulib module sleep-tests

## begin gnulib module snippet/_Noreturn

# Because this Makefile snippet defines a variable used by other
# gnulib Makefile snippets, it must be present in all makefiles that
# need it. This is ensured by the applicability 'all' defined above.

_NORETURN_H=$(srcdir)/_Noreturn.h

EXTRA_DIST += _Noreturn.h

## end   gnulib module snippet/_Noreturn

## begin gnulib module snippet/arg-nonnull

# Because this Makefile snippet defines a variable used by other
# gnulib Makefile snippets, it must be present in all makefiles that
# need it. This is ensured by the applicability 'all' defined above.

ARG_NONNULL_H=$(srcdir)/arg-nonnull.h

EXTRA_DIST += arg-nonnull.h

## end   gnulib module snippet/arg-nonnull

## begin gnulib module snippet/c++defs

# Because this Makefile snippet defines a variable used by other
# gnulib Makefile snippets, it must be present in all makefiles that
# need it. This is ensured by the applicability 'all' defined above.

CXXDEFS_H=$(srcdir)/c++defs.h

EXTRA_DIST += c++defs.h

## end   gnulib module snippet/c++defs

## begin gnulib module snippet/warn-on-use

# Because this Makefile snippet defines a variable used by other
# gnulib Makefile snippets, it must be present in all makefiles that
# need it. This is ensured by the applicability 'all' defined above.

WARN_ON_USE_H=$(srcdir)/warn-on-use.h

EXTRA_DIST += warn-on-use.h

## end   gnulib module snippet/warn-on-use

## begin gnulib module socket

if GL_COND_OBJ_SOCKET
libtests_a_SOURCES += socket.c
endif

EXTRA_DIST += w32sock.h

## end   gnulib module socket

## begin gnulib module sockets

libtests_a_SOURCES += sockets.h sockets.c

EXTRA_DIST += w32sock.h

## end   gnulib module sockets

## begin gnulib module sockets-tests

TESTS += test-sockets
check_PROGRAMS += test-sockets
test_sockets_LDADD = $(LDADD) @LIBSOCKET@
EXTRA_DIST += test-sockets.c

## end   gnulib module sockets-tests

## begin gnulib module stat

if GL_COND_OBJ_STAT
libtests_a_SOURCES += stat.c
endif

EXTRA_DIST += stat-w32.c stat-w32.h

EXTRA_libtests_a_SOURCES += stat-w32.c

## end   gnulib module stat

## begin gnulib module stat-tests

TESTS += test-stat
check_PROGRAMS += test-stat
test_stat_LDADD = $(LDADD) $(LIBINTL)
EXTRA_DIST += test-stat.h test-stat.c signature.h macros.h

## end   gnulib module stat-tests

## begin gnulib module stat-time

libtests_a_SOURCES += stat-time.c

EXTRA_DIST += stat-time.h

## end   gnulib module stat-time

## begin gnulib module stat-time-tests

TESTS += test-stat-time
check_PROGRAMS += test-stat-time
test_stat_time_LDADD = $(LDADD) $(LIB_NANOSLEEP)
EXTRA_DIST += test-stat-time.c macros.h nap.h

## end   gnulib module stat-time-tests

## begin gnulib module stdalign

BUILT_SOURCES += $(STDALIGN_H)

# We need the following in order to create <stdalign.h> when the system
# doesn't have one that works.
if GL_GENERATE_STDALIGN_H
stdalign.h: stdalign.in.h $(top_builddir)/config.status
	$(gl_V_at)$(SED_HEADER_TO_AT_t) $(srcdir)/stdalign.in.h
	$(AM_V_at)mv $@-t $@
else
stdalign.h: $(top_builddir)/config.status
	rm -f $@
endif
MOSTLYCLEANFILES += stdalign.h stdalign.h-t

EXTRA_DIST += stdalign.in.h

## end   gnulib module stdalign

## begin gnulib module stdalign-tests

TESTS += test-stdalign
check_PROGRAMS += test-stdalign
EXTRA_DIST += test-stdalign.c macros.h

## end   gnulib module stdalign-tests

## begin gnulib module stdbool-tests

TESTS += test-stdbool
check_PROGRAMS += test-stdbool
EXTRA_DIST += test-stdbool.c

## end   gnulib module stdbool-tests

## begin gnulib module stdckdint-tests

TESTS += test-stdckdint
check_PROGRAMS += test-stdckdint
EXTRA_DIST += macros.h test-intprops.c test-stdckdint.c

## end   gnulib module stdckdint-tests

## begin gnulib module stddef-tests

TESTS += test-stddef
check_PROGRAMS += test-stddef
EXTRA_DIST += test-stddef.c

## end   gnulib module stddef-tests

## begin gnulib module stdint-tests

TESTS += test-stdint
check_PROGRAMS += test-stdint
EXTRA_DIST += test-stdint.c

## end   gnulib module stdint-tests

## begin gnulib module stdio

BUILT_SOURCES += stdio.h

# We need the following in order to create <stdio.h> when the system
# doesn't have one that works with the given compiler.
stdio.h: stdio.in.h $(top_builddir)/config.status $(CXXDEFS_H) $(ARG_NONNULL_H) $(WARN_ON_USE_H)
	$(gl_V_at)$(SED_HEADER_STDOUT) \
	      -e 's|@''GUARD_PREFIX''@|GL|g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''NEXT_STDIO_H''@|$(NEXT_STDIO_H)|g' \
	      -e 's/@''GNULIB_DPRINTF''@/$(GL_GNULIB_DPRINTF)/g' \
	      -e 's/@''GNULIB_FCLOSE''@/$(GL_GNULIB_FCLOSE)/g' \
	      -e 's/@''GNULIB_FDOPEN''@/$(GL_GNULIB_FDOPEN)/g' \
	      -e 's/@''GNULIB_FFLUSH''@/$(GL_GNULIB_FFLUSH)/g' \
	      -e 's/@''GNULIB_FGETC''@/$(GL_GNULIB_FGETC)/g' \
	      -e 's/@''GNULIB_FGETS''@/$(GL_GNULIB_FGETS)/g' \
	      -e 's/@''GNULIB_FOPEN''@/$(GL_GNULIB_FOPEN)/g' \
	      -e 's/@''GNULIB_FOPEN_GNU''@/$(GL_GNULIB_FOPEN_GNU)/g' \
	      -e 's/@''GNULIB_FPRINTF''@/$(GL_GNULIB_FPRINTF)/g' \
	      -e 's/@''GNULIB_FPRINTF_POSIX''@/$(GL_GNULIB_FPRINTF_POSIX)/g' \
	      -e 's/@''GNULIB_FPURGE''@/$(GL_GNULIB_FPURGE)/g' \
	      -e 's/@''GNULIB_FPUTC''@/$(GL_GNULIB_FPUTC)/g' \
	      -e 's/@''GNULIB_FPUTS''@/$(GL_GNULIB_FPUTS)/g' \
	      -e 's/@''GNULIB_FREAD''@/$(GL_GNULIB_FREAD)/g' \
	      -e 's/@''GNULIB_FREOPEN''@/$(GL_GNULIB_FREOPEN)/g' \
	      -e 's/@''GNULIB_FSCANF''@/$(GL_GNULIB_FSCANF)/g' \
	      -e 's/@''GNULIB_FSEEK''@/$(GL_GNULIB_FSEEK)/g' \
	      -e 's/@''GNULIB_FSEEKO''@/$(GL_GNULIB_FSEEKO)/g' \
	      -e 's/@''GNULIB_FTELL''@/$(GL_GNULIB_FTELL)/g' \
	      -e 's/@''GNULIB_FTELLO''@/$(GL_GNULIB_FTELLO)/g' \
	      -e 's/@''GNULIB_FWRITE''@/$(GL_GNULIB_FWRITE)/g' \
	      -e 's/@''GNULIB_GETC''@/$(GL_GNULIB_GETC)/g' \
	      -e 's/@''GNULIB_GETCHAR''@/$(GL_GNULIB_GETCHAR)/g' \
	      -e 's/@''GNULIB_GETDELIM''@/$(GL_GNULIB_GETDELIM)/g' \
	      -e 's/@''GNULIB_GETLINE''@/$(GL_GNULIB_GETLINE)/g' \
	      -e 's/@''GNULIB_OBSTACK_PRINTF''@/$(GL_GNULIB_OBSTACK_PRINTF)/g' \
	      -e 's/@''GNULIB_OBSTACK_PRINTF_POSIX''@/$(GL_GNULIB_OBSTACK_PRINTF_POSIX)/g' \
	      -e 's/@''GNULIB_PCLOSE''@/$(GL_GNULIB_PCLOSE)/g' \
	      -e 's/@''GNULIB_PERROR''@/$(GL_GNULIB_PERROR)/g' \
	      -e 's/@''GNULIB_POPEN''@/$(GL_GNULIB_POPEN)/g' \
	      -e 's/@''GNULIB_PRINTF''@/$(GL_GNULIB_PRINTF)/g' \
	      -e 's/@''GNULIB_PRINTF_POSIX''@/$(GL_GNULIB_PRINTF_POSIX)/g' \
	      -e 's/@''GNULIB_PUTC''@/$(GL_GNULIB_PUTC)/g' \
	      -e 's/@''GNULIB_PUTCHAR''@/$(GL_GNULIB_PUTCHAR)/g' \
	      -e 's/@''GNULIB_PUTS''@/$(GL_GNULIB_PUTS)/g' \
	      -e 's/@''GNULIB_REMOVE''@/$(GL_GNULIB_REMOVE)/g' \
	      -e 's/@''GNULIB_RENAME''@/$(GL_GNULIB_RENAME)/g' \
	      -e 's/@''GNULIB_RENAMEAT''@/$(GL_GNULIB_RENAMEAT)/g' \
	      -e 's/@''GNULIB_SCANF''@/$(GL_GNULIB_SCANF)/g' \
	      -e 's/@''GNULIB_SNPRINTF''@/$(GL_GNULIB_SNPRINTF)/g' \
	      -e 's/@''GNULIB_SPRINTF_POSIX''@/$(GL_GNULIB_SPRINTF_POSIX)/g' \
	      -e 's/@''GNULIB_STDIO_H_NONBLOCKING''@/$(GL_GNULIB_STDIO_H_NONBLOCKING)/g' \
	      -e 's/@''GNULIB_STDIO_H_SIGPIPE''@/$(GL_GNULIB_STDIO_H_SIGPIPE)/g' \
	      -e 's/@''GNULIB_TMPFILE''@/$(GL_GNULIB_TMPFILE)/g' \
	      -e 's/@''GNULIB_VASPRINTF''@/$(GL_GNULIB_VASPRINTF)/g' \
	      -e 's/@''GNULIB_VDPRINTF''@/$(GL_GNULIB_VDPRINTF)/g' \
	      -e 's/@''GNULIB_VFPRINTF''@/$(GL_GNULIB_VFPRINTF)/g' \
	      -e 's/@''GNULIB_VFPRINTF_POSIX''@/$(GL_GNULIB_VFPRINTF_POSIX)/g' \
	      -e 's/@''GNULIB_VFSCANF''@/$(GL_GNULIB_VFSCANF)/g' \
	      -e 's/@''GNULIB_VSCANF''@/$(GL_GNULIB_VSCANF)/g' \
	      -e 's/@''GNULIB_VPRINTF''@/$(GL_GNULIB_VPRINTF)/g' \
	      -e 's/@''GNULIB_VPRINTF_POSIX''@/$(GL_GNULIB_VPRINTF_POSIX)/g' \
	      -e 's/@''GNULIB_VSNPRINTF''@/$(GL_GNULIB_VSNPRINTF)/g' \
	      -e 's/@''GNULIB_VSPRINTF_POSIX''@/$(GL_GNULIB_VSPRINTF_POSIX)/g' \
	      -e 's/@''GNULIB_MDA_FCLOSEALL''@/$(GL_GNULIB_MDA_FCLOSEALL)/g' \
	      -e 's/@''GNULIB_MDA_FDOPEN''@/$(GL_GNULIB_MDA_FDOPEN)/g' \
	      -e 's/@''GNULIB_MDA_FILENO''@/$(GL_GNULIB_MDA_FILENO)/g' \
	      -e 's/@''GNULIB_MDA_GETW''@/$(GL_GNULIB_MDA_GETW)/g' \
	      -e 's/@''GNULIB_MDA_PUTW''@/$(GL_GNULIB_MDA_PUTW)/g' \
	      -e 's/@''GNULIB_MDA_TEMPNAM''@/$(GL_GNULIB_MDA_TEMPNAM)/g' \
	      < $(srcdir)/stdio.in.h | \
	  sed -e 's|@''HAVE_DECL_FCLOSEALL''@|$(HAVE_DECL_FCLOSEALL)|g' \
	      -e 's|@''HAVE_DECL_FPURGE''@|$(HAVE_DECL_FPURGE)|g' \
	      -e 's|@''HAVE_DECL_FSEEKO''@|$(HAVE_DECL_FSEEKO)|g' \
	      -e 's|@''HAVE_DECL_FTELLO''@|$(HAVE_DECL_FTELLO)|g' \
	      -e 's|@''HAVE_DECL_GETDELIM''@|$(HAVE_DECL_GETDELIM)|g' \
	      -e 's|@''HAVE_DECL_GETLINE''@|$(HAVE_DECL_GETLINE)|g' \
	      -e 's|@''HAVE_DECL_OBSTACK_PRINTF''@|$(HAVE_DECL_OBSTACK_PRINTF)|g' \
	      -e 's|@''HAVE_DECL_SNPRINTF''@|$(HAVE_DECL_SNPRINTF)|g' \
	      -e 's|@''HAVE_DECL_VSNPRINTF''@|$(HAVE_DECL_VSNPRINTF)|g' \
	      -e 's|@''HAVE_DPRINTF''@|$(HAVE_DPRINTF)|g' \
	      -e 's|@''HAVE_FSEEKO''@|$(HAVE_FSEEKO)|g' \
	      -e 's|@''HAVE_FTELLO''@|$(HAVE_FTELLO)|g' \
	      -e 's|@''HAVE_PCLOSE''@|$(HAVE_PCLOSE)|g' \
	      -e 's|@''HAVE_POPEN''@|$(HAVE_POPEN)|g' \
	      -e 's|@''HAVE_RENAMEAT''@|$(HAVE_RENAMEAT)|g' \
	      -e 's|@''HAVE_VASPRINTF''@|$(HAVE_VASPRINTF)|g' \
	      -e 's|@''HAVE_VDPRINTF''@|$(HAVE_VDPRINTF)|g' \
	      -e 's|@''REPLACE_DPRINTF''@|$(REPLACE_DPRINTF)|g' \
	      -e 's|@''REPLACE_FCLOSE''@|$(REPLACE_FCLOSE)|g' \
	      -e 's|@''REPLACE_FDOPEN''@|$(REPLACE_FDOPEN)|g' \
	      -e 's|@''REPLACE_FFLUSH''@|$(REPLACE_FFLUSH)|g' \
	      -e 's|@''REPLACE_FOPEN''@|$(REPLACE_FOPEN)|g' \
	      -e 's|@''REPLACE_FOPEN_FOR_FOPEN_GNU''@|$(REPLACE_FOPEN_FOR_FOPEN_GNU)|g' \
	      -e 's|@''REPLACE_FPRINTF''@|$(REPLACE_FPRINTF)|g' \
	      -e 's|@''REPLACE_FPURGE''@|$(REPLACE_FPURGE)|g' \
	      -e 's|@''REPLACE_FREOPEN''@|$(REPLACE_FREOPEN)|g' \
	      -e 's|@''REPLACE_FSEEK''@|$(REPLACE_FSEEK)|g' \
	      -e 's|@''REPLACE_FSEEKO''@|$(REPLACE_FSEEKO)|g' \
	      -e 's|@''REPLACE_FTELL''@|$(REPLACE_FTELL)|g' \
	      -e 's|@''REPLACE_FTELLO''@|$(REPLACE_FTELLO)|g' \
	      -e 's|@''REPLACE_GETDELIM''@|$(REPLACE_GETDELIM)|g' \
	      -e 's|@''REPLACE_GETLINE''@|$(REPLACE_GETLINE)|g' \
	      -e 's|@''REPLACE_OBSTACK_PRINTF''@|$(REPLACE_OBSTACK_PRINTF)|g' \
	      -e 's|@''REPLACE_PERROR''@|$(REPLACE_PERROR)|g' \
	      -e 's|@''REPLACE_POPEN''@|$(REPLACE_POPEN)|g' \
	      -e 's|@''REPLACE_PRINTF''@|$(REPLACE_PRINTF)|g' \
	      -e 's|@''REPLACE_REMOVE''@|$(REPLACE_REMOVE)|g' \
	      -e 's|@''REPLACE_RENAME''@|$(REPLACE_RENAME)|g' \
	      -e 's|@''REPLACE_RENAMEAT''@|$(REPLACE_RENAMEAT)|g' \
	      -e 's|@''REPLACE_SNPRINTF''@|$(REPLACE_SNPRINTF)|g' \
	      -e 's|@''REPLACE_SPRINTF''@|$(REPLACE_SPRINTF)|g' \
	      -e 's|@''REPLACE_STDIO_READ_FUNCS''@|$(REPLACE_STDIO_READ_FUNCS)|g' \
	      -e 's|@''REPLACE_STDIO_WRITE_FUNCS''@|$(REPLACE_STDIO_WRITE_FUNCS)|g' \
	      -e 's|@''REPLACE_TMPFILE''@|$(REPLACE_TMPFILE)|g' \
	      -e 's|@''REPLACE_VASPRINTF''@|$(REPLACE_VASPRINTF)|g' \
	      -e 's|@''REPLACE_VDPRINTF''@|$(REPLACE_VDPRINTF)|g' \
	      -e 's|@''REPLACE_VFPRINTF''@|$(REPLACE_VFPRINTF)|g' \
	      -e 's|@''REPLACE_VPRINTF''@|$(REPLACE_VPRINTF)|g' \
	      -e 's|@''REPLACE_VSNPRINTF''@|$(REPLACE_VSNPRINTF)|g' \
	      -e 's|@''REPLACE_VSPRINTF''@|$(REPLACE_VSPRINTF)|g' \
	      -e 's|@''ASM_SYMBOL_PREFIX''@|$(ASM_SYMBOL_PREFIX)|g' \
	      -e '/definitions of _GL_FUNCDECL_RPL/r $(CXXDEFS_H)' \
	      -e '/definition of _GL_ARG_NONNULL/r $(ARG_NONNULL_H)' \
	      -e '/definition of _GL_WARN_ON_USE/r $(WARN_ON_USE_H)' \
	      > $@-t
	$(AM_V_at)mv $@-t $@
MOSTLYCLEANFILES += stdio.h stdio.h-t

if GL_COND_OBJ_STDIO_READ
libtests_a_SOURCES += stdio-read.c
endif
if GL_COND_OBJ_STDIO_WRITE
libtests_a_SOURCES += stdio-write.c
endif

EXTRA_DIST += stdio.in.h

## end   gnulib module stdio

## begin gnulib module stdio-tests

TESTS += test-stdio
check_PROGRAMS += test-stdio
EXTRA_DIST += test-stdio.c

## end   gnulib module stdio-tests

## begin gnulib module stdlib-tests

TESTS += test-stdlib
check_PROGRAMS += test-stdlib
EXTRA_DIST += test-stdlib.c test-sys_wait.h

## end   gnulib module stdlib-tests

## begin gnulib module strerror

if GL_COND_OBJ_STRERROR
libtests_a_SOURCES += strerror.c
endif

## end   gnulib module strerror

## begin gnulib module strerror-override

if GL_COND_OBJ_STRERROR_OVERRIDE
libtests_a_SOURCES += strerror-override.c
endif

EXTRA_DIST += strerror-override.h

## end   gnulib module strerror-override

## begin gnulib module strerror-tests

TESTS += test-strerror
check_PROGRAMS += test-strerror
EXTRA_DIST += test-strerror.c signature.h macros.h

## end   gnulib module strerror-tests

## begin gnulib module strerror_r-posix


EXTRA_DIST += strerror_r.c

EXTRA_libtests_a_SOURCES += strerror_r.c

## end   gnulib module strerror_r-posix

## begin gnulib module strerror_r-posix-tests

TESTS += test-strerror_r
check_PROGRAMS += test-strerror_r
EXTRA_DIST += test-strerror_r.c signature.h macros.h

## end   gnulib module strerror_r-posix-tests

## begin gnulib module striconveh-tests

TESTS += test-striconveh
check_PROGRAMS += test-striconveh
test_striconveh_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@

EXTRA_DIST += test-striconveh.c macros.h

## end   gnulib module striconveh-tests

## begin gnulib module striconveha-tests

TESTS += test-striconveha
check_PROGRAMS += test-striconveha
test_striconveha_SOURCES = test-striconveha.c iconvsupport.c
test_striconveha_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@

EXTRA_DIST += test-striconveha.c iconvsupport.c macros.h

## end   gnulib module striconveha-tests

## begin gnulib module string-tests

TESTS += test-string
check_PROGRAMS += test-string
EXTRA_DIST += test-string.c

## end   gnulib module string-tests

## begin gnulib module strncat-tests

TESTS += test-strncat
check_PROGRAMS += test-strncat
EXTRA_DIST += test-strncat.c unistr/test-strncat.h zerosize-ptr.h signature.h macros.h

## end   gnulib module strncat-tests

## begin gnulib module strstr-tests

TESTS += test-strstr
check_PROGRAMS += test-strstr
EXTRA_DIST += test-strstr.c zerosize-ptr.h signature.h macros.h

## end   gnulib module strstr-tests

## begin gnulib module symlink

if GL_COND_OBJ_SYMLINK
libtests_a_SOURCES += symlink.c
endif

## end   gnulib module symlink

## begin gnulib module symlink-tests

TESTS += test-symlink
check_PROGRAMS += test-symlink
EXTRA_DIST += test-symlink.h test-symlink.c signature.h macros.h

## end   gnulib module symlink-tests

## begin gnulib module sys_ioctl

BUILT_SOURCES += sys/ioctl.h

# We need the following in order to create <sys/ioctl.h> when the system
# does not have a complete one.
sys/ioctl.h: sys_ioctl.in.h $(top_builddir)/config.status $(CXXDEFS_H) $(WARN_ON_USE_H)
	$(AM_V_GEN)$(MKDIR_P) '%reldir%/sys'
	$(AM_V_at)$(SED_HEADER_STDOUT) \
	      -e 's|@''GUARD_PREFIX''@|GL|g' \
	      -e 's|@''HAVE_SYS_IOCTL_H''@|$(HAVE_SYS_IOCTL_H)|g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''NEXT_SYS_IOCTL_H''@|$(NEXT_SYS_IOCTL_H)|g' \
	      -e 's/@''GNULIB_IOCTL''@/$(GL_GNULIB_IOCTL)/g' \
	      -e 's|@''SYS_IOCTL_H_HAVE_WINSOCK2_H''@|$(SYS_IOCTL_H_HAVE_WINSOCK2_H)|g' \
	      -e 's|@''SYS_IOCTL_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS''@|$(SYS_IOCTL_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS)|g' \
	      -e 's|@''REPLACE_IOCTL''@|$(REPLACE_IOCTL)|g' \
	      -e '/definitions of _GL_FUNCDECL_RPL/r $(CXXDEFS_H)' \
	      -e '/definition of _GL_WARN_ON_USE/r $(WARN_ON_USE_H)' \
	      $(srcdir)/sys_ioctl.in.h > $@-t
	$(AM_V_at)mv $@-t $@
MOSTLYCLEANFILES += sys/ioctl.h sys/ioctl.h-t
MOSTLYCLEANDIRS += sys

EXTRA_DIST += sys_ioctl.in.h

## end   gnulib module sys_ioctl

## begin gnulib module sys_ioctl-tests

TESTS += test-sys_ioctl
check_PROGRAMS += test-sys_ioctl
EXTRA_DIST += test-sys_ioctl.c

## end   gnulib module sys_ioctl-tests

## begin gnulib module sys_select

BUILT_SOURCES += sys/select.h

# We need the following in order to create <sys/select.h> when the system
# doesn't have one that works with the given compiler.
sys/select.h: sys_select.in.h $(top_builddir)/config.status $(CXXDEFS_H) $(WARN_ON_USE_H)
	$(AM_V_GEN)$(MKDIR_P) '%reldir%/sys'
	$(AM_V_at)$(SED_HEADER_STDOUT) \
	      -e 's|@''GUARD_PREFIX''@|GL|g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''NEXT_SYS_SELECT_H''@|$(NEXT_SYS_SELECT_H)|g' \
	      -e 's|@''HAVE_SYS_SELECT_H''@|$(HAVE_SYS_SELECT_H)|g' \
	      -e 's/@''GNULIB_PSELECT''@/$(GL_GNULIB_PSELECT)/g' \
	      -e 's/@''GNULIB_SELECT''@/$(GL_GNULIB_SELECT)/g' \
	      -e 's|@''HAVE_WINSOCK2_H''@|$(HAVE_WINSOCK2_H)|g' \
	      -e 's|@''HAVE_PSELECT''@|$(HAVE_PSELECT)|g' \
	      -e 's|@''REPLACE_PSELECT''@|$(REPLACE_PSELECT)|g' \
	      -e 's|@''REPLACE_SELECT''@|$(REPLACE_SELECT)|g' \
	      -e '/definitions of _GL_FUNCDECL_RPL/r $(CXXDEFS_H)' \
	      -e '/definition of _GL_WARN_ON_USE/r $(WARN_ON_USE_H)' \
	      $(srcdir)/sys_select.in.h > $@-t
	$(AM_V_at)mv $@-t $@
MOSTLYCLEANFILES += sys/select.h sys/select.h-t
MOSTLYCLEANDIRS += sys

EXTRA_DIST += sys_select.in.h

## end   gnulib module sys_select

## begin gnulib module sys_select-tests

TESTS += test-sys_select
check_PROGRAMS += test-sys_select
EXTRA_DIST += test-sys_select.c signature.h

## end   gnulib module sys_select-tests

## begin gnulib module sys_socket

BUILT_SOURCES += sys/socket.h
libtests_a_SOURCES += sys_socket.c

# We need the following in order to create <sys/socket.h> when the system
# doesn't have one that works with the given compiler.
sys/socket.h: sys_socket.in.h $(top_builddir)/config.status $(CXXDEFS_H) $(WARN_ON_USE_H) $(ARG_NONNULL_H)
	$(AM_V_GEN)$(MKDIR_P) '%reldir%/sys'
	$(AM_V_at)$(SED_HEADER_STDOUT) \
	      -e 's|@''GUARD_PREFIX''@|GL|g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''NEXT_SYS_SOCKET_H''@|$(NEXT_SYS_SOCKET_H)|g' \
	      -e 's|@''HAVE_SYS_SOCKET_H''@|$(HAVE_SYS_SOCKET_H)|g' \
	      -e 's/@''GNULIB_CLOSE''@/$(GL_GNULIB_CLOSE)/g' \
	      -e 's/@''GNULIB_SOCKET''@/$(GL_GNULIB_SOCKET)/g' \
	      -e 's/@''GNULIB_CONNECT''@/$(GL_GNULIB_CONNECT)/g' \
	      -e 's/@''GNULIB_ACCEPT''@/$(GL_GNULIB_ACCEPT)/g' \
	      -e 's/@''GNULIB_BIND''@/$(GL_GNULIB_BIND)/g' \
	      -e 's/@''GNULIB_GETPEERNAME''@/$(GL_GNULIB_GETPEERNAME)/g' \
	      -e 's/@''GNULIB_GETSOCKNAME''@/$(GL_GNULIB_GETSOCKNAME)/g' \
	      -e 's/@''GNULIB_GETSOCKOPT''@/$(GL_GNULIB_GETSOCKOPT)/g' \
	      -e 's/@''GNULIB_LISTEN''@/$(GL_GNULIB_LISTEN)/g' \
	      -e 's/@''GNULIB_RECV''@/$(GL_GNULIB_RECV)/g' \
	      -e 's/@''GNULIB_SEND''@/$(GL_GNULIB_SEND)/g' \
	      -e 's/@''GNULIB_RECVFROM''@/$(GL_GNULIB_RECVFROM)/g' \
	      -e 's/@''GNULIB_SENDTO''@/$(GL_GNULIB_SENDTO)/g' \
	      -e 's/@''GNULIB_SETSOCKOPT''@/$(GL_GNULIB_SETSOCKOPT)/g' \
	      -e 's/@''GNULIB_SHUTDOWN''@/$(GL_GNULIB_SHUTDOWN)/g' \
	      -e 's/@''GNULIB_ACCEPT4''@/$(GL_GNULIB_ACCEPT4)/g' \
	      -e 's|@''HAVE_WINSOCK2_H''@|$(HAVE_WINSOCK2_H)|g' \
	      -e 's|@''HAVE_WS2TCPIP_H''@|$(HAVE_WS2TCPIP_H)|g' \
	      -e 's|@''HAVE_STRUCT_SOCKADDR_STORAGE''@|$(HAVE_STRUCT_SOCKADDR_STORAGE)|g' \
	      -e 's|@''HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY''@|$(HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY)|g' \
	      -e 's|@''HAVE_SA_FAMILY_T''@|$(HAVE_SA_FAMILY_T)|g' \
	      -e 's|@''HAVE_ACCEPT4''@|$(HAVE_ACCEPT4)|g' \
	      -e '/definitions of _GL_FUNCDECL_RPL/r $(CXXDEFS_H)' \
	      -e '/definition of _GL_ARG_NONNULL/r $(ARG_NONNULL_H)' \
	      -e '/definition of _GL_WARN_ON_USE/r $(WARN_ON_USE_H)' \
	      $(srcdir)/sys_socket.in.h > $@-t
	$(AM_V_at)mv $@-t $@
MOSTLYCLEANFILES += sys/socket.h sys/socket.h-t
MOSTLYCLEANDIRS += sys

EXTRA_DIST += sys_socket.in.h

## end   gnulib module sys_socket

## begin gnulib module sys_socket-tests

TESTS += test-sys_socket
check_PROGRAMS += test-sys_socket
EXTRA_DIST += test-sys_socket.c

## end   gnulib module sys_socket-tests

## begin gnulib module sys_stat

BUILT_SOURCES += sys/stat.h

# We need the following in order to create <sys/stat.h> when the system
# has one that is incomplete.
sys/stat.h: sys_stat.in.h $(top_builddir)/config.status $(CXXDEFS_H) $(ARG_NONNULL_H) $(WARN_ON_USE_H)
	$(AM_V_GEN)$(MKDIR_P) '%reldir%/sys'
	$(AM_V_at)$(SED_HEADER_STDOUT) \
	      -e 's|@''GUARD_PREFIX''@|GL|g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''NEXT_SYS_STAT_H''@|$(NEXT_SYS_STAT_H)|g' \
	      -e 's|@''WINDOWS_64_BIT_ST_SIZE''@|$(WINDOWS_64_BIT_ST_SIZE)|g' \
	      -e 's|@''WINDOWS_STAT_TIMESPEC''@|$(WINDOWS_STAT_TIMESPEC)|g' \
	      -e 's/@''GNULIB_CHMOD''@/$(GL_GNULIB_CHMOD)/g' \
	      -e 's/@''GNULIB_FCHMODAT''@/$(GL_GNULIB_FCHMODAT)/g' \
	      -e 's/@''GNULIB_FSTAT''@/$(GL_GNULIB_FSTAT)/g' \
	      -e 's/@''GNULIB_FSTATAT''@/$(GL_GNULIB_FSTATAT)/g' \
	      -e 's/@''GNULIB_FUTIMENS''@/$(GL_GNULIB_FUTIMENS)/g' \
	      -e 's/@''GNULIB_GETUMASK''@/$(GL_GNULIB_GETUMASK)/g' \
	      -e 's/@''GNULIB_LCHMOD''@/$(GL_GNULIB_LCHMOD)/g' \
	      -e 's/@''GNULIB_LSTAT''@/$(GL_GNULIB_LSTAT)/g' \
	      -e 's/@''GNULIB_MKDIR''@/$(GL_GNULIB_MKDIR)/g' \
	      -e 's/@''GNULIB_MKDIRAT''@/$(GL_GNULIB_MKDIRAT)/g' \
	      -e 's/@''GNULIB_MKFIFO''@/$(GL_GNULIB_MKFIFO)/g' \
	      -e 's/@''GNULIB_MKFIFOAT''@/$(GL_GNULIB_MKFIFOAT)/g' \
	      -e 's/@''GNULIB_MKNOD''@/$(GL_GNULIB_MKNOD)/g' \
	      -e 's/@''GNULIB_MKNODAT''@/$(GL_GNULIB_MKNODAT)/g' \
	      -e 's/@''GNULIB_STAT''@/$(GL_GNULIB_STAT)/g' \
	      -e 's/@''GNULIB_UTIMENSAT''@/$(GL_GNULIB_UTIMENSAT)/g' \
	      -e 's/@''GNULIB_OVERRIDES_STRUCT_STAT''@/$(GL_GNULIB_OVERRIDES_STRUCT_STAT)/g' \
	      -e 's/@''GNULIB_MDA_CHMOD''@/$(GL_GNULIB_MDA_CHMOD)/g' \
	      -e 's/@''GNULIB_MDA_MKDIR''@/$(GL_GNULIB_MDA_MKDIR)/g' \
	      -e 's/@''GNULIB_MDA_UMASK''@/$(GL_GNULIB_MDA_UMASK)/g' \
	      -e 's|@''HAVE_FCHMODAT''@|$(HAVE_FCHMODAT)|g' \
	      -e 's|@''HAVE_FSTATAT''@|$(HAVE_FSTATAT)|g' \
	      -e 's|@''HAVE_FUTIMENS''@|$(HAVE_FUTIMENS)|g' \
	      -e 's|@''HAVE_GETUMASK''@|$(HAVE_GETUMASK)|g' \
	      -e 's|@''HAVE_LCHMOD''@|$(HAVE_LCHMOD)|g' \
	      -e 's|@''HAVE_LSTAT''@|$(HAVE_LSTAT)|g' \
	      -e 's|@''HAVE_MKDIRAT''@|$(HAVE_MKDIRAT)|g' \
	      -e 's|@''HAVE_MKFIFO''@|$(HAVE_MKFIFO)|g' \
	      -e 's|@''HAVE_MKFIFOAT''@|$(HAVE_MKFIFOAT)|g' \
	      -e 's|@''HAVE_MKNOD''@|$(HAVE_MKNOD)|g' \
	      -e 's|@''HAVE_MKNODAT''@|$(HAVE_MKNODAT)|g' \
	      -e 's|@''HAVE_UTIMENSAT''@|$(HAVE_UTIMENSAT)|g' \
	      -e 's|@''REPLACE_CHMOD''@|$(REPLACE_CHMOD)|g' \
	      -e 's|@''REPLACE_FCHMODAT''@|$(REPLACE_FCHMODAT)|g' \
	      -e 's|@''REPLACE_FSTAT''@|$(REPLACE_FSTAT)|g' \
	      -e 's|@''REPLACE_FSTATAT''@|$(REPLACE_FSTATAT)|g' \
	      -e 's|@''REPLACE_FUTIMENS''@|$(REPLACE_FUTIMENS)|g' \
	      -e 's|@''REPLACE_LSTAT''@|$(REPLACE_LSTAT)|g' \
	      -e 's|@''REPLACE_MKDIR''@|$(REPLACE_MKDIR)|g' \
	      -e 's|@''REPLACE_MKFIFO''@|$(REPLACE_MKFIFO)|g' \
	      -e 's|@''REPLACE_MKFIFOAT''@|$(REPLACE_MKFIFOAT)|g' \
	      -e 's|@''REPLACE_MKNOD''@|$(REPLACE_MKNOD)|g' \
	      -e 's|@''REPLACE_MKNODAT''@|$(REPLACE_MKNODAT)|g' \
	      -e 's|@''REPLACE_STAT''@|$(REPLACE_STAT)|g' \
	      -e 's|@''REPLACE_UTIMENSAT''@|$(REPLACE_UTIMENSAT)|g' \
	      -e '/definitions of _GL_FUNCDECL_RPL/r $(CXXDEFS_H)' \
	      -e '/definition of _GL_ARG_NONNULL/r $(ARG_NONNULL_H)' \
	      -e '/definition of _GL_WARN_ON_USE/r $(WARN_ON_USE_H)' \
	      $(srcdir)/sys_stat.in.h > $@-t
	$(AM_V_at)mv $@-t $@
MOSTLYCLEANFILES += sys/stat.h sys/stat.h-t
MOSTLYCLEANDIRS += sys

EXTRA_DIST += sys_stat.in.h

## end   gnulib module sys_stat

## begin gnulib module sys_stat-tests

TESTS += test-sys_stat
check_PROGRAMS += test-sys_stat
EXTRA_DIST += test-sys_stat.c

## end   gnulib module sys_stat-tests

## begin gnulib module sys_time

BUILT_SOURCES += sys/time.h

# We need the following in order to create <sys/time.h> when the system
# doesn't have one that works with the given compiler.
sys/time.h: sys_time.in.h $(top_builddir)/config.status $(CXXDEFS_H) $(ARG_NONNULL_H) $(WARN_ON_USE_H)
	$(AM_V_GEN)$(MKDIR_P) '%reldir%/sys'
	$(AM_V_at)$(SED_HEADER_STDOUT) \
	      -e 's|@''GUARD_PREFIX''@|GL|g' \
	      -e 's/@''HAVE_SYS_TIME_H''@/$(HAVE_SYS_TIME_H)/g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''NEXT_SYS_TIME_H''@|$(NEXT_SYS_TIME_H)|g' \
	      -e 's/@''GNULIB_GETTIMEOFDAY''@/$(GL_GNULIB_GETTIMEOFDAY)/g' \
	      -e 's|@''HAVE_WINSOCK2_H''@|$(HAVE_WINSOCK2_H)|g' \
	      -e 's/@''HAVE_GETTIMEOFDAY''@/$(HAVE_GETTIMEOFDAY)/g' \
	      -e 's/@''HAVE_STRUCT_TIMEVAL''@/$(HAVE_STRUCT_TIMEVAL)/g' \
	      -e 's/@''REPLACE_GETTIMEOFDAY''@/$(REPLACE_GETTIMEOFDAY)/g' \
	      -e 's/@''REPLACE_STRUCT_TIMEVAL''@/$(REPLACE_STRUCT_TIMEVAL)/g' \
	      -e '/definitions of _GL_FUNCDECL_RPL/r $(CXXDEFS_H)' \
	      -e '/definition of _GL_ARG_NONNULL/r $(ARG_NONNULL_H)' \
	      -e '/definition of _GL_WARN_ON_USE/r $(WARN_ON_USE_H)' \
	      $(srcdir)/sys_time.in.h > $@-t
	$(AM_V_at)mv $@-t $@
MOSTLYCLEANFILES += sys/time.h sys/time.h-t

EXTRA_DIST += sys_time.in.h

## end   gnulib module sys_time

## begin gnulib module sys_time-tests

TESTS += test-sys_time
check_PROGRAMS += test-sys_time
EXTRA_DIST += test-sys_time.c

## end   gnulib module sys_time-tests

## begin gnulib module sys_types-tests

TESTS += test-sys_types
check_PROGRAMS += test-sys_types
EXTRA_DIST += test-sys_types.c

## end   gnulib module sys_types-tests

## begin gnulib module sys_uio

BUILT_SOURCES += sys/uio.h

# We need the following in order to create <sys/uio.h> when the system
# doesn't have one that works with the given compiler.
sys/uio.h: sys_uio.in.h $(top_builddir)/config.status
	$(AM_V_GEN)$(MKDIR_P) '%reldir%/sys'
	$(AM_V_at)$(SED_HEADER_STDOUT) \
	      -e 's|@''GUARD_PREFIX''@|GL|g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''NEXT_SYS_UIO_H''@|$(NEXT_SYS_UIO_H)|g' \
	      -e 's|@''HAVE_SYS_UIO_H''@|$(HAVE_SYS_UIO_H)|g' \
	      $(srcdir)/sys_uio.in.h > $@-t
	$(AM_V_at)mv $@-t $@
MOSTLYCLEANFILES += sys/uio.h sys/uio.h-t
MOSTLYCLEANDIRS += sys

EXTRA_DIST += sys_uio.in.h

## end   gnulib module sys_uio

## begin gnulib module sys_uio-tests

TESTS += test-sys_uio
check_PROGRAMS += test-sys_uio
EXTRA_DIST += test-sys_uio.c

## end   gnulib module sys_uio-tests

## begin gnulib module test-framework-sh-tests

TESTS += test-init.sh
EXTRA_DIST += init.sh
EXTRA_DIST += test-init.sh

## end   gnulib module test-framework-sh-tests

## begin gnulib module thread

libtests_a_SOURCES += glthread/thread.h glthread/thread.c

## end   gnulib module thread

## begin gnulib module thread-tests

TESTS += test-thread_self test-thread_create
check_PROGRAMS += test-thread_self test-thread_create
test_thread_self_LDADD = $(LDADD) @LIBTHREAD@
test_thread_create_LDADD = $(LDADD) @LIBMULTITHREAD@
EXTRA_DIST += test-thread_self.c test-thread_create.c macros.h

## end   gnulib module thread-tests

## begin gnulib module time

BUILT_SOURCES += time.h

# We need the following in order to create <time.h> when the system
# doesn't have one that works with the given compiler.
time.h: time.in.h $(top_builddir)/config.status $(CXXDEFS_H) $(ARG_NONNULL_H) $(WARN_ON_USE_H)
	$(gl_V_at)$(SED_HEADER_STDOUT) \
	      -e 's|@''GUARD_PREFIX''@|GL|g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''NEXT_TIME_H''@|$(NEXT_TIME_H)|g' \
	      -e 's/@''GNULIB_CTIME''@/$(GL_GNULIB_CTIME)/g' \
	      -e 's/@''GNULIB_LOCALTIME''@/$(GL_GNULIB_LOCALTIME)/g' \
	      -e 's/@''GNULIB_MKTIME''@/$(GL_GNULIB_MKTIME)/g' \
	      -e 's/@''GNULIB_NANOSLEEP''@/$(GL_GNULIB_NANOSLEEP)/g' \
	      -e 's/@''GNULIB_STRFTIME''@/$(GL_GNULIB_STRFTIME)/g' \
	      -e 's/@''GNULIB_STRPTIME''@/$(GL_GNULIB_STRPTIME)/g' \
	      -e 's/@''GNULIB_TIMEGM''@/$(GL_GNULIB_TIMEGM)/g' \
	      -e 's/@''GNULIB_TIMESPEC_GET''@/$(GL_GNULIB_TIMESPEC_GET)/g' \
	      -e 's/@''GNULIB_TIMESPEC_GETRES''@/$(GL_GNULIB_TIMESPEC_GETRES)/g' \
	      -e 's/@''GNULIB_TIME_R''@/$(GL_GNULIB_TIME_R)/g' \
	      -e 's/@''GNULIB_TIME_RZ''@/$(GL_GNULIB_TIME_RZ)/g' \
	      -e 's/@''GNULIB_TZSET''@/$(GL_GNULIB_TZSET)/g' \
	      -e 's/@''GNULIB_MDA_TZSET''@/$(GL_GNULIB_MDA_TZSET)/g' \
	      -e 's|@''HAVE_DECL_LOCALTIME_R''@|$(HAVE_DECL_LOCALTIME_R)|g' \
	      -e 's|@''HAVE_NANOSLEEP''@|$(HAVE_NANOSLEEP)|g' \
	      -e 's|@''HAVE_STRPTIME''@|$(HAVE_STRPTIME)|g' \
	      -e 's|@''HAVE_TIMEGM''@|$(HAVE_TIMEGM)|g' \
	      -e 's|@''HAVE_TIMESPEC_GET''@|$(HAVE_TIMESPEC_GET)|g' \
	      -e 's|@''HAVE_TIMESPEC_GETRES''@|$(HAVE_TIMESPEC_GETRES)|g' \
	      -e 's|@''HAVE_TIMEZONE_T''@|$(HAVE_TIMEZONE_T)|g' \
	      -e 's|@''REPLACE_CTIME''@|$(REPLACE_CTIME)|g' \
	      -e 's|@''REPLACE_GMTIME''@|$(REPLACE_GMTIME)|g' \
	      -e 's|@''REPLACE_LOCALTIME''@|$(REPLACE_LOCALTIME)|g' \
	      -e 's|@''REPLACE_LOCALTIME_R''@|$(REPLACE_LOCALTIME_R)|g' \
	      -e 's|@''REPLACE_MKTIME''@|$(REPLACE_MKTIME)|g' \
	      -e 's|@''REPLACE_NANOSLEEP''@|$(REPLACE_NANOSLEEP)|g' \
	      -e 's|@''REPLACE_STRFTIME''@|$(REPLACE_STRFTIME)|g' \
	      -e 's|@''REPLACE_TIMEGM''@|$(REPLACE_TIMEGM)|g' \
	      -e 's|@''REPLACE_TZSET''@|$(REPLACE_TZSET)|g' \
	      -e 's|@''PTHREAD_H_DEFINES_STRUCT_TIMESPEC''@|$(PTHREAD_H_DEFINES_STRUCT_TIMESPEC)|g' \
	      -e 's|@''SYS_TIME_H_DEFINES_STRUCT_TIMESPEC''@|$(SYS_TIME_H_DEFINES_STRUCT_TIMESPEC)|g' \
	      -e 's|@''TIME_H_DEFINES_STRUCT_TIMESPEC''@|$(TIME_H_DEFINES_STRUCT_TIMESPEC)|g' \
	      -e 's|@''UNISTD_H_DEFINES_STRUCT_TIMESPEC''@|$(UNISTD_H_DEFINES_STRUCT_TIMESPEC)|g' \
	      -e 's|@''TIME_H_DEFINES_TIME_UTC''@|$(TIME_H_DEFINES_TIME_UTC)|g' \
	      -e '/definitions of _GL_FUNCDECL_RPL/r $(CXXDEFS_H)' \
	      -e '/definition of _GL_ARG_NONNULL/r $(ARG_NONNULL_H)' \
	      -e '/definition of _GL_WARN_ON_USE/r $(WARN_ON_USE_H)' \
	      $(srcdir)/time.in.h > $@-t
	$(AM_V_at)mv $@-t $@
MOSTLYCLEANFILES += time.h time.h-t

EXTRA_DIST += time.in.h

## end   gnulib module time

## begin gnulib module time-tests

TESTS += test-time
check_PROGRAMS += test-time
EXTRA_DIST += test-time.c

## end   gnulib module time-tests

## begin gnulib module unicase/cased-tests

TESTS += test-cased
check_PROGRAMS += test-cased
test_cased_SOURCES = unicase/test-cased.c
test_cased_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-cased.c unicase/test-predicate-part1.h unicase/test-predicate-part2.h macros.h

## end   gnulib module unicase/cased-tests

## begin gnulib module unicase/ignorable-tests

TESTS += test-ignorable
check_PROGRAMS += test-ignorable
test_ignorable_SOURCES = unicase/test-ignorable.c
test_ignorable_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-ignorable.c unicase/test-predicate-part1.h unicase/test-predicate-part2.h macros.h

## end   gnulib module unicase/ignorable-tests

## begin gnulib module unicase/locale-language-tests

TESTS += unicase/test-locale-language.sh
TESTS_ENVIRONMENT += LOCALE_FR='@LOCALE_FR@' LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' LOCALE_JA='@LOCALE_JA@' LOCALE_TR_UTF8='@LOCALE_TR_UTF8@' LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-locale-language
test_locale_language_SOURCES = unicase/test-locale-language.c
test_locale_language_LDADD = $(LDADD) $(LIB_SETLOCALE) $(LIBUNISTRING) @INTL_MACOSX_LIBS@ $(LIBTHREAD)
EXTRA_DIST += unicase/test-locale-language.sh unicase/test-locale-language.c macros.h

## end   gnulib module unicase/locale-language-tests

## begin gnulib module unicase/tolower-tests

TESTS += test-uc_tolower
check_PROGRAMS += test-uc_tolower
test_uc_tolower_SOURCES = unicase/test-uc_tolower.c
test_uc_tolower_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-uc_tolower.c unicase/test-mapping-part1.h unicase/test-mapping-part2.h macros.h

## end   gnulib module unicase/tolower-tests

## begin gnulib module unicase/totitle-tests

TESTS += test-uc_totitle
check_PROGRAMS += test-uc_totitle
test_uc_totitle_SOURCES = unicase/test-uc_totitle.c
test_uc_totitle_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-uc_totitle.c unicase/test-mapping-part1.h unicase/test-mapping-part2.h macros.h

## end   gnulib module unicase/totitle-tests

## begin gnulib module unicase/toupper-tests

TESTS += test-uc_toupper
check_PROGRAMS += test-uc_toupper
test_uc_toupper_SOURCES = unicase/test-uc_toupper.c
test_uc_toupper_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-uc_toupper.c unicase/test-mapping-part1.h unicase/test-mapping-part2.h macros.h

## end   gnulib module unicase/toupper-tests

## begin gnulib module unicase/u16-casecmp-tests

TESTS += test-u16-casecmp
check_PROGRAMS += test-u16-casecmp
test_u16_casecmp_SOURCES = unicase/test-u16-casecmp.c
test_u16_casecmp_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-u16-casecmp.c unicase/test-casecmp.h macros.h

## end   gnulib module unicase/u16-casecmp-tests

## begin gnulib module unicase/u16-casecoll-tests

TESTS += test-u16-casecoll
check_PROGRAMS += test-u16-casecoll
test_u16_casecoll_SOURCES = unicase/test-u16-casecoll.c
test_u16_casecoll_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@

EXTRA_DIST += unicase/test-u16-casecoll.c unicase/test-casecmp.h macros.h

## end   gnulib module unicase/u16-casecoll-tests

## begin gnulib module unicase/u16-casefold-tests

TESTS += test-u16-casefold
check_PROGRAMS += test-u16-casefold
test_u16_casefold_SOURCES = unicase/test-u16-casefold.c
test_u16_casefold_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-u16-casefold.c macros.h

## end   gnulib module unicase/u16-casefold-tests

## begin gnulib module unicase/u16-is-cased-tests

TESTS += test-u16-is-cased
check_PROGRAMS += test-u16-is-cased
test_u16_is_cased_SOURCES = unicase/test-u16-is-cased.c
test_u16_is_cased_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-u16-is-cased.c unicase/test-is-cased.h macros.h

## end   gnulib module unicase/u16-is-cased-tests

## begin gnulib module unicase/u16-is-casefolded-tests

TESTS += test-u16-is-casefolded
check_PROGRAMS += test-u16-is-casefolded
test_u16_is_casefolded_SOURCES = unicase/test-u16-is-casefolded.c
test_u16_is_casefolded_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-u16-is-casefolded.c unicase/test-is-casefolded.h macros.h

## end   gnulib module unicase/u16-is-casefolded-tests

## begin gnulib module unicase/u16-is-lowercase-tests

TESTS += test-u16-is-lowercase
check_PROGRAMS += test-u16-is-lowercase
test_u16_is_lowercase_SOURCES = unicase/test-u16-is-lowercase.c
test_u16_is_lowercase_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-u16-is-lowercase.c unicase/test-is-lowercase.h macros.h

## end   gnulib module unicase/u16-is-lowercase-tests

## begin gnulib module unicase/u16-is-titlecase-tests

TESTS += test-u16-is-titlecase
check_PROGRAMS += test-u16-is-titlecase
test_u16_is_titlecase_SOURCES = unicase/test-u16-is-titlecase.c
test_u16_is_titlecase_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-u16-is-titlecase.c unicase/test-is-titlecase.h macros.h

## end   gnulib module unicase/u16-is-titlecase-tests

## begin gnulib module unicase/u16-is-uppercase-tests

TESTS += test-u16-is-uppercase
check_PROGRAMS += test-u16-is-uppercase
test_u16_is_uppercase_SOURCES = unicase/test-u16-is-uppercase.c
test_u16_is_uppercase_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-u16-is-uppercase.c unicase/test-is-uppercase.h macros.h

## end   gnulib module unicase/u16-is-uppercase-tests

## begin gnulib module unicase/u16-tolower-tests

TESTS += test-u16-tolower
check_PROGRAMS += test-u16-tolower
test_u16_tolower_SOURCES = unicase/test-u16-tolower.c
test_u16_tolower_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-u16-tolower.c macros.h

## end   gnulib module unicase/u16-tolower-tests

## begin gnulib module unicase/u16-totitle-tests

TESTS += test-u16-totitle
check_PROGRAMS += test-u16-totitle
test_u16_totitle_SOURCES = unicase/test-u16-totitle.c
test_u16_totitle_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-u16-totitle.c macros.h

## end   gnulib module unicase/u16-totitle-tests

## begin gnulib module unicase/u16-toupper-tests

TESTS += test-u16-toupper
check_PROGRAMS += test-u16-toupper
test_u16_toupper_SOURCES = unicase/test-u16-toupper.c
test_u16_toupper_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-u16-toupper.c macros.h

## end   gnulib module unicase/u16-toupper-tests

## begin gnulib module unicase/u32-casecmp-tests

TESTS += test-u32-casecmp
check_PROGRAMS += test-u32-casecmp
test_u32_casecmp_SOURCES = unicase/test-u32-casecmp.c
test_u32_casecmp_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-u32-casecmp.c unicase/test-casecmp.h macros.h

## end   gnulib module unicase/u32-casecmp-tests

## begin gnulib module unicase/u32-casecoll-tests

TESTS += test-u32-casecoll
check_PROGRAMS += test-u32-casecoll
test_u32_casecoll_SOURCES = unicase/test-u32-casecoll.c
test_u32_casecoll_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@

EXTRA_DIST += unicase/test-u32-casecoll.c unicase/test-casecmp.h macros.h

## end   gnulib module unicase/u32-casecoll-tests

## begin gnulib module unicase/u32-casefold-tests

TESTS += test-u32-casefold
check_PROGRAMS += test-u32-casefold
test_u32_casefold_SOURCES = unicase/test-u32-casefold.c
test_u32_casefold_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-u32-casefold.c macros.h

## end   gnulib module unicase/u32-casefold-tests

## begin gnulib module unicase/u32-is-cased-tests

TESTS += test-u32-is-cased
check_PROGRAMS += test-u32-is-cased
test_u32_is_cased_SOURCES = unicase/test-u32-is-cased.c
test_u32_is_cased_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-u32-is-cased.c unicase/test-is-cased.h macros.h

## end   gnulib module unicase/u32-is-cased-tests

## begin gnulib module unicase/u32-is-casefolded-tests

TESTS += test-u32-is-casefolded
check_PROGRAMS += test-u32-is-casefolded
test_u32_is_casefolded_SOURCES = unicase/test-u32-is-casefolded.c
test_u32_is_casefolded_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-u32-is-casefolded.c unicase/test-is-casefolded.h macros.h

## end   gnulib module unicase/u32-is-casefolded-tests

## begin gnulib module unicase/u32-is-lowercase-tests

TESTS += test-u32-is-lowercase
check_PROGRAMS += test-u32-is-lowercase
test_u32_is_lowercase_SOURCES = unicase/test-u32-is-lowercase.c
test_u32_is_lowercase_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-u32-is-lowercase.c unicase/test-is-lowercase.h macros.h

## end   gnulib module unicase/u32-is-lowercase-tests

## begin gnulib module unicase/u32-is-titlecase-tests

TESTS += test-u32-is-titlecase
check_PROGRAMS += test-u32-is-titlecase
test_u32_is_titlecase_SOURCES = unicase/test-u32-is-titlecase.c
test_u32_is_titlecase_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-u32-is-titlecase.c unicase/test-is-titlecase.h macros.h

## end   gnulib module unicase/u32-is-titlecase-tests

## begin gnulib module unicase/u32-is-uppercase-tests

TESTS += test-u32-is-uppercase
check_PROGRAMS += test-u32-is-uppercase
test_u32_is_uppercase_SOURCES = unicase/test-u32-is-uppercase.c
test_u32_is_uppercase_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-u32-is-uppercase.c unicase/test-is-uppercase.h macros.h

## end   gnulib module unicase/u32-is-uppercase-tests

## begin gnulib module unicase/u32-tolower-tests

TESTS += test-u32-tolower
check_PROGRAMS += test-u32-tolower
test_u32_tolower_SOURCES = unicase/test-u32-tolower.c
test_u32_tolower_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-u32-tolower.c macros.h

## end   gnulib module unicase/u32-tolower-tests

## begin gnulib module unicase/u32-totitle-tests

TESTS += test-u32-totitle
check_PROGRAMS += test-u32-totitle
test_u32_totitle_SOURCES = unicase/test-u32-totitle.c
test_u32_totitle_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-u32-totitle.c macros.h

## end   gnulib module unicase/u32-totitle-tests

## begin gnulib module unicase/u32-toupper-tests

TESTS += test-u32-toupper
check_PROGRAMS += test-u32-toupper
test_u32_toupper_SOURCES = unicase/test-u32-toupper.c
test_u32_toupper_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-u32-toupper.c macros.h

## end   gnulib module unicase/u32-toupper-tests

## begin gnulib module unicase/u8-casecmp-tests

TESTS += test-u8-casecmp
check_PROGRAMS += test-u8-casecmp
test_u8_casecmp_SOURCES = unicase/test-u8-casecmp.c
test_u8_casecmp_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-u8-casecmp.c unicase/test-casecmp.h macros.h

## end   gnulib module unicase/u8-casecmp-tests

## begin gnulib module unicase/u8-casecoll-tests

TESTS += test-u8-casecoll
check_PROGRAMS += test-u8-casecoll
test_u8_casecoll_SOURCES = unicase/test-u8-casecoll.c
test_u8_casecoll_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@

EXTRA_DIST += unicase/test-u8-casecoll.c unicase/test-casecmp.h macros.h

## end   gnulib module unicase/u8-casecoll-tests

## begin gnulib module unicase/u8-casefold-tests

TESTS += test-u8-casefold
check_PROGRAMS += test-u8-casefold
test_u8_casefold_SOURCES = unicase/test-u8-casefold.c
test_u8_casefold_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-u8-casefold.c macros.h

## end   gnulib module unicase/u8-casefold-tests

## begin gnulib module unicase/u8-is-cased-tests

TESTS += test-u8-is-cased
check_PROGRAMS += test-u8-is-cased
test_u8_is_cased_SOURCES = unicase/test-u8-is-cased.c
test_u8_is_cased_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-u8-is-cased.c unicase/test-is-cased.h macros.h

## end   gnulib module unicase/u8-is-cased-tests

## begin gnulib module unicase/u8-is-casefolded-tests

TESTS += test-u8-is-casefolded
check_PROGRAMS += test-u8-is-casefolded
test_u8_is_casefolded_SOURCES = unicase/test-u8-is-casefolded.c
test_u8_is_casefolded_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-u8-is-casefolded.c unicase/test-is-casefolded.h macros.h

## end   gnulib module unicase/u8-is-casefolded-tests

## begin gnulib module unicase/u8-is-lowercase-tests

TESTS += test-u8-is-lowercase
check_PROGRAMS += test-u8-is-lowercase
test_u8_is_lowercase_SOURCES = unicase/test-u8-is-lowercase.c
test_u8_is_lowercase_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-u8-is-lowercase.c unicase/test-is-lowercase.h macros.h

## end   gnulib module unicase/u8-is-lowercase-tests

## begin gnulib module unicase/u8-is-titlecase-tests

TESTS += test-u8-is-titlecase
check_PROGRAMS += test-u8-is-titlecase
test_u8_is_titlecase_SOURCES = unicase/test-u8-is-titlecase.c
test_u8_is_titlecase_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-u8-is-titlecase.c unicase/test-is-titlecase.h macros.h

## end   gnulib module unicase/u8-is-titlecase-tests

## begin gnulib module unicase/u8-is-uppercase-tests

TESTS += test-u8-is-uppercase
check_PROGRAMS += test-u8-is-uppercase
test_u8_is_uppercase_SOURCES = unicase/test-u8-is-uppercase.c
test_u8_is_uppercase_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-u8-is-uppercase.c unicase/test-is-uppercase.h macros.h

## end   gnulib module unicase/u8-is-uppercase-tests

## begin gnulib module unicase/u8-tolower-tests

TESTS += test-u8-tolower
check_PROGRAMS += test-u8-tolower
test_u8_tolower_SOURCES = unicase/test-u8-tolower.c
test_u8_tolower_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-u8-tolower.c macros.h

## end   gnulib module unicase/u8-tolower-tests

## begin gnulib module unicase/u8-totitle-tests

TESTS += test-u8-totitle
check_PROGRAMS += test-u8-totitle
test_u8_totitle_SOURCES = unicase/test-u8-totitle.c
test_u8_totitle_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-u8-totitle.c macros.h

## end   gnulib module unicase/u8-totitle-tests

## begin gnulib module unicase/u8-toupper-tests

TESTS += test-u8-toupper
check_PROGRAMS += test-u8-toupper
test_u8_toupper_SOURCES = unicase/test-u8-toupper.c
test_u8_toupper_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unicase/test-u8-toupper.c macros.h

## end   gnulib module unicase/u8-toupper-tests

## begin gnulib module unicase/ulc-casecmp-tests

TESTS += unicase/test-ulc-casecmp1.sh unicase/test-ulc-casecmp2.sh
TESTS_ENVIRONMENT += \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@'
check_PROGRAMS += test-ulc-casecmp
test_ulc_casecmp_SOURCES = unicase/test-ulc-casecmp.c
test_ulc_casecmp_LDADD = $(LDADD) $(LIB_SETLOCALE) $(LIBUNISTRING) @LIBICONV@

EXTRA_DIST += unicase/test-ulc-casecmp1.sh unicase/test-ulc-casecmp2.sh unicase/test-ulc-casecmp.c unicase/test-casecmp.h macros.h

## end   gnulib module unicase/ulc-casecmp-tests

## begin gnulib module unicase/ulc-casecoll-tests

TESTS += unicase/test-ulc-casecoll1.sh unicase/test-ulc-casecoll2.sh
TESTS_ENVIRONMENT += \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@'
check_PROGRAMS += test-ulc-casecoll
test_ulc_casecoll_SOURCES = unicase/test-ulc-casecoll.c
test_ulc_casecoll_LDADD = $(LDADD) $(LIB_SETLOCALE) $(LIBUNISTRING) @LIBICONV@

EXTRA_DIST += unicase/test-ulc-casecoll1.sh unicase/test-ulc-casecoll2.sh unicase/test-ulc-casecoll.c unicase/test-casecmp.h macros.h

## end   gnulib module unicase/ulc-casecoll-tests

## begin gnulib module uniconv/u16-conv-from-enc-tests

TESTS += test-u16-conv-from-enc
check_PROGRAMS += test-u16-conv-from-enc
test_u16_conv_from_enc_SOURCES = uniconv/test-u16-conv-from-enc.c iconvsupport.c
test_u16_conv_from_enc_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@

EXTRA_DIST += uniconv/test-u16-conv-from-enc.c iconvsupport.c macros.h

## end   gnulib module uniconv/u16-conv-from-enc-tests

## begin gnulib module uniconv/u16-conv-to-enc-tests

TESTS += test-u16-conv-to-enc
check_PROGRAMS += test-u16-conv-to-enc
test_u16_conv_to_enc_SOURCES = uniconv/test-u16-conv-to-enc.c
test_u16_conv_to_enc_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@

EXTRA_DIST += uniconv/test-u16-conv-to-enc.c macros.h

## end   gnulib module uniconv/u16-conv-to-enc-tests

## begin gnulib module uniconv/u16-strconv-from-enc-tests

TESTS += test-u16-strconv-from-enc
check_PROGRAMS += test-u16-strconv-from-enc
test_u16_strconv_from_enc_SOURCES = uniconv/test-u16-strconv-from-enc.c iconvsupport.c
test_u16_strconv_from_enc_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@

EXTRA_DIST += uniconv/test-u16-strconv-from-enc.c iconvsupport.c macros.h

## end   gnulib module uniconv/u16-strconv-from-enc-tests

## begin gnulib module uniconv/u16-strconv-to-enc-tests

TESTS += test-u16-strconv-to-enc
check_PROGRAMS += test-u16-strconv-to-enc
test_u16_strconv_to_enc_SOURCES = uniconv/test-u16-strconv-to-enc.c
test_u16_strconv_to_enc_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@

EXTRA_DIST += uniconv/test-u16-strconv-to-enc.c macros.h

## end   gnulib module uniconv/u16-strconv-to-enc-tests

## begin gnulib module uniconv/u32-conv-from-enc-tests

TESTS += test-u32-conv-from-enc
check_PROGRAMS += test-u32-conv-from-enc
test_u32_conv_from_enc_SOURCES = uniconv/test-u32-conv-from-enc.c iconvsupport.c
test_u32_conv_from_enc_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@

EXTRA_DIST += uniconv/test-u32-conv-from-enc.c iconvsupport.c macros.h

## end   gnulib module uniconv/u32-conv-from-enc-tests

## begin gnulib module uniconv/u32-conv-to-enc-tests

TESTS += test-u32-conv-to-enc
check_PROGRAMS += test-u32-conv-to-enc
test_u32_conv_to_enc_SOURCES = uniconv/test-u32-conv-to-enc.c
test_u32_conv_to_enc_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@

EXTRA_DIST += uniconv/test-u32-conv-to-enc.c macros.h

## end   gnulib module uniconv/u32-conv-to-enc-tests

## begin gnulib module uniconv/u32-strconv-from-enc-tests

TESTS += test-u32-strconv-from-enc
check_PROGRAMS += test-u32-strconv-from-enc
test_u32_strconv_from_enc_SOURCES = uniconv/test-u32-strconv-from-enc.c iconvsupport.c
test_u32_strconv_from_enc_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@

EXTRA_DIST += uniconv/test-u32-strconv-from-enc.c iconvsupport.c macros.h

## end   gnulib module uniconv/u32-strconv-from-enc-tests

## begin gnulib module uniconv/u32-strconv-to-enc-tests

TESTS += test-u32-strconv-to-enc
check_PROGRAMS += test-u32-strconv-to-enc
test_u32_strconv_to_enc_SOURCES = uniconv/test-u32-strconv-to-enc.c
test_u32_strconv_to_enc_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@

EXTRA_DIST += uniconv/test-u32-strconv-to-enc.c macros.h

## end   gnulib module uniconv/u32-strconv-to-enc-tests

## begin gnulib module uniconv/u8-conv-from-enc-tests

TESTS += test-u8-conv-from-enc
check_PROGRAMS += test-u8-conv-from-enc
test_u8_conv_from_enc_SOURCES = uniconv/test-u8-conv-from-enc.c iconvsupport.c
test_u8_conv_from_enc_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@

EXTRA_DIST += uniconv/test-u8-conv-from-enc.c iconvsupport.c macros.h

## end   gnulib module uniconv/u8-conv-from-enc-tests

## begin gnulib module uniconv/u8-conv-to-enc-tests

TESTS += test-u8-conv-to-enc
check_PROGRAMS += test-u8-conv-to-enc
test_u8_conv_to_enc_SOURCES = uniconv/test-u8-conv-to-enc.c
test_u8_conv_to_enc_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@

EXTRA_DIST += uniconv/test-u8-conv-to-enc.c macros.h

## end   gnulib module uniconv/u8-conv-to-enc-tests

## begin gnulib module uniconv/u8-strconv-from-enc-tests

TESTS += test-u8-strconv-from-enc
check_PROGRAMS += test-u8-strconv-from-enc
test_u8_strconv_from_enc_SOURCES = uniconv/test-u8-strconv-from-enc.c iconvsupport.c
test_u8_strconv_from_enc_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@

EXTRA_DIST += uniconv/test-u8-strconv-from-enc.c iconvsupport.c macros.h

## end   gnulib module uniconv/u8-strconv-from-enc-tests

## begin gnulib module uniconv/u8-strconv-to-enc-tests

TESTS += test-u8-strconv-to-enc
check_PROGRAMS += test-u8-strconv-to-enc
test_u8_strconv_to_enc_SOURCES = uniconv/test-u8-strconv-to-enc.c
test_u8_strconv_to_enc_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@

EXTRA_DIST += uniconv/test-u8-strconv-to-enc.c macros.h

## end   gnulib module uniconv/u8-strconv-to-enc-tests

## begin gnulib module unictype/bidiclass-byname-tests

TESTS += test-bidi_byname
check_PROGRAMS += test-bidi_byname
test_bidi_byname_SOURCES = unictype/test-bidi_byname.c
test_bidi_byname_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-bidi_byname.c macros.h

## end   gnulib module unictype/bidiclass-byname-tests

## begin gnulib module unictype/bidiclass-longname-tests

TESTS += test-bidi_longname
check_PROGRAMS += test-bidi_longname
test_bidi_longname_SOURCES = unictype/test-bidi_longname.c
test_bidi_longname_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-bidi_longname.c macros.h

## end   gnulib module unictype/bidiclass-longname-tests

## begin gnulib module unictype/bidiclass-name-tests

TESTS += test-bidi_name
check_PROGRAMS += test-bidi_name
test_bidi_name_SOURCES = unictype/test-bidi_name.c
test_bidi_name_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-bidi_name.c macros.h

## end   gnulib module unictype/bidiclass-name-tests

## begin gnulib module unictype/bidiclass-of-tests

TESTS += test-bidi_of
check_PROGRAMS += test-bidi_of
test_bidi_of_SOURCES = unictype/test-bidi_of.c
test_bidi_of_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-bidi_of.c macros.h

## end   gnulib module unictype/bidiclass-of-tests

## begin gnulib module unictype/bidiclass-test-tests

TESTS += test-bidi_test
check_PROGRAMS += test-bidi_test
test_bidi_test_SOURCES = unictype/test-bidi_test.c
test_bidi_test_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-bidi_test.c macros.h

## end   gnulib module unictype/bidiclass-test-tests

## begin gnulib module unictype/block-list-tests

TESTS += test-block_list
check_PROGRAMS += test-block_list
test_block_list_SOURCES = unictype/test-block_list.c
test_block_list_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-block_list.c macros.h

## end   gnulib module unictype/block-list-tests

## begin gnulib module unictype/block-of-tests

TESTS += test-block_of
check_PROGRAMS += test-block_of
test_block_of_SOURCES = unictype/test-block_of.c
test_block_of_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-block_of.c macros.h

## end   gnulib module unictype/block-of-tests

## begin gnulib module unictype/block-test-tests

TESTS += test-block_test
check_PROGRAMS += test-block_test
test_block_test_SOURCES = unictype/test-block_test.c
test_block_test_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-block_test.c macros.h

## end   gnulib module unictype/block-test-tests

## begin gnulib module unictype/category-C-tests

TESTS += test-categ_C
check_PROGRAMS += test-categ_C
test_categ_C_SOURCES = unictype/test-categ_C.c
test_categ_C_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_C.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-C-tests

## begin gnulib module unictype/category-Cc-tests

TESTS += test-categ_Cc
check_PROGRAMS += test-categ_Cc
test_categ_Cc_SOURCES = unictype/test-categ_Cc.c
test_categ_Cc_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_Cc.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-Cc-tests

## begin gnulib module unictype/category-Cf-tests

TESTS += test-categ_Cf
check_PROGRAMS += test-categ_Cf
test_categ_Cf_SOURCES = unictype/test-categ_Cf.c
test_categ_Cf_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_Cf.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-Cf-tests

## begin gnulib module unictype/category-Cn-tests

TESTS += test-categ_Cn
check_PROGRAMS += test-categ_Cn
test_categ_Cn_SOURCES = unictype/test-categ_Cn.c
test_categ_Cn_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_Cn.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-Cn-tests

## begin gnulib module unictype/category-Co-tests

TESTS += test-categ_Co
check_PROGRAMS += test-categ_Co
test_categ_Co_SOURCES = unictype/test-categ_Co.c
test_categ_Co_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_Co.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-Co-tests

## begin gnulib module unictype/category-Cs-tests

TESTS += test-categ_Cs
check_PROGRAMS += test-categ_Cs
test_categ_Cs_SOURCES = unictype/test-categ_Cs.c
test_categ_Cs_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_Cs.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-Cs-tests

## begin gnulib module unictype/category-L-tests

TESTS += test-categ_L
check_PROGRAMS += test-categ_L
test_categ_L_SOURCES = unictype/test-categ_L.c
test_categ_L_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_L.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-L-tests

## begin gnulib module unictype/category-LC-tests

TESTS += test-categ_LC
check_PROGRAMS += test-categ_LC
test_categ_LC_SOURCES = unictype/test-categ_LC.c
test_categ_LC_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_LC.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-LC-tests

## begin gnulib module unictype/category-Ll-tests

TESTS += test-categ_Ll
check_PROGRAMS += test-categ_Ll
test_categ_Ll_SOURCES = unictype/test-categ_Ll.c
test_categ_Ll_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_Ll.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-Ll-tests

## begin gnulib module unictype/category-Lm-tests

TESTS += test-categ_Lm
check_PROGRAMS += test-categ_Lm
test_categ_Lm_SOURCES = unictype/test-categ_Lm.c
test_categ_Lm_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_Lm.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-Lm-tests

## begin gnulib module unictype/category-Lo-tests

TESTS += test-categ_Lo
check_PROGRAMS += test-categ_Lo
test_categ_Lo_SOURCES = unictype/test-categ_Lo.c
test_categ_Lo_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_Lo.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-Lo-tests

## begin gnulib module unictype/category-Lt-tests

TESTS += test-categ_Lt
check_PROGRAMS += test-categ_Lt
test_categ_Lt_SOURCES = unictype/test-categ_Lt.c
test_categ_Lt_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_Lt.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-Lt-tests

## begin gnulib module unictype/category-Lu-tests

TESTS += test-categ_Lu
check_PROGRAMS += test-categ_Lu
test_categ_Lu_SOURCES = unictype/test-categ_Lu.c
test_categ_Lu_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_Lu.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-Lu-tests

## begin gnulib module unictype/category-M-tests

TESTS += test-categ_M
check_PROGRAMS += test-categ_M
test_categ_M_SOURCES = unictype/test-categ_M.c
test_categ_M_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_M.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-M-tests

## begin gnulib module unictype/category-Mc-tests

TESTS += test-categ_Mc
check_PROGRAMS += test-categ_Mc
test_categ_Mc_SOURCES = unictype/test-categ_Mc.c
test_categ_Mc_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_Mc.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-Mc-tests

## begin gnulib module unictype/category-Me-tests

TESTS += test-categ_Me
check_PROGRAMS += test-categ_Me
test_categ_Me_SOURCES = unictype/test-categ_Me.c
test_categ_Me_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_Me.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-Me-tests

## begin gnulib module unictype/category-Mn-tests

TESTS += test-categ_Mn
check_PROGRAMS += test-categ_Mn
test_categ_Mn_SOURCES = unictype/test-categ_Mn.c
test_categ_Mn_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_Mn.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-Mn-tests

## begin gnulib module unictype/category-N-tests

TESTS += test-categ_N
check_PROGRAMS += test-categ_N
test_categ_N_SOURCES = unictype/test-categ_N.c
test_categ_N_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_N.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-N-tests

## begin gnulib module unictype/category-Nd-tests

TESTS += test-categ_Nd
check_PROGRAMS += test-categ_Nd
test_categ_Nd_SOURCES = unictype/test-categ_Nd.c
test_categ_Nd_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_Nd.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-Nd-tests

## begin gnulib module unictype/category-Nl-tests

TESTS += test-categ_Nl
check_PROGRAMS += test-categ_Nl
test_categ_Nl_SOURCES = unictype/test-categ_Nl.c
test_categ_Nl_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_Nl.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-Nl-tests

## begin gnulib module unictype/category-No-tests

TESTS += test-categ_No
check_PROGRAMS += test-categ_No
test_categ_No_SOURCES = unictype/test-categ_No.c
test_categ_No_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_No.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-No-tests

## begin gnulib module unictype/category-P-tests

TESTS += test-categ_P
check_PROGRAMS += test-categ_P
test_categ_P_SOURCES = unictype/test-categ_P.c
test_categ_P_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_P.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-P-tests

## begin gnulib module unictype/category-Pc-tests

TESTS += test-categ_Pc
check_PROGRAMS += test-categ_Pc
test_categ_Pc_SOURCES = unictype/test-categ_Pc.c
test_categ_Pc_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_Pc.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-Pc-tests

## begin gnulib module unictype/category-Pd-tests

TESTS += test-categ_Pd
check_PROGRAMS += test-categ_Pd
test_categ_Pd_SOURCES = unictype/test-categ_Pd.c
test_categ_Pd_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_Pd.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-Pd-tests

## begin gnulib module unictype/category-Pe-tests

TESTS += test-categ_Pe
check_PROGRAMS += test-categ_Pe
test_categ_Pe_SOURCES = unictype/test-categ_Pe.c
test_categ_Pe_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_Pe.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-Pe-tests

## begin gnulib module unictype/category-Pf-tests

TESTS += test-categ_Pf
check_PROGRAMS += test-categ_Pf
test_categ_Pf_SOURCES = unictype/test-categ_Pf.c
test_categ_Pf_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_Pf.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-Pf-tests

## begin gnulib module unictype/category-Pi-tests

TESTS += test-categ_Pi
check_PROGRAMS += test-categ_Pi
test_categ_Pi_SOURCES = unictype/test-categ_Pi.c
test_categ_Pi_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_Pi.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-Pi-tests

## begin gnulib module unictype/category-Po-tests

TESTS += test-categ_Po
check_PROGRAMS += test-categ_Po
test_categ_Po_SOURCES = unictype/test-categ_Po.c
test_categ_Po_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_Po.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-Po-tests

## begin gnulib module unictype/category-Ps-tests

TESTS += test-categ_Ps
check_PROGRAMS += test-categ_Ps
test_categ_Ps_SOURCES = unictype/test-categ_Ps.c
test_categ_Ps_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_Ps.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-Ps-tests

## begin gnulib module unictype/category-S-tests

TESTS += test-categ_S
check_PROGRAMS += test-categ_S
test_categ_S_SOURCES = unictype/test-categ_S.c
test_categ_S_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_S.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-S-tests

## begin gnulib module unictype/category-Sc-tests

TESTS += test-categ_Sc
check_PROGRAMS += test-categ_Sc
test_categ_Sc_SOURCES = unictype/test-categ_Sc.c
test_categ_Sc_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_Sc.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-Sc-tests

## begin gnulib module unictype/category-Sk-tests

TESTS += test-categ_Sk
check_PROGRAMS += test-categ_Sk
test_categ_Sk_SOURCES = unictype/test-categ_Sk.c
test_categ_Sk_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_Sk.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-Sk-tests

## begin gnulib module unictype/category-Sm-tests

TESTS += test-categ_Sm
check_PROGRAMS += test-categ_Sm
test_categ_Sm_SOURCES = unictype/test-categ_Sm.c
test_categ_Sm_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_Sm.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-Sm-tests

## begin gnulib module unictype/category-So-tests

TESTS += test-categ_So
check_PROGRAMS += test-categ_So
test_categ_So_SOURCES = unictype/test-categ_So.c
test_categ_So_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_So.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-So-tests

## begin gnulib module unictype/category-Z-tests

TESTS += test-categ_Z
check_PROGRAMS += test-categ_Z
test_categ_Z_SOURCES = unictype/test-categ_Z.c
test_categ_Z_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_Z.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-Z-tests

## begin gnulib module unictype/category-Zl-tests

TESTS += test-categ_Zl
check_PROGRAMS += test-categ_Zl
test_categ_Zl_SOURCES = unictype/test-categ_Zl.c
test_categ_Zl_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_Zl.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-Zl-tests

## begin gnulib module unictype/category-Zp-tests

TESTS += test-categ_Zp
check_PROGRAMS += test-categ_Zp
test_categ_Zp_SOURCES = unictype/test-categ_Zp.c
test_categ_Zp_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_Zp.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-Zp-tests

## begin gnulib module unictype/category-Zs-tests

TESTS += test-categ_Zs
check_PROGRAMS += test-categ_Zs
test_categ_Zs_SOURCES = unictype/test-categ_Zs.c
test_categ_Zs_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_Zs.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/category-Zs-tests

## begin gnulib module unictype/category-and-not-tests

TESTS += test-categ_and_not
check_PROGRAMS += test-categ_and_not
test_categ_and_not_SOURCES = unictype/test-categ_and_not.c
test_categ_and_not_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_and_not.c macros.h

## end   gnulib module unictype/category-and-not-tests

## begin gnulib module unictype/category-and-tests

TESTS += test-categ_and
check_PROGRAMS += test-categ_and
test_categ_and_SOURCES = unictype/test-categ_and.c
test_categ_and_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_and.c macros.h

## end   gnulib module unictype/category-and-tests

## begin gnulib module unictype/category-byname-tests

TESTS += test-categ_byname
check_PROGRAMS += test-categ_byname
test_categ_byname_SOURCES = unictype/test-categ_byname.c
test_categ_byname_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_byname.c macros.h

## end   gnulib module unictype/category-byname-tests

## begin gnulib module unictype/category-longname-tests

TESTS += test-categ_longname
check_PROGRAMS += test-categ_longname
test_categ_longname_SOURCES = unictype/test-categ_longname.c
test_categ_longname_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_longname.c macros.h

## end   gnulib module unictype/category-longname-tests

## begin gnulib module unictype/category-name-tests

TESTS += test-categ_name
check_PROGRAMS += test-categ_name
test_categ_name_SOURCES = unictype/test-categ_name.c
test_categ_name_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_name.c macros.h

## end   gnulib module unictype/category-name-tests

## begin gnulib module unictype/category-none-tests

if !WOE32DLL
TESTS += test-categ_none
check_PROGRAMS += test-categ_none
test_categ_none_SOURCES = unictype/test-categ_none.c
test_categ_none_LDADD = $(LDADD) $(LIBUNISTRING)
endif
EXTRA_DIST += unictype/test-categ_none.c macros.h

## end   gnulib module unictype/category-none-tests

## begin gnulib module unictype/category-of-tests

TESTS += test-categ_of
check_PROGRAMS += test-categ_of
test_categ_of_SOURCES = unictype/test-categ_of.c
test_categ_of_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_of.c macros.h

## end   gnulib module unictype/category-of-tests

## begin gnulib module unictype/category-or-tests

TESTS += test-categ_or
check_PROGRAMS += test-categ_or
test_categ_or_SOURCES = unictype/test-categ_or.c
test_categ_or_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_or.c macros.h

## end   gnulib module unictype/category-or-tests

## begin gnulib module unictype/category-test-withtable-tests

TESTS += test-categ_test_withtable
check_PROGRAMS += test-categ_test_withtable
test_categ_test_withtable_SOURCES = unictype/test-categ_test_withtable.c
test_categ_test_withtable_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-categ_test_withtable.c macros.h

## end   gnulib module unictype/category-test-withtable-tests

## begin gnulib module unictype/combining-class-byname-tests

TESTS += test-combiningclass_byname
check_PROGRAMS += test-combiningclass_byname
test_combiningclass_byname_SOURCES = unictype/test-combiningclass_byname.c
test_combiningclass_byname_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-combiningclass_byname.c macros.h

## end   gnulib module unictype/combining-class-byname-tests

## begin gnulib module unictype/combining-class-longname-tests

TESTS += test-combiningclass_longname
check_PROGRAMS += test-combiningclass_longname
test_combiningclass_longname_SOURCES = unictype/test-combiningclass_longname.c
test_combiningclass_longname_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-combiningclass_longname.c macros.h

## end   gnulib module unictype/combining-class-longname-tests

## begin gnulib module unictype/combining-class-name-tests

TESTS += test-combiningclass_name
check_PROGRAMS += test-combiningclass_name
test_combiningclass_name_SOURCES = unictype/test-combiningclass_name.c
test_combiningclass_name_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-combiningclass_name.c macros.h

## end   gnulib module unictype/combining-class-name-tests

## begin gnulib module unictype/combining-class-tests

TESTS += test-combiningclass
check_PROGRAMS += test-combiningclass
test_combiningclass_SOURCES = unictype/test-combiningclass.c
test_combiningclass_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-combiningclass.c macros.h

## end   gnulib module unictype/combining-class-tests

## begin gnulib module unictype/ctype-alnum-tests

TESTS += test-ctype_alnum
check_PROGRAMS += test-ctype_alnum
test_ctype_alnum_SOURCES = unictype/test-ctype_alnum.c
test_ctype_alnum_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-ctype_alnum.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/ctype-alnum-tests

## begin gnulib module unictype/ctype-alpha-tests

TESTS += test-ctype_alpha
check_PROGRAMS += test-ctype_alpha
test_ctype_alpha_SOURCES = unictype/test-ctype_alpha.c
test_ctype_alpha_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-ctype_alpha.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/ctype-alpha-tests

## begin gnulib module unictype/ctype-blank-tests

TESTS += test-ctype_blank
check_PROGRAMS += test-ctype_blank
test_ctype_blank_SOURCES = unictype/test-ctype_blank.c
test_ctype_blank_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-ctype_blank.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/ctype-blank-tests

## begin gnulib module unictype/ctype-cntrl-tests

TESTS += test-ctype_cntrl
check_PROGRAMS += test-ctype_cntrl
test_ctype_cntrl_SOURCES = unictype/test-ctype_cntrl.c
test_ctype_cntrl_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-ctype_cntrl.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/ctype-cntrl-tests

## begin gnulib module unictype/ctype-digit-tests

TESTS += test-ctype_digit
check_PROGRAMS += test-ctype_digit
test_ctype_digit_SOURCES = unictype/test-ctype_digit.c
test_ctype_digit_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-ctype_digit.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/ctype-digit-tests

## begin gnulib module unictype/ctype-graph-tests

TESTS += test-ctype_graph
check_PROGRAMS += test-ctype_graph
test_ctype_graph_SOURCES = unictype/test-ctype_graph.c
test_ctype_graph_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-ctype_graph.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/ctype-graph-tests

## begin gnulib module unictype/ctype-lower-tests

TESTS += test-ctype_lower
check_PROGRAMS += test-ctype_lower
test_ctype_lower_SOURCES = unictype/test-ctype_lower.c
test_ctype_lower_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-ctype_lower.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/ctype-lower-tests

## begin gnulib module unictype/ctype-print-tests

TESTS += test-ctype_print
check_PROGRAMS += test-ctype_print
test_ctype_print_SOURCES = unictype/test-ctype_print.c
test_ctype_print_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-ctype_print.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/ctype-print-tests

## begin gnulib module unictype/ctype-punct-tests

TESTS += test-ctype_punct
check_PROGRAMS += test-ctype_punct
test_ctype_punct_SOURCES = unictype/test-ctype_punct.c
test_ctype_punct_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-ctype_punct.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/ctype-punct-tests

## begin gnulib module unictype/ctype-space-tests

TESTS += test-ctype_space
check_PROGRAMS += test-ctype_space
test_ctype_space_SOURCES = unictype/test-ctype_space.c
test_ctype_space_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-ctype_space.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/ctype-space-tests

## begin gnulib module unictype/ctype-upper-tests

TESTS += test-ctype_upper
check_PROGRAMS += test-ctype_upper
test_ctype_upper_SOURCES = unictype/test-ctype_upper.c
test_ctype_upper_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-ctype_upper.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/ctype-upper-tests

## begin gnulib module unictype/ctype-xdigit-tests

TESTS += test-ctype_xdigit
check_PROGRAMS += test-ctype_xdigit
test_ctype_xdigit_SOURCES = unictype/test-ctype_xdigit.c
test_ctype_xdigit_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-ctype_xdigit.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/ctype-xdigit-tests

## begin gnulib module unictype/decimal-digit-tests

TESTS += test-decdigit
check_PROGRAMS += test-decdigit
test_decdigit_SOURCES = unictype/test-decdigit.c
test_decdigit_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-decdigit.c unictype/test-decdigit.h macros.h

## end   gnulib module unictype/decimal-digit-tests

## begin gnulib module unictype/digit-tests

TESTS += test-digit
check_PROGRAMS += test-digit
test_digit_SOURCES = unictype/test-digit.c
test_digit_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-digit.c unictype/test-digit.h macros.h

## end   gnulib module unictype/digit-tests

## begin gnulib module unictype/joininggroup-byname-tests

TESTS += test-joininggroup_byname
check_PROGRAMS += test-joininggroup_byname
test_joininggroup_byname_SOURCES = unictype/test-joininggroup_byname.c
test_joininggroup_byname_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-joininggroup_byname.c macros.h

## end   gnulib module unictype/joininggroup-byname-tests

## begin gnulib module unictype/joininggroup-name-tests

TESTS += test-joininggroup_name
check_PROGRAMS += test-joininggroup_name
test_joininggroup_name_SOURCES = unictype/test-joininggroup_name.c
test_joininggroup_name_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-joininggroup_name.c macros.h

## end   gnulib module unictype/joininggroup-name-tests

## begin gnulib module unictype/joininggroup-of-tests

TESTS += test-joininggroup_of
check_PROGRAMS += test-joininggroup_of
test_joininggroup_of_SOURCES = unictype/test-joininggroup_of.c
test_joininggroup_of_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-joininggroup_of.c unictype/test-joininggroup_of.h macros.h

## end   gnulib module unictype/joininggroup-of-tests

## begin gnulib module unictype/joiningtype-byname-tests

TESTS += test-joiningtype_byname
check_PROGRAMS += test-joiningtype_byname
test_joiningtype_byname_SOURCES = unictype/test-joiningtype_byname.c
test_joiningtype_byname_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-joiningtype_byname.c macros.h

## end   gnulib module unictype/joiningtype-byname-tests

## begin gnulib module unictype/joiningtype-longname-tests

TESTS += test-joiningtype_longname
check_PROGRAMS += test-joiningtype_longname
test_joiningtype_longname_SOURCES = unictype/test-joiningtype_longname.c
test_joiningtype_longname_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-joiningtype_longname.c macros.h

## end   gnulib module unictype/joiningtype-longname-tests

## begin gnulib module unictype/joiningtype-name-tests

TESTS += test-joiningtype_name
check_PROGRAMS += test-joiningtype_name
test_joiningtype_name_SOURCES = unictype/test-joiningtype_name.c
test_joiningtype_name_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-joiningtype_name.c macros.h

## end   gnulib module unictype/joiningtype-name-tests

## begin gnulib module unictype/joiningtype-of-tests

TESTS += test-joiningtype_of
check_PROGRAMS += test-joiningtype_of
test_joiningtype_of_SOURCES = unictype/test-joiningtype_of.c
test_joiningtype_of_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-joiningtype_of.c unictype/test-joiningtype_of.h macros.h

## end   gnulib module unictype/joiningtype-of-tests

## begin gnulib module unictype/mirror-tests

TESTS += test-mirror
check_PROGRAMS += test-mirror
test_mirror_SOURCES = unictype/test-mirror.c
test_mirror_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-mirror.c macros.h

## end   gnulib module unictype/mirror-tests

## begin gnulib module unictype/numeric-tests

TESTS += test-numeric
check_PROGRAMS += test-numeric
test_numeric_SOURCES = unictype/test-numeric.c
test_numeric_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-numeric.c unictype/test-numeric.h macros.h

## end   gnulib module unictype/numeric-tests

## begin gnulib module unictype/property-alphabetic-tests

TESTS += test-pr_alphabetic
check_PROGRAMS += test-pr_alphabetic
test_pr_alphabetic_SOURCES = unictype/test-pr_alphabetic.c
test_pr_alphabetic_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_alphabetic.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-alphabetic-tests

## begin gnulib module unictype/property-ascii-hex-digit-tests

TESTS += test-pr_ascii_hex_digit
check_PROGRAMS += test-pr_ascii_hex_digit
test_pr_ascii_hex_digit_SOURCES = unictype/test-pr_ascii_hex_digit.c
test_pr_ascii_hex_digit_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_ascii_hex_digit.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-ascii-hex-digit-tests

## begin gnulib module unictype/property-bidi-arabic-digit-tests

TESTS += test-pr_bidi_arabic_digit
check_PROGRAMS += test-pr_bidi_arabic_digit
test_pr_bidi_arabic_digit_SOURCES = unictype/test-pr_bidi_arabic_digit.c
test_pr_bidi_arabic_digit_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_bidi_arabic_digit.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-bidi-arabic-digit-tests

## begin gnulib module unictype/property-bidi-arabic-right-to-left-tests

TESTS += test-pr_bidi_arabic_right_to_left
check_PROGRAMS += test-pr_bidi_arabic_right_to_left
test_pr_bidi_arabic_right_to_left_SOURCES = unictype/test-pr_bidi_arabic_right_to_left.c
test_pr_bidi_arabic_right_to_left_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_bidi_arabic_right_to_left.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-bidi-arabic-right-to-left-tests

## begin gnulib module unictype/property-bidi-block-separator-tests

TESTS += test-pr_bidi_block_separator
check_PROGRAMS += test-pr_bidi_block_separator
test_pr_bidi_block_separator_SOURCES = unictype/test-pr_bidi_block_separator.c
test_pr_bidi_block_separator_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_bidi_block_separator.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-bidi-block-separator-tests

## begin gnulib module unictype/property-bidi-boundary-neutral-tests

TESTS += test-pr_bidi_boundary_neutral
check_PROGRAMS += test-pr_bidi_boundary_neutral
test_pr_bidi_boundary_neutral_SOURCES = unictype/test-pr_bidi_boundary_neutral.c
test_pr_bidi_boundary_neutral_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_bidi_boundary_neutral.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-bidi-boundary-neutral-tests

## begin gnulib module unictype/property-bidi-common-separator-tests

TESTS += test-pr_bidi_common_separator
check_PROGRAMS += test-pr_bidi_common_separator
test_pr_bidi_common_separator_SOURCES = unictype/test-pr_bidi_common_separator.c
test_pr_bidi_common_separator_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_bidi_common_separator.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-bidi-common-separator-tests

## begin gnulib module unictype/property-bidi-control-tests

TESTS += test-pr_bidi_control
check_PROGRAMS += test-pr_bidi_control
test_pr_bidi_control_SOURCES = unictype/test-pr_bidi_control.c
test_pr_bidi_control_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_bidi_control.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-bidi-control-tests

## begin gnulib module unictype/property-bidi-embedding-or-override-tests

TESTS += test-pr_bidi_embedding_or_override
check_PROGRAMS += test-pr_bidi_embedding_or_override
test_pr_bidi_embedding_or_override_SOURCES = unictype/test-pr_bidi_embedding_or_override.c
test_pr_bidi_embedding_or_override_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_bidi_embedding_or_override.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-bidi-embedding-or-override-tests

## begin gnulib module unictype/property-bidi-eur-num-separator-tests

TESTS += test-pr_bidi_eur_num_separator
check_PROGRAMS += test-pr_bidi_eur_num_separator
test_pr_bidi_eur_num_separator_SOURCES = unictype/test-pr_bidi_eur_num_separator.c
test_pr_bidi_eur_num_separator_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_bidi_eur_num_separator.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-bidi-eur-num-separator-tests

## begin gnulib module unictype/property-bidi-eur-num-terminator-tests

TESTS += test-pr_bidi_eur_num_terminator
check_PROGRAMS += test-pr_bidi_eur_num_terminator
test_pr_bidi_eur_num_terminator_SOURCES = unictype/test-pr_bidi_eur_num_terminator.c
test_pr_bidi_eur_num_terminator_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_bidi_eur_num_terminator.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-bidi-eur-num-terminator-tests

## begin gnulib module unictype/property-bidi-european-digit-tests

TESTS += test-pr_bidi_european_digit
check_PROGRAMS += test-pr_bidi_european_digit
test_pr_bidi_european_digit_SOURCES = unictype/test-pr_bidi_european_digit.c
test_pr_bidi_european_digit_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_bidi_european_digit.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-bidi-european-digit-tests

## begin gnulib module unictype/property-bidi-hebrew-right-to-left-tests

TESTS += test-pr_bidi_hebrew_right_to_left
check_PROGRAMS += test-pr_bidi_hebrew_right_to_left
test_pr_bidi_hebrew_right_to_left_SOURCES = unictype/test-pr_bidi_hebrew_right_to_left.c
test_pr_bidi_hebrew_right_to_left_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_bidi_hebrew_right_to_left.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-bidi-hebrew-right-to-left-tests

## begin gnulib module unictype/property-bidi-left-to-right-tests

TESTS += test-pr_bidi_left_to_right
check_PROGRAMS += test-pr_bidi_left_to_right
test_pr_bidi_left_to_right_SOURCES = unictype/test-pr_bidi_left_to_right.c
test_pr_bidi_left_to_right_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_bidi_left_to_right.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-bidi-left-to-right-tests

## begin gnulib module unictype/property-bidi-non-spacing-mark-tests

TESTS += test-pr_bidi_non_spacing_mark
check_PROGRAMS += test-pr_bidi_non_spacing_mark
test_pr_bidi_non_spacing_mark_SOURCES = unictype/test-pr_bidi_non_spacing_mark.c
test_pr_bidi_non_spacing_mark_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_bidi_non_spacing_mark.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-bidi-non-spacing-mark-tests

## begin gnulib module unictype/property-bidi-other-neutral-tests

TESTS += test-pr_bidi_other_neutral
check_PROGRAMS += test-pr_bidi_other_neutral
test_pr_bidi_other_neutral_SOURCES = unictype/test-pr_bidi_other_neutral.c
test_pr_bidi_other_neutral_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_bidi_other_neutral.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-bidi-other-neutral-tests

## begin gnulib module unictype/property-bidi-pdf-tests

TESTS += test-pr_bidi_pdf
check_PROGRAMS += test-pr_bidi_pdf
test_pr_bidi_pdf_SOURCES = unictype/test-pr_bidi_pdf.c
test_pr_bidi_pdf_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_bidi_pdf.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-bidi-pdf-tests

## begin gnulib module unictype/property-bidi-segment-separator-tests

TESTS += test-pr_bidi_segment_separator
check_PROGRAMS += test-pr_bidi_segment_separator
test_pr_bidi_segment_separator_SOURCES = unictype/test-pr_bidi_segment_separator.c
test_pr_bidi_segment_separator_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_bidi_segment_separator.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-bidi-segment-separator-tests

## begin gnulib module unictype/property-bidi-whitespace-tests

TESTS += test-pr_bidi_whitespace
check_PROGRAMS += test-pr_bidi_whitespace
test_pr_bidi_whitespace_SOURCES = unictype/test-pr_bidi_whitespace.c
test_pr_bidi_whitespace_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_bidi_whitespace.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-bidi-whitespace-tests

## begin gnulib module unictype/property-byname-tests

TESTS += test-pr_byname
check_PROGRAMS += test-pr_byname
test_pr_byname_SOURCES = unictype/test-pr_byname.c
test_pr_byname_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_byname.c macros.h

## end   gnulib module unictype/property-byname-tests

## begin gnulib module unictype/property-case-ignorable-tests

TESTS += test-pr_case_ignorable
check_PROGRAMS += test-pr_case_ignorable
test_pr_case_ignorable_SOURCES = unictype/test-pr_case_ignorable.c
test_pr_case_ignorable_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_case_ignorable.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-case-ignorable-tests

## begin gnulib module unictype/property-cased-tests

TESTS += test-pr_cased
check_PROGRAMS += test-pr_cased
test_pr_cased_SOURCES = unictype/test-pr_cased.c
test_pr_cased_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_cased.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-cased-tests

## begin gnulib module unictype/property-changes-when-casefolded-tests

TESTS += test-pr_changes_when_casefolded
check_PROGRAMS += test-pr_changes_when_casefolded
test_pr_changes_when_casefolded_SOURCES = unictype/test-pr_changes_when_casefolded.c
test_pr_changes_when_casefolded_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_changes_when_casefolded.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-changes-when-casefolded-tests

## begin gnulib module unictype/property-changes-when-casemapped-tests

TESTS += test-pr_changes_when_casemapped
check_PROGRAMS += test-pr_changes_when_casemapped
test_pr_changes_when_casemapped_SOURCES = unictype/test-pr_changes_when_casemapped.c
test_pr_changes_when_casemapped_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_changes_when_casemapped.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-changes-when-casemapped-tests

## begin gnulib module unictype/property-changes-when-lowercased-tests

TESTS += test-pr_changes_when_lowercased
check_PROGRAMS += test-pr_changes_when_lowercased
test_pr_changes_when_lowercased_SOURCES = unictype/test-pr_changes_when_lowercased.c
test_pr_changes_when_lowercased_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_changes_when_lowercased.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-changes-when-lowercased-tests

## begin gnulib module unictype/property-changes-when-titlecased-tests

TESTS += test-pr_changes_when_titlecased
check_PROGRAMS += test-pr_changes_when_titlecased
test_pr_changes_when_titlecased_SOURCES = unictype/test-pr_changes_when_titlecased.c
test_pr_changes_when_titlecased_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_changes_when_titlecased.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-changes-when-titlecased-tests

## begin gnulib module unictype/property-changes-when-uppercased-tests

TESTS += test-pr_changes_when_uppercased
check_PROGRAMS += test-pr_changes_when_uppercased
test_pr_changes_when_uppercased_SOURCES = unictype/test-pr_changes_when_uppercased.c
test_pr_changes_when_uppercased_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_changes_when_uppercased.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-changes-when-uppercased-tests

## begin gnulib module unictype/property-combining-tests

TESTS += test-pr_combining
check_PROGRAMS += test-pr_combining
test_pr_combining_SOURCES = unictype/test-pr_combining.c
test_pr_combining_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_combining.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-combining-tests

## begin gnulib module unictype/property-composite-tests

TESTS += test-pr_composite
check_PROGRAMS += test-pr_composite
test_pr_composite_SOURCES = unictype/test-pr_composite.c
test_pr_composite_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_composite.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-composite-tests

## begin gnulib module unictype/property-currency-symbol-tests

TESTS += test-pr_currency_symbol
check_PROGRAMS += test-pr_currency_symbol
test_pr_currency_symbol_SOURCES = unictype/test-pr_currency_symbol.c
test_pr_currency_symbol_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_currency_symbol.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-currency-symbol-tests

## begin gnulib module unictype/property-dash-tests

TESTS += test-pr_dash
check_PROGRAMS += test-pr_dash
test_pr_dash_SOURCES = unictype/test-pr_dash.c
test_pr_dash_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_dash.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-dash-tests

## begin gnulib module unictype/property-decimal-digit-tests

TESTS += test-pr_decimal_digit
check_PROGRAMS += test-pr_decimal_digit
test_pr_decimal_digit_SOURCES = unictype/test-pr_decimal_digit.c
test_pr_decimal_digit_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_decimal_digit.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-decimal-digit-tests

## begin gnulib module unictype/property-default-ignorable-code-point-tests

TESTS += test-pr_default_ignorable_code_point
check_PROGRAMS += test-pr_default_ignorable_code_point
test_pr_default_ignorable_code_point_SOURCES = unictype/test-pr_default_ignorable_code_point.c
test_pr_default_ignorable_code_point_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_default_ignorable_code_point.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-default-ignorable-code-point-tests

## begin gnulib module unictype/property-deprecated-tests

TESTS += test-pr_deprecated
check_PROGRAMS += test-pr_deprecated
test_pr_deprecated_SOURCES = unictype/test-pr_deprecated.c
test_pr_deprecated_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_deprecated.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-deprecated-tests

## begin gnulib module unictype/property-diacritic-tests

TESTS += test-pr_diacritic
check_PROGRAMS += test-pr_diacritic
test_pr_diacritic_SOURCES = unictype/test-pr_diacritic.c
test_pr_diacritic_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_diacritic.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-diacritic-tests

## begin gnulib module unictype/property-emoji-component-tests

TESTS += test-pr_emoji_component
check_PROGRAMS += test-pr_emoji_component
test_pr_emoji_component_SOURCES = unictype/test-pr_emoji_component.c
test_pr_emoji_component_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_emoji_component.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-emoji-component-tests

## begin gnulib module unictype/property-emoji-modifier-base-tests

TESTS += test-pr_emoji_modifier_base
check_PROGRAMS += test-pr_emoji_modifier_base
test_pr_emoji_modifier_base_SOURCES = unictype/test-pr_emoji_modifier_base.c
test_pr_emoji_modifier_base_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_emoji_modifier_base.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-emoji-modifier-base-tests

## begin gnulib module unictype/property-emoji-modifier-tests

TESTS += test-pr_emoji_modifier
check_PROGRAMS += test-pr_emoji_modifier
test_pr_emoji_modifier_SOURCES = unictype/test-pr_emoji_modifier.c
test_pr_emoji_modifier_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_emoji_modifier.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-emoji-modifier-tests

## begin gnulib module unictype/property-emoji-presentation-tests

TESTS += test-pr_emoji_presentation
check_PROGRAMS += test-pr_emoji_presentation
test_pr_emoji_presentation_SOURCES = unictype/test-pr_emoji_presentation.c
test_pr_emoji_presentation_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_emoji_presentation.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-emoji-presentation-tests

## begin gnulib module unictype/property-emoji-tests

TESTS += test-pr_emoji
check_PROGRAMS += test-pr_emoji
test_pr_emoji_SOURCES = unictype/test-pr_emoji.c
test_pr_emoji_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_emoji.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-emoji-tests

## begin gnulib module unictype/property-extended-pictographic-tests

TESTS += test-pr_extended_pictographic
check_PROGRAMS += test-pr_extended_pictographic
test_pr_extended_pictographic_SOURCES = unictype/test-pr_extended_pictographic.c
test_pr_extended_pictographic_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_extended_pictographic.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-extended-pictographic-tests

## begin gnulib module unictype/property-extender-tests

TESTS += test-pr_extender
check_PROGRAMS += test-pr_extender
test_pr_extender_SOURCES = unictype/test-pr_extender.c
test_pr_extender_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_extender.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-extender-tests

## begin gnulib module unictype/property-format-control-tests

TESTS += test-pr_format_control
check_PROGRAMS += test-pr_format_control
test_pr_format_control_SOURCES = unictype/test-pr_format_control.c
test_pr_format_control_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_format_control.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-format-control-tests

## begin gnulib module unictype/property-grapheme-base-tests

TESTS += test-pr_grapheme_base
check_PROGRAMS += test-pr_grapheme_base
test_pr_grapheme_base_SOURCES = unictype/test-pr_grapheme_base.c
test_pr_grapheme_base_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_grapheme_base.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-grapheme-base-tests

## begin gnulib module unictype/property-grapheme-extend-tests

TESTS += test-pr_grapheme_extend
check_PROGRAMS += test-pr_grapheme_extend
test_pr_grapheme_extend_SOURCES = unictype/test-pr_grapheme_extend.c
test_pr_grapheme_extend_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_grapheme_extend.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-grapheme-extend-tests

## begin gnulib module unictype/property-grapheme-link-tests

TESTS += test-pr_grapheme_link
check_PROGRAMS += test-pr_grapheme_link
test_pr_grapheme_link_SOURCES = unictype/test-pr_grapheme_link.c
test_pr_grapheme_link_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_grapheme_link.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-grapheme-link-tests

## begin gnulib module unictype/property-hex-digit-tests

TESTS += test-pr_hex_digit
check_PROGRAMS += test-pr_hex_digit
test_pr_hex_digit_SOURCES = unictype/test-pr_hex_digit.c
test_pr_hex_digit_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_hex_digit.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-hex-digit-tests

## begin gnulib module unictype/property-hyphen-tests

TESTS += test-pr_hyphen
check_PROGRAMS += test-pr_hyphen
test_pr_hyphen_SOURCES = unictype/test-pr_hyphen.c
test_pr_hyphen_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_hyphen.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-hyphen-tests

## begin gnulib module unictype/property-id-continue-tests

TESTS += test-pr_id_continue
check_PROGRAMS += test-pr_id_continue
test_pr_id_continue_SOURCES = unictype/test-pr_id_continue.c
test_pr_id_continue_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_id_continue.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-id-continue-tests

## begin gnulib module unictype/property-id-start-tests

TESTS += test-pr_id_start
check_PROGRAMS += test-pr_id_start
test_pr_id_start_SOURCES = unictype/test-pr_id_start.c
test_pr_id_start_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_id_start.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-id-start-tests

## begin gnulib module unictype/property-ideographic-tests

TESTS += test-pr_ideographic
check_PROGRAMS += test-pr_ideographic
test_pr_ideographic_SOURCES = unictype/test-pr_ideographic.c
test_pr_ideographic_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_ideographic.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-ideographic-tests

## begin gnulib module unictype/property-ids-binary-operator-tests

TESTS += test-pr_ids_binary_operator
check_PROGRAMS += test-pr_ids_binary_operator
test_pr_ids_binary_operator_SOURCES = unictype/test-pr_ids_binary_operator.c
test_pr_ids_binary_operator_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_ids_binary_operator.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-ids-binary-operator-tests

## begin gnulib module unictype/property-ids-trinary-operator-tests

TESTS += test-pr_ids_trinary_operator
check_PROGRAMS += test-pr_ids_trinary_operator
test_pr_ids_trinary_operator_SOURCES = unictype/test-pr_ids_trinary_operator.c
test_pr_ids_trinary_operator_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_ids_trinary_operator.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-ids-trinary-operator-tests

## begin gnulib module unictype/property-ignorable-control-tests

TESTS += test-pr_ignorable_control
check_PROGRAMS += test-pr_ignorable_control
test_pr_ignorable_control_SOURCES = unictype/test-pr_ignorable_control.c
test_pr_ignorable_control_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_ignorable_control.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-ignorable-control-tests

## begin gnulib module unictype/property-iso-control-tests

TESTS += test-pr_iso_control
check_PROGRAMS += test-pr_iso_control
test_pr_iso_control_SOURCES = unictype/test-pr_iso_control.c
test_pr_iso_control_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_iso_control.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-iso-control-tests

## begin gnulib module unictype/property-join-control-tests

TESTS += test-pr_join_control
check_PROGRAMS += test-pr_join_control
test_pr_join_control_SOURCES = unictype/test-pr_join_control.c
test_pr_join_control_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_join_control.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-join-control-tests

## begin gnulib module unictype/property-left-of-pair-tests

TESTS += test-pr_left_of_pair
check_PROGRAMS += test-pr_left_of_pair
test_pr_left_of_pair_SOURCES = unictype/test-pr_left_of_pair.c
test_pr_left_of_pair_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_left_of_pair.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-left-of-pair-tests

## begin gnulib module unictype/property-line-separator-tests

TESTS += test-pr_line_separator
check_PROGRAMS += test-pr_line_separator
test_pr_line_separator_SOURCES = unictype/test-pr_line_separator.c
test_pr_line_separator_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_line_separator.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-line-separator-tests

## begin gnulib module unictype/property-logical-order-exception-tests

TESTS += test-pr_logical_order_exception
check_PROGRAMS += test-pr_logical_order_exception
test_pr_logical_order_exception_SOURCES = unictype/test-pr_logical_order_exception.c
test_pr_logical_order_exception_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_logical_order_exception.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-logical-order-exception-tests

## begin gnulib module unictype/property-lowercase-tests

TESTS += test-pr_lowercase
check_PROGRAMS += test-pr_lowercase
test_pr_lowercase_SOURCES = unictype/test-pr_lowercase.c
test_pr_lowercase_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_lowercase.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-lowercase-tests

## begin gnulib module unictype/property-math-tests

TESTS += test-pr_math
check_PROGRAMS += test-pr_math
test_pr_math_SOURCES = unictype/test-pr_math.c
test_pr_math_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_math.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-math-tests

## begin gnulib module unictype/property-non-break-tests

TESTS += test-pr_non_break
check_PROGRAMS += test-pr_non_break
test_pr_non_break_SOURCES = unictype/test-pr_non_break.c
test_pr_non_break_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_non_break.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-non-break-tests

## begin gnulib module unictype/property-not-a-character-tests

TESTS += test-pr_not_a_character
check_PROGRAMS += test-pr_not_a_character
test_pr_not_a_character_SOURCES = unictype/test-pr_not_a_character.c
test_pr_not_a_character_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_not_a_character.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-not-a-character-tests

## begin gnulib module unictype/property-numeric-tests

TESTS += test-pr_numeric
check_PROGRAMS += test-pr_numeric
test_pr_numeric_SOURCES = unictype/test-pr_numeric.c
test_pr_numeric_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_numeric.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-numeric-tests

## begin gnulib module unictype/property-other-alphabetic-tests

TESTS += test-pr_other_alphabetic
check_PROGRAMS += test-pr_other_alphabetic
test_pr_other_alphabetic_SOURCES = unictype/test-pr_other_alphabetic.c
test_pr_other_alphabetic_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_other_alphabetic.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-other-alphabetic-tests

## begin gnulib module unictype/property-other-default-ignorable-code-point-tests

TESTS += test-pr_other_default_ignorable_code_point
check_PROGRAMS += test-pr_other_default_ignorable_code_point
test_pr_other_default_ignorable_code_point_SOURCES = unictype/test-pr_other_default_ignorable_code_point.c
test_pr_other_default_ignorable_code_point_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_other_default_ignorable_code_point.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-other-default-ignorable-code-point-tests

## begin gnulib module unictype/property-other-grapheme-extend-tests

TESTS += test-pr_other_grapheme_extend
check_PROGRAMS += test-pr_other_grapheme_extend
test_pr_other_grapheme_extend_SOURCES = unictype/test-pr_other_grapheme_extend.c
test_pr_other_grapheme_extend_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_other_grapheme_extend.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-other-grapheme-extend-tests

## begin gnulib module unictype/property-other-id-continue-tests

TESTS += test-pr_other_id_continue
check_PROGRAMS += test-pr_other_id_continue
test_pr_other_id_continue_SOURCES = unictype/test-pr_other_id_continue.c
test_pr_other_id_continue_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_other_id_continue.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-other-id-continue-tests

## begin gnulib module unictype/property-other-id-start-tests

TESTS += test-pr_other_id_start
check_PROGRAMS += test-pr_other_id_start
test_pr_other_id_start_SOURCES = unictype/test-pr_other_id_start.c
test_pr_other_id_start_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_other_id_start.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-other-id-start-tests

## begin gnulib module unictype/property-other-lowercase-tests

TESTS += test-pr_other_lowercase
check_PROGRAMS += test-pr_other_lowercase
test_pr_other_lowercase_SOURCES = unictype/test-pr_other_lowercase.c
test_pr_other_lowercase_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_other_lowercase.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-other-lowercase-tests

## begin gnulib module unictype/property-other-math-tests

TESTS += test-pr_other_math
check_PROGRAMS += test-pr_other_math
test_pr_other_math_SOURCES = unictype/test-pr_other_math.c
test_pr_other_math_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_other_math.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-other-math-tests

## begin gnulib module unictype/property-other-uppercase-tests

TESTS += test-pr_other_uppercase
check_PROGRAMS += test-pr_other_uppercase
test_pr_other_uppercase_SOURCES = unictype/test-pr_other_uppercase.c
test_pr_other_uppercase_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_other_uppercase.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-other-uppercase-tests

## begin gnulib module unictype/property-paired-punctuation-tests

TESTS += test-pr_paired_punctuation
check_PROGRAMS += test-pr_paired_punctuation
test_pr_paired_punctuation_SOURCES = unictype/test-pr_paired_punctuation.c
test_pr_paired_punctuation_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_paired_punctuation.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-paired-punctuation-tests

## begin gnulib module unictype/property-paragraph-separator-tests

TESTS += test-pr_paragraph_separator
check_PROGRAMS += test-pr_paragraph_separator
test_pr_paragraph_separator_SOURCES = unictype/test-pr_paragraph_separator.c
test_pr_paragraph_separator_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_paragraph_separator.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-paragraph-separator-tests

## begin gnulib module unictype/property-pattern-syntax-tests

TESTS += test-pr_pattern_syntax
check_PROGRAMS += test-pr_pattern_syntax
test_pr_pattern_syntax_SOURCES = unictype/test-pr_pattern_syntax.c
test_pr_pattern_syntax_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_pattern_syntax.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-pattern-syntax-tests

## begin gnulib module unictype/property-pattern-white-space-tests

TESTS += test-pr_pattern_white_space
check_PROGRAMS += test-pr_pattern_white_space
test_pr_pattern_white_space_SOURCES = unictype/test-pr_pattern_white_space.c
test_pr_pattern_white_space_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_pattern_white_space.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-pattern-white-space-tests

## begin gnulib module unictype/property-private-use-tests

TESTS += test-pr_private_use
check_PROGRAMS += test-pr_private_use
test_pr_private_use_SOURCES = unictype/test-pr_private_use.c
test_pr_private_use_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_private_use.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-private-use-tests

## begin gnulib module unictype/property-punctuation-tests

TESTS += test-pr_punctuation
check_PROGRAMS += test-pr_punctuation
test_pr_punctuation_SOURCES = unictype/test-pr_punctuation.c
test_pr_punctuation_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_punctuation.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-punctuation-tests

## begin gnulib module unictype/property-quotation-mark-tests

TESTS += test-pr_quotation_mark
check_PROGRAMS += test-pr_quotation_mark
test_pr_quotation_mark_SOURCES = unictype/test-pr_quotation_mark.c
test_pr_quotation_mark_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_quotation_mark.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-quotation-mark-tests

## begin gnulib module unictype/property-radical-tests

TESTS += test-pr_radical
check_PROGRAMS += test-pr_radical
test_pr_radical_SOURCES = unictype/test-pr_radical.c
test_pr_radical_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_radical.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-radical-tests

## begin gnulib module unictype/property-regional-indicator-tests

TESTS += test-pr_regional_indicator
check_PROGRAMS += test-pr_regional_indicator
test_pr_regional_indicator_SOURCES = unictype/test-pr_regional_indicator.c
test_pr_regional_indicator_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_regional_indicator.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-regional-indicator-tests

## begin gnulib module unictype/property-sentence-terminal-tests

TESTS += test-pr_sentence_terminal
check_PROGRAMS += test-pr_sentence_terminal
test_pr_sentence_terminal_SOURCES = unictype/test-pr_sentence_terminal.c
test_pr_sentence_terminal_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_sentence_terminal.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-sentence-terminal-tests

## begin gnulib module unictype/property-soft-dotted-tests

TESTS += test-pr_soft_dotted
check_PROGRAMS += test-pr_soft_dotted
test_pr_soft_dotted_SOURCES = unictype/test-pr_soft_dotted.c
test_pr_soft_dotted_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_soft_dotted.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-soft-dotted-tests

## begin gnulib module unictype/property-space-tests

TESTS += test-pr_space
check_PROGRAMS += test-pr_space
test_pr_space_SOURCES = unictype/test-pr_space.c
test_pr_space_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_space.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-space-tests

## begin gnulib module unictype/property-terminal-punctuation-tests

TESTS += test-pr_terminal_punctuation
check_PROGRAMS += test-pr_terminal_punctuation
test_pr_terminal_punctuation_SOURCES = unictype/test-pr_terminal_punctuation.c
test_pr_terminal_punctuation_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_terminal_punctuation.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-terminal-punctuation-tests

## begin gnulib module unictype/property-test-tests

TESTS += test-pr_test
check_PROGRAMS += test-pr_test
test_pr_test_SOURCES = unictype/test-pr_test.c
test_pr_test_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_test.c macros.h

## end   gnulib module unictype/property-test-tests

## begin gnulib module unictype/property-titlecase-tests

TESTS += test-pr_titlecase
check_PROGRAMS += test-pr_titlecase
test_pr_titlecase_SOURCES = unictype/test-pr_titlecase.c
test_pr_titlecase_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_titlecase.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-titlecase-tests

## begin gnulib module unictype/property-unassigned-code-value-tests

TESTS += test-pr_unassigned_code_value
check_PROGRAMS += test-pr_unassigned_code_value
test_pr_unassigned_code_value_SOURCES = unictype/test-pr_unassigned_code_value.c
test_pr_unassigned_code_value_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_unassigned_code_value.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-unassigned-code-value-tests

## begin gnulib module unictype/property-unified-ideograph-tests

TESTS += test-pr_unified_ideograph
check_PROGRAMS += test-pr_unified_ideograph
test_pr_unified_ideograph_SOURCES = unictype/test-pr_unified_ideograph.c
test_pr_unified_ideograph_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_unified_ideograph.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-unified-ideograph-tests

## begin gnulib module unictype/property-uppercase-tests

TESTS += test-pr_uppercase
check_PROGRAMS += test-pr_uppercase
test_pr_uppercase_SOURCES = unictype/test-pr_uppercase.c
test_pr_uppercase_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_uppercase.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-uppercase-tests

## begin gnulib module unictype/property-variation-selector-tests

TESTS += test-pr_variation_selector
check_PROGRAMS += test-pr_variation_selector
test_pr_variation_selector_SOURCES = unictype/test-pr_variation_selector.c
test_pr_variation_selector_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_variation_selector.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-variation-selector-tests

## begin gnulib module unictype/property-white-space-tests

TESTS += test-pr_white_space
check_PROGRAMS += test-pr_white_space
test_pr_white_space_SOURCES = unictype/test-pr_white_space.c
test_pr_white_space_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_white_space.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-white-space-tests

## begin gnulib module unictype/property-xid-continue-tests

TESTS += test-pr_xid_continue
check_PROGRAMS += test-pr_xid_continue
test_pr_xid_continue_SOURCES = unictype/test-pr_xid_continue.c
test_pr_xid_continue_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_xid_continue.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-xid-continue-tests

## begin gnulib module unictype/property-xid-start-tests

TESTS += test-pr_xid_start
check_PROGRAMS += test-pr_xid_start
test_pr_xid_start_SOURCES = unictype/test-pr_xid_start.c
test_pr_xid_start_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_xid_start.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-xid-start-tests

## begin gnulib module unictype/property-zero-width-tests

TESTS += test-pr_zero_width
check_PROGRAMS += test-pr_zero_width
test_pr_zero_width_SOURCES = unictype/test-pr_zero_width.c
test_pr_zero_width_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-pr_zero_width.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/property-zero-width-tests

## begin gnulib module unictype/scripts-tests

TESTS += test-scripts
check_PROGRAMS += test-scripts
test_scripts_SOURCES = unictype/test-scripts.c
test_scripts_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-scripts.c macros.h

## end   gnulib module unictype/scripts-tests

## begin gnulib module unictype/syntax-c-ident-tests

TESTS += test-sy_c_ident
check_PROGRAMS += test-sy_c_ident
test_sy_c_ident_SOURCES = unictype/test-sy_c_ident.c
test_sy_c_ident_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-sy_c_ident.c macros.h

## end   gnulib module unictype/syntax-c-ident-tests

## begin gnulib module unictype/syntax-c-whitespace-tests

TESTS += test-sy_c_whitespace
check_PROGRAMS += test-sy_c_whitespace
test_sy_c_whitespace_SOURCES = unictype/test-sy_c_whitespace.c
test_sy_c_whitespace_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-sy_c_whitespace.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/syntax-c-whitespace-tests

## begin gnulib module unictype/syntax-java-ident-tests

TESTS += test-sy_java_ident
check_PROGRAMS += test-sy_java_ident
test_sy_java_ident_SOURCES = unictype/test-sy_java_ident.c
test_sy_java_ident_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-sy_java_ident.c macros.h

## end   gnulib module unictype/syntax-java-ident-tests

## begin gnulib module unictype/syntax-java-whitespace-tests

TESTS += test-sy_java_whitespace
check_PROGRAMS += test-sy_java_whitespace
test_sy_java_whitespace_SOURCES = unictype/test-sy_java_whitespace.c
test_sy_java_whitespace_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unictype/test-sy_java_whitespace.c unictype/test-predicate-part1.h unictype/test-predicate-part2.h macros.h

## end   gnulib module unictype/syntax-java-whitespace-tests

## begin gnulib module unigbrk/u16-grapheme-breaks-tests

TESTS += test-u16-grapheme-breaks
check_PROGRAMS += test-u16-grapheme-breaks
test_u16_grapheme_breaks_SOURCES = unigbrk/test-u16-grapheme-breaks.c
test_u16_grapheme_breaks_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unigbrk/test-u16-grapheme-breaks.c

## end   gnulib module unigbrk/u16-grapheme-breaks-tests

## begin gnulib module unigbrk/u16-grapheme-next-tests

TESTS += test-u16-grapheme-next
check_PROGRAMS += test-u16-grapheme-next
test_u16_grapheme_next_SOURCES = unigbrk/test-u16-grapheme-next.c
test_u16_grapheme_next_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unigbrk/test-u16-grapheme-next.c

## end   gnulib module unigbrk/u16-grapheme-next-tests

## begin gnulib module unigbrk/u16-grapheme-prev-tests

TESTS += test-u16-grapheme-prev
check_PROGRAMS += test-u16-grapheme-prev
test_u16_grapheme_prev_SOURCES = unigbrk/test-u16-grapheme-prev.c
test_u16_grapheme_prev_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unigbrk/test-u16-grapheme-prev.c

## end   gnulib module unigbrk/u16-grapheme-prev-tests

## begin gnulib module unigbrk/u32-grapheme-breaks-tests

TESTS += test-u32-grapheme-breaks
check_PROGRAMS += test-u32-grapheme-breaks
test_u32_grapheme_breaks_SOURCES = unigbrk/test-u32-grapheme-breaks.c
test_u32_grapheme_breaks_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unigbrk/test-u32-grapheme-breaks.c

## end   gnulib module unigbrk/u32-grapheme-breaks-tests

## begin gnulib module unigbrk/u32-grapheme-next-tests

TESTS += test-u32-grapheme-next
check_PROGRAMS += test-u32-grapheme-next
test_u32_grapheme_next_SOURCES = unigbrk/test-u32-grapheme-next.c
test_u32_grapheme_next_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unigbrk/test-u32-grapheme-next.c

## end   gnulib module unigbrk/u32-grapheme-next-tests

## begin gnulib module unigbrk/u32-grapheme-prev-tests

TESTS += test-u32-grapheme-prev
check_PROGRAMS += test-u32-grapheme-prev
test_u32_grapheme_prev_SOURCES = unigbrk/test-u32-grapheme-prev.c
test_u32_grapheme_prev_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unigbrk/test-u32-grapheme-prev.c

## end   gnulib module unigbrk/u32-grapheme-prev-tests

## begin gnulib module unigbrk/u8-grapheme-breaks-tests

TESTS += test-u8-grapheme-breaks
check_PROGRAMS += test-u8-grapheme-breaks
test_u8_grapheme_breaks_SOURCES = unigbrk/test-u8-grapheme-breaks.c
test_u8_grapheme_breaks_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unigbrk/test-u8-grapheme-breaks.c

## end   gnulib module unigbrk/u8-grapheme-breaks-tests

## begin gnulib module unigbrk/u8-grapheme-next-tests

TESTS += test-u8-grapheme-next
check_PROGRAMS += test-u8-grapheme-next
test_u8_grapheme_next_SOURCES = unigbrk/test-u8-grapheme-next.c
test_u8_grapheme_next_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unigbrk/test-u8-grapheme-next.c

## end   gnulib module unigbrk/u8-grapheme-next-tests

## begin gnulib module unigbrk/u8-grapheme-prev-tests

TESTS += test-u8-grapheme-prev
check_PROGRAMS += test-u8-grapheme-prev
test_u8_grapheme_prev_SOURCES = unigbrk/test-u8-grapheme-prev.c
test_u8_grapheme_prev_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unigbrk/test-u8-grapheme-prev.c

## end   gnulib module unigbrk/u8-grapheme-prev-tests

## begin gnulib module unigbrk/uc-gbrk-prop-tests

TESTS += test-uc-gbrk-prop
check_PROGRAMS += test-uc-gbrk-prop
test_uc_gbrk_prop_SOURCES = unigbrk/test-uc-gbrk-prop.c
test_uc_gbrk_prop_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unigbrk/test-uc-gbrk-prop.c unigbrk/test-uc-gbrk-prop.h macros.h

## end   gnulib module unigbrk/uc-gbrk-prop-tests

## begin gnulib module unigbrk/uc-grapheme-breaks-tests

TESTS += unigbrk/test-uc-grapheme-breaks.sh
check_PROGRAMS += test-uc-grapheme-breaks
test_uc_grapheme_breaks_SOURCES = unigbrk/test-uc-grapheme-breaks.c
test_uc_grapheme_breaks_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unigbrk/test-uc-grapheme-breaks.c unigbrk/test-uc-grapheme-breaks.sh unigbrk/GraphemeBreakTest.txt

## end   gnulib module unigbrk/uc-grapheme-breaks-tests

## begin gnulib module unigbrk/uc-is-grapheme-break-tests

TESTS += unigbrk/test-uc-is-grapheme-break.sh
check_PROGRAMS += test-uc-is-grapheme-break
test_uc_is_grapheme_break_SOURCES = unigbrk/test-uc-is-grapheme-break.c
test_uc_is_grapheme_break_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unigbrk/test-uc-is-grapheme-break.c unigbrk/test-uc-is-grapheme-break.sh unigbrk/GraphemeBreakTest.txt

## end   gnulib module unigbrk/uc-is-grapheme-break-tests

## begin gnulib module unigbrk/ulc-grapheme-breaks-tests

TESTS += unigbrk/test-ulc-grapheme-breaks.sh
TESTS_ENVIRONMENT += LOCALE_AR='@LOCALE_AR@'
check_PROGRAMS += test-ulc-grapheme-breaks
test_ulc_grapheme_breaks_SOURCES = unigbrk/test-ulc-grapheme-breaks.c
test_ulc_grapheme_breaks_LDADD = $(LDADD) $(LIB_SETLOCALE) $(LIBUNISTRING) @LIBICONV@
EXTRA_DIST += unigbrk/test-ulc-grapheme-breaks.sh unigbrk/test-ulc-grapheme-breaks.c macros.h

## end   gnulib module unigbrk/ulc-grapheme-breaks-tests

## begin gnulib module unilbrk/u16-possible-linebreaks-tests

TESTS += test-u16-possible-linebreaks
check_PROGRAMS += test-u16-possible-linebreaks
test_u16_possible_linebreaks_SOURCES = unilbrk/test-u16-possible-linebreaks.c
test_u16_possible_linebreaks_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unilbrk/test-u16-possible-linebreaks.c macros.h

## end   gnulib module unilbrk/u16-possible-linebreaks-tests

## begin gnulib module unilbrk/u16-width-linebreaks-tests

TESTS += test-u16-width-linebreaks
check_PROGRAMS += test-u16-width-linebreaks
test_u16_width_linebreaks_SOURCES = unilbrk/test-u16-width-linebreaks.c
test_u16_width_linebreaks_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unilbrk/test-u16-width-linebreaks.c macros.h

## end   gnulib module unilbrk/u16-width-linebreaks-tests

## begin gnulib module unilbrk/u32-possible-linebreaks-tests

TESTS += test-u32-possible-linebreaks
check_PROGRAMS += test-u32-possible-linebreaks
test_u32_possible_linebreaks_SOURCES = unilbrk/test-u32-possible-linebreaks.c
test_u32_possible_linebreaks_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unilbrk/test-u32-possible-linebreaks.c macros.h

## end   gnulib module unilbrk/u32-possible-linebreaks-tests

## begin gnulib module unilbrk/u32-width-linebreaks-tests

TESTS += test-u32-width-linebreaks
check_PROGRAMS += test-u32-width-linebreaks
test_u32_width_linebreaks_SOURCES = unilbrk/test-u32-width-linebreaks.c
test_u32_width_linebreaks_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unilbrk/test-u32-width-linebreaks.c macros.h

## end   gnulib module unilbrk/u32-width-linebreaks-tests

## begin gnulib module unilbrk/u8-possible-linebreaks-tests

TESTS += test-u8-possible-linebreaks
check_PROGRAMS += test-u8-possible-linebreaks
test_u8_possible_linebreaks_SOURCES = unilbrk/test-u8-possible-linebreaks.c
test_u8_possible_linebreaks_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unilbrk/test-u8-possible-linebreaks.c macros.h

## end   gnulib module unilbrk/u8-possible-linebreaks-tests

## begin gnulib module unilbrk/u8-width-linebreaks-tests

TESTS += test-u8-width-linebreaks
check_PROGRAMS += test-u8-width-linebreaks
test_u8_width_linebreaks_SOURCES = unilbrk/test-u8-width-linebreaks.c
test_u8_width_linebreaks_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unilbrk/test-u8-width-linebreaks.c macros.h

## end   gnulib module unilbrk/u8-width-linebreaks-tests

## begin gnulib module unilbrk/ulc-possible-linebreaks-tests

TESTS += test-ulc-possible-linebreaks
check_PROGRAMS += test-ulc-possible-linebreaks
test_ulc_possible_linebreaks_SOURCES = unilbrk/test-ulc-possible-linebreaks.c
test_ulc_possible_linebreaks_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@

EXTRA_DIST += unilbrk/test-ulc-possible-linebreaks.c macros.h

## end   gnulib module unilbrk/ulc-possible-linebreaks-tests

## begin gnulib module unilbrk/ulc-width-linebreaks-tests

TESTS += test-ulc-width-linebreaks
check_PROGRAMS += test-ulc-width-linebreaks
test_ulc_width_linebreaks_SOURCES = unilbrk/test-ulc-width-linebreaks.c
test_ulc_width_linebreaks_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@

EXTRA_DIST += unilbrk/test-ulc-width-linebreaks.c macros.h

## end   gnulib module unilbrk/ulc-width-linebreaks-tests

## begin gnulib module uniname/uniname-tests

# Unlike other libunistring modules, this test passes only when the
# same version of uniname/uniname.c is used (even if it is newer).
if LIBUNISTRING_COMPILE_UNINAME_UNINAME
TESTS += uniname/test-uninames.sh
check_PROGRAMS += test-uninames
test_uninames_SOURCES = uniname/test-uninames.c
test_uninames_LDADD = $(LDADD) @LIBINTL@
endif

EXTRA_DIST += uniname/test-uninames.sh uniname/test-uninames.c uniname/UnicodeData.txt uniname/HangulSyllableNames.txt uniname/NameAliases.txt

## end   gnulib module uniname/uniname-tests

## begin gnulib module uninorm/canonical-decomposition-tests

TESTS += test-canonical-decomposition
check_PROGRAMS += test-canonical-decomposition
test_canonical_decomposition_SOURCES = uninorm/test-canonical-decomposition.c
test_canonical_decomposition_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += uninorm/test-canonical-decomposition.c macros.h

## end   gnulib module uninorm/canonical-decomposition-tests

## begin gnulib module uninorm/compat-decomposition-tests

TESTS += test-compat-decomposition
check_PROGRAMS += test-compat-decomposition
test_compat_decomposition_SOURCES = uninorm/test-compat-decomposition.c
test_compat_decomposition_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += uninorm/test-compat-decomposition.c macros.h

## end   gnulib module uninorm/compat-decomposition-tests

## begin gnulib module uninorm/composition-tests

TESTS += test-composition
check_PROGRAMS += test-composition
test_composition_SOURCES = uninorm/test-composition.c
test_composition_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += uninorm/test-composition.c macros.h

## end   gnulib module uninorm/composition-tests

## begin gnulib module uninorm/decomposing-form-tests

TESTS += test-decomposing-form
check_PROGRAMS += test-decomposing-form
test_decomposing_form_SOURCES = uninorm/test-decomposing-form.c
test_decomposing_form_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += uninorm/test-decomposing-form.c macros.h

## end   gnulib module uninorm/decomposing-form-tests

## begin gnulib module uninorm/decomposition-tests

TESTS += test-decomposition
check_PROGRAMS += test-decomposition
test_decomposition_SOURCES = uninorm/test-decomposition.c
test_decomposition_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += uninorm/test-decomposition.c macros.h

## end   gnulib module uninorm/decomposition-tests

## begin gnulib module uninorm/filter-tests

TESTS += test-uninorm-filter-nfc
check_PROGRAMS += test-uninorm-filter-nfc
test_uninorm_filter_nfc_SOURCES = uninorm/test-uninorm-filter-nfc.c
test_uninorm_filter_nfc_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += uninorm/test-uninorm-filter-nfc.c macros.h

## end   gnulib module uninorm/filter-tests

## begin gnulib module uninorm/nfc-tests

TESTS += test-nfc uninorm/test-u32-nfc-big.sh
check_PROGRAMS += test-nfc test-u32-nfc-big
test_nfc_SOURCES = \
  uninorm/test-nfc.c \
  uninorm/test-u8-nfc.c \
  uninorm/test-u16-nfc.c \
  uninorm/test-u32-nfc.c
test_nfc_LDADD = $(LDADD) $(LIBUNISTRING)
test_u32_nfc_big_SOURCES = \
  uninorm/test-u32-nfc-big.c \
  uninorm/test-u32-normalize-big.c
test_u32_nfc_big_LDADD = $(LDADD) $(LIBUNISTRING) @LIBINTL@
EXTRA_DIST += uninorm/test-nfc.c uninorm/test-u8-nfc.c uninorm/test-u16-nfc.c uninorm/test-u32-nfc.c uninorm/test-u32-nfc-big.sh uninorm/test-u32-nfc-big.c uninorm/test-u32-normalize-big.h uninorm/test-u32-normalize-big.c uninorm/NormalizationTest.txt macros.h

## end   gnulib module uninorm/nfc-tests

## begin gnulib module uninorm/nfd-tests

TESTS += test-nfd uninorm/test-u32-nfd-big.sh
check_PROGRAMS += test-nfd test-u32-nfd-big
test_nfd_SOURCES = \
  uninorm/test-nfd.c \
  uninorm/test-u8-nfd.c \
  uninorm/test-u16-nfd.c \
  uninorm/test-u32-nfd.c
test_nfd_LDADD = $(LDADD) $(LIBUNISTRING)
test_u32_nfd_big_SOURCES = \
  uninorm/test-u32-nfd-big.c \
  uninorm/test-u32-normalize-big.c
test_u32_nfd_big_LDADD = $(LDADD) $(LIBUNISTRING) @LIBINTL@

EXTRA_DIST += uninorm/test-nfd.c uninorm/test-u8-nfd.c uninorm/test-u16-nfd.c uninorm/test-u32-nfd.c uninorm/test-u32-nfd-big.sh uninorm/test-u32-nfd-big.c uninorm/test-u32-normalize-big.h uninorm/test-u32-normalize-big.c uninorm/NormalizationTest.txt macros.h

## end   gnulib module uninorm/nfd-tests

## begin gnulib module uninorm/nfkc-tests

TESTS += test-nfkc uninorm/test-u32-nfkc-big.sh
check_PROGRAMS += test-nfkc test-u32-nfkc-big
test_nfkc_SOURCES = \
  uninorm/test-nfkc.c \
  uninorm/test-u8-nfkc.c \
  uninorm/test-u16-nfkc.c \
  uninorm/test-u32-nfkc.c
test_nfkc_LDADD = $(LDADD) $(LIBUNISTRING)
test_u32_nfkc_big_SOURCES = \
  uninorm/test-u32-nfkc-big.c \
  uninorm/test-u32-normalize-big.c
test_u32_nfkc_big_LDADD = $(LDADD) $(LIBUNISTRING) @LIBINTL@

EXTRA_DIST += uninorm/test-nfkc.c uninorm/test-u8-nfkc.c uninorm/test-u16-nfkc.c uninorm/test-u32-nfkc.c uninorm/test-u32-nfkc-big.sh uninorm/test-u32-nfkc-big.c uninorm/test-u32-normalize-big.h uninorm/test-u32-normalize-big.c uninorm/NormalizationTest.txt macros.h

## end   gnulib module uninorm/nfkc-tests

## begin gnulib module uninorm/nfkd-tests

TESTS += test-nfkd uninorm/test-u32-nfkd-big.sh
check_PROGRAMS += test-nfkd test-u32-nfkd-big
test_nfkd_SOURCES = \
  uninorm/test-nfkd.c \
  uninorm/test-u8-nfkd.c \
  uninorm/test-u16-nfkd.c \
  uninorm/test-u32-nfkd.c
test_nfkd_LDADD = $(LDADD) $(LIBUNISTRING)
test_u32_nfkd_big_SOURCES = \
  uninorm/test-u32-nfkd-big.c \
  uninorm/test-u32-normalize-big.c
test_u32_nfkd_big_LDADD = $(LDADD) $(LIBUNISTRING) @LIBINTL@

EXTRA_DIST += uninorm/test-nfkd.c uninorm/test-u8-nfkd.c uninorm/test-u16-nfkd.c uninorm/test-u32-nfkd.c uninorm/test-u32-nfkd-big.sh uninorm/test-u32-nfkd-big.c uninorm/test-u32-normalize-big.h uninorm/test-u32-normalize-big.c uninorm/NormalizationTest.txt macros.h

## end   gnulib module uninorm/nfkd-tests

## begin gnulib module uninorm/u16-normcmp-tests

TESTS += test-u16-normcmp
check_PROGRAMS += test-u16-normcmp
test_u16_normcmp_SOURCES = uninorm/test-u16-normcmp.c
test_u16_normcmp_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += uninorm/test-u16-normcmp.c uninorm/test-u16-normcmp.h macros.h

## end   gnulib module uninorm/u16-normcmp-tests

## begin gnulib module uninorm/u16-normcoll-tests

TESTS += test-u16-normcoll
check_PROGRAMS += test-u16-normcoll
test_u16_normcoll_SOURCES = uninorm/test-u16-normcoll.c
test_u16_normcoll_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@

EXTRA_DIST += uninorm/test-u16-normcoll.c uninorm/test-u16-normcmp.h macros.h

## end   gnulib module uninorm/u16-normcoll-tests

## begin gnulib module uninorm/u32-normcmp-tests

TESTS += test-u32-normcmp
check_PROGRAMS += test-u32-normcmp
test_u32_normcmp_SOURCES = uninorm/test-u32-normcmp.c
test_u32_normcmp_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += uninorm/test-u32-normcmp.c uninorm/test-u32-normcmp.h macros.h

## end   gnulib module uninorm/u32-normcmp-tests

## begin gnulib module uninorm/u32-normcoll-tests

TESTS += test-u32-normcoll
check_PROGRAMS += test-u32-normcoll
test_u32_normcoll_SOURCES = uninorm/test-u32-normcoll.c
test_u32_normcoll_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@

EXTRA_DIST += uninorm/test-u32-normcoll.c uninorm/test-u32-normcmp.h macros.h

## end   gnulib module uninorm/u32-normcoll-tests

## begin gnulib module uninorm/u8-normcmp-tests

TESTS += test-u8-normcmp
check_PROGRAMS += test-u8-normcmp
test_u8_normcmp_SOURCES = uninorm/test-u8-normcmp.c
test_u8_normcmp_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += uninorm/test-u8-normcmp.c uninorm/test-u8-normcmp.h macros.h

## end   gnulib module uninorm/u8-normcmp-tests

## begin gnulib module uninorm/u8-normcoll-tests

TESTS += test-u8-normcoll
check_PROGRAMS += test-u8-normcoll
test_u8_normcoll_SOURCES = uninorm/test-u8-normcoll.c
test_u8_normcoll_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@

EXTRA_DIST += uninorm/test-u8-normcoll.c uninorm/test-u8-normcmp.h macros.h

## end   gnulib module uninorm/u8-normcoll-tests

## begin gnulib module unistd-tests

TESTS += test-unistd
check_PROGRAMS += test-unistd
EXTRA_DIST += test-unistd.c

## end   gnulib module unistd-tests

## begin gnulib module unistdio/u16-asnprintf-tests

TESTS += test-u16-asnprintf1
check_PROGRAMS += test-u16-asnprintf1
test_u16_asnprintf1_SOURCES = unistdio/test-u16-asnprintf1.c
test_u16_asnprintf1_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@
EXTRA_DIST += unistdio/test-u16-asnprintf1.c unistdio/test-u16-asnprintf1.h unistdio/test-u16-printf1.h macros.h

## end   gnulib module unistdio/u16-asnprintf-tests

## begin gnulib module unistdio/u16-vasnprintf-tests

TESTS += test-u16-vasnprintf1 unistdio/test-u16-vasnprintf2.sh unistdio/test-u16-vasnprintf3.sh
TESTS_ENVIRONMENT += LOCALE_FR='@LOCALE_FR@' LOCALE_FR_UTF8='@LOCALE_FR_UTF8@'
check_PROGRAMS += test-u16-vasnprintf1 test-u16-vasnprintf2 test-u16-vasnprintf3
test_u16_vasnprintf1_SOURCES = unistdio/test-u16-vasnprintf1.c
test_u16_vasnprintf1_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@
test_u16_vasnprintf2_SOURCES = unistdio/test-u16-vasnprintf2.c
test_u16_vasnprintf2_LDADD = $(LDADD) $(LIB_SETLOCALE) $(LIBUNISTRING) @LIBICONV@
test_u16_vasnprintf3_SOURCES = unistdio/test-u16-vasnprintf3.c
test_u16_vasnprintf3_LDADD = $(LDADD) $(LIB_SETLOCALE) $(LIBUNISTRING) @LIBICONV@
EXTRA_DIST += unistdio/test-u16-vasnprintf1.c unistdio/test-u16-asnprintf1.h unistdio/test-u16-printf1.h unistdio/test-u16-vasnprintf2.sh unistdio/test-u16-vasnprintf2.c unistdio/test-u16-vasnprintf3.sh unistdio/test-u16-vasnprintf3.c macros.h

## end   gnulib module unistdio/u16-vasnprintf-tests

## begin gnulib module unistdio/u16-vasprintf-tests

TESTS += test-u16-vasprintf1
check_PROGRAMS += test-u16-vasprintf1
test_u16_vasprintf1_SOURCES = unistdio/test-u16-vasprintf1.c
test_u16_vasprintf1_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@
EXTRA_DIST += unistdio/test-u16-vasprintf1.c unistdio/test-u16-printf1.h macros.h

## end   gnulib module unistdio/u16-vasprintf-tests

## begin gnulib module unistdio/u16-vsnprintf-tests

TESTS += test-u16-vsnprintf1
check_PROGRAMS += test-u16-vsnprintf1
test_u16_vsnprintf1_SOURCES = unistdio/test-u16-vsnprintf1.c
test_u16_vsnprintf1_LDADD = $(LDADD) $(LIBUNISTRING) @LIBINTL@ @LIBICONV@
EXTRA_DIST += unistdio/test-u16-vsnprintf1.c unistdio/test-u16-printf1.h macros.h

## end   gnulib module unistdio/u16-vsnprintf-tests

## begin gnulib module unistdio/u16-vsprintf-tests

TESTS += test-u16-vsprintf1
check_PROGRAMS += test-u16-vsprintf1
test_u16_vsprintf1_SOURCES = unistdio/test-u16-vsprintf1.c
test_u16_vsprintf1_LDADD = $(LDADD) $(LIBUNISTRING) @LIBINTL@ @LIBICONV@
EXTRA_DIST += unistdio/test-u16-vsprintf1.c unistdio/test-u16-printf1.h macros.h

## end   gnulib module unistdio/u16-vsprintf-tests

## begin gnulib module unistdio/u32-asnprintf-tests

TESTS += test-u32-asnprintf1
check_PROGRAMS += test-u32-asnprintf1
test_u32_asnprintf1_SOURCES = unistdio/test-u32-asnprintf1.c
test_u32_asnprintf1_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@
EXTRA_DIST += unistdio/test-u32-asnprintf1.c unistdio/test-u32-asnprintf1.h unistdio/test-u32-printf1.h macros.h

## end   gnulib module unistdio/u32-asnprintf-tests

## begin gnulib module unistdio/u32-vasnprintf-tests

TESTS += test-u32-vasnprintf1 unistdio/test-u32-vasnprintf2.sh unistdio/test-u32-vasnprintf3.sh
TESTS_ENVIRONMENT += LOCALE_FR='@LOCALE_FR@' LOCALE_FR_UTF8='@LOCALE_FR_UTF8@'
check_PROGRAMS += test-u32-vasnprintf1 test-u32-vasnprintf2 test-u32-vasnprintf3
test_u32_vasnprintf1_SOURCES = unistdio/test-u32-vasnprintf1.c
test_u32_vasnprintf1_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@
test_u32_vasnprintf2_SOURCES = unistdio/test-u32-vasnprintf2.c
test_u32_vasnprintf2_LDADD = $(LDADD) $(LIB_SETLOCALE) $(LIBUNISTRING) @LIBICONV@
test_u32_vasnprintf3_SOURCES = unistdio/test-u32-vasnprintf3.c
test_u32_vasnprintf3_LDADD = $(LDADD) $(LIB_SETLOCALE) $(LIBUNISTRING) @LIBICONV@
EXTRA_DIST += unistdio/test-u32-vasnprintf1.c unistdio/test-u32-asnprintf1.h unistdio/test-u32-printf1.h unistdio/test-u32-vasnprintf2.sh unistdio/test-u32-vasnprintf2.c unistdio/test-u32-vasnprintf3.sh unistdio/test-u32-vasnprintf3.c macros.h

## end   gnulib module unistdio/u32-vasnprintf-tests

## begin gnulib module unistdio/u32-vasprintf-tests

TESTS += test-u32-vasprintf1
check_PROGRAMS += test-u32-vasprintf1
test_u32_vasprintf1_SOURCES = unistdio/test-u32-vasprintf1.c
test_u32_vasprintf1_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@
EXTRA_DIST += unistdio/test-u32-vasprintf1.c unistdio/test-u32-printf1.h macros.h

## end   gnulib module unistdio/u32-vasprintf-tests

## begin gnulib module unistdio/u32-vsnprintf-tests

TESTS += test-u32-vsnprintf1
check_PROGRAMS += test-u32-vsnprintf1
test_u32_vsnprintf1_SOURCES = unistdio/test-u32-vsnprintf1.c
test_u32_vsnprintf1_LDADD = $(LDADD) $(LIBUNISTRING) @LIBINTL@ @LIBICONV@
EXTRA_DIST += unistdio/test-u32-vsnprintf1.c unistdio/test-u32-printf1.h macros.h

## end   gnulib module unistdio/u32-vsnprintf-tests

## begin gnulib module unistdio/u32-vsprintf-tests

TESTS += test-u32-vsprintf1
check_PROGRAMS += test-u32-vsprintf1
test_u32_vsprintf1_SOURCES = unistdio/test-u32-vsprintf1.c
test_u32_vsprintf1_LDADD = $(LDADD) $(LIBUNISTRING) @LIBINTL@ @LIBICONV@
EXTRA_DIST += unistdio/test-u32-vsprintf1.c unistdio/test-u32-printf1.h macros.h

## end   gnulib module unistdio/u32-vsprintf-tests

## begin gnulib module unistdio/u8-asnprintf-tests

TESTS += test-u8-asnprintf1
check_PROGRAMS += test-u8-asnprintf1
test_u8_asnprintf1_SOURCES = unistdio/test-u8-asnprintf1.c
test_u8_asnprintf1_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@
EXTRA_DIST += unistdio/test-u8-asnprintf1.c unistdio/test-u8-asnprintf1.h unistdio/test-u8-printf1.h macros.h

## end   gnulib module unistdio/u8-asnprintf-tests

## begin gnulib module unistdio/u8-vasnprintf-tests

TESTS += test-u8-vasnprintf1 unistdio/test-u8-vasnprintf2.sh unistdio/test-u8-vasnprintf3.sh
TESTS_ENVIRONMENT += LOCALE_FR='@LOCALE_FR@' LOCALE_FR_UTF8='@LOCALE_FR_UTF8@'
check_PROGRAMS += test-u8-vasnprintf1 test-u8-vasnprintf2 test-u8-vasnprintf3
test_u8_vasnprintf1_SOURCES = unistdio/test-u8-vasnprintf1.c
test_u8_vasnprintf1_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@
test_u8_vasnprintf2_SOURCES = unistdio/test-u8-vasnprintf2.c
test_u8_vasnprintf2_LDADD = $(LDADD) $(LIB_SETLOCALE) $(LIBUNISTRING) @LIBICONV@
test_u8_vasnprintf3_SOURCES = unistdio/test-u8-vasnprintf3.c
test_u8_vasnprintf3_LDADD = $(LDADD) $(LIB_SETLOCALE) $(LIBUNISTRING) @LIBICONV@
EXTRA_DIST += unistdio/test-u8-vasnprintf1.c unistdio/test-u8-asnprintf1.h unistdio/test-u8-printf1.h unistdio/test-u8-vasnprintf2.sh unistdio/test-u8-vasnprintf2.c unistdio/test-u8-vasnprintf3.sh unistdio/test-u8-vasnprintf3.c macros.h

## end   gnulib module unistdio/u8-vasnprintf-tests

## begin gnulib module unistdio/u8-vasprintf-tests

TESTS += test-u8-vasprintf1
check_PROGRAMS += test-u8-vasprintf1
test_u8_vasprintf1_SOURCES = unistdio/test-u8-vasprintf1.c
test_u8_vasprintf1_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@
EXTRA_DIST += unistdio/test-u8-vasprintf1.c unistdio/test-u8-printf1.h macros.h

## end   gnulib module unistdio/u8-vasprintf-tests

## begin gnulib module unistdio/u8-vsnprintf-tests

TESTS += test-u8-vsnprintf1
check_PROGRAMS += test-u8-vsnprintf1
test_u8_vsnprintf1_SOURCES = unistdio/test-u8-vsnprintf1.c
test_u8_vsnprintf1_LDADD = $(LDADD) $(LIBUNISTRING) @LIBINTL@ @LIBICONV@
EXTRA_DIST += unistdio/test-u8-vsnprintf1.c unistdio/test-u8-printf1.h macros.h

## end   gnulib module unistdio/u8-vsnprintf-tests

## begin gnulib module unistdio/u8-vsprintf-tests

TESTS += test-u8-vsprintf1
check_PROGRAMS += test-u8-vsprintf1
test_u8_vsprintf1_SOURCES = unistdio/test-u8-vsprintf1.c
test_u8_vsprintf1_LDADD = $(LDADD) $(LIBUNISTRING) @LIBINTL@ @LIBICONV@
EXTRA_DIST += unistdio/test-u8-vsprintf1.c unistdio/test-u8-printf1.h macros.h

## end   gnulib module unistdio/u8-vsprintf-tests

## begin gnulib module unistdio/ulc-asnprintf-tests

TESTS += test-ulc-asnprintf1
check_PROGRAMS += test-ulc-asnprintf1
test_ulc_asnprintf1_SOURCES = unistdio/test-ulc-asnprintf1.c
test_ulc_asnprintf1_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@ $(LIB_MBRTOWC)
EXTRA_DIST += unistdio/test-ulc-asnprintf1.c unistdio/test-ulc-asnprintf1.h unistdio/test-ulc-printf1.h macros.h

## end   gnulib module unistdio/ulc-asnprintf-tests

## begin gnulib module unistdio/ulc-vasnprintf-tests

TESTS += test-ulc-vasnprintf1 unistdio/test-ulc-vasnprintf2.sh unistdio/test-ulc-vasnprintf3.sh
TESTS_ENVIRONMENT += LOCALE_FR='@LOCALE_FR@' LOCALE_FR_UTF8='@LOCALE_FR_UTF8@'
check_PROGRAMS += test-ulc-vasnprintf1 test-ulc-vasnprintf2 test-ulc-vasnprintf3
test_ulc_vasnprintf1_SOURCES = unistdio/test-ulc-vasnprintf1.c
test_ulc_vasnprintf1_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@ $(LIB_MBRTOWC)
test_ulc_vasnprintf2_SOURCES = unistdio/test-ulc-vasnprintf2.c
test_ulc_vasnprintf2_LDADD = $(LDADD) $(LIB_SETLOCALE) $(LIBUNISTRING) @LIBICONV@ $(LIB_MBRTOWC)
test_ulc_vasnprintf3_SOURCES = unistdio/test-ulc-vasnprintf3.c
test_ulc_vasnprintf3_LDADD = $(LDADD) $(LIB_SETLOCALE) $(LIBUNISTRING) @LIBICONV@ $(LIB_MBRTOWC)
EXTRA_DIST += unistdio/test-ulc-vasnprintf1.c unistdio/test-ulc-asnprintf1.h unistdio/test-ulc-printf1.h unistdio/test-ulc-vasnprintf2.sh unistdio/test-ulc-vasnprintf2.c unistdio/test-ulc-vasnprintf3.sh unistdio/test-ulc-vasnprintf3.c macros.h

## end   gnulib module unistdio/ulc-vasnprintf-tests

## begin gnulib module unistdio/ulc-vasprintf-tests

TESTS += test-ulc-vasprintf1
check_PROGRAMS += test-ulc-vasprintf1
test_ulc_vasprintf1_SOURCES = unistdio/test-ulc-vasprintf1.c
test_ulc_vasprintf1_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@ $(LIB_MBRTOWC)
EXTRA_DIST += unistdio/test-ulc-vasprintf1.c unistdio/test-ulc-printf1.h macros.h

## end   gnulib module unistdio/ulc-vasprintf-tests

## begin gnulib module unistdio/ulc-vsnprintf-tests

TESTS += test-ulc-vsnprintf1
check_PROGRAMS += test-ulc-vsnprintf1
test_ulc_vsnprintf1_SOURCES = unistdio/test-ulc-vsnprintf1.c
test_ulc_vsnprintf1_LDADD = $(LDADD) $(LIBUNISTRING) @LIBINTL@ @LIBICONV@ $(LIB_MBRTOWC)
EXTRA_DIST += unistdio/test-ulc-vsnprintf1.c unistdio/test-ulc-printf1.h macros.h

## end   gnulib module unistdio/ulc-vsnprintf-tests

## begin gnulib module unistdio/ulc-vsprintf-tests

TESTS += test-ulc-vsprintf1
check_PROGRAMS += test-ulc-vsprintf1
test_ulc_vsprintf1_SOURCES = unistdio/test-ulc-vsprintf1.c
test_ulc_vsprintf1_LDADD = $(LDADD) $(LIBUNISTRING) @LIBINTL@ @LIBICONV@ $(LIB_MBRTOWC)
EXTRA_DIST += unistdio/test-ulc-vsprintf1.c unistdio/test-ulc-printf1.h macros.h

## end   gnulib module unistdio/ulc-vsprintf-tests

## begin gnulib module unistr/u16-check-tests

TESTS += test-u16-check
check_PROGRAMS += test-u16-check
test_u16_check_SOURCES = unistr/test-u16-check.c
test_u16_check_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-check.c macros.h

## end   gnulib module unistr/u16-check-tests

## begin gnulib module unistr/u16-chr-tests

TESTS += test-u16-chr
check_PROGRAMS += test-u16-chr
test_u16_chr_SOURCES = unistr/test-u16-chr.c
test_u16_chr_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-chr.c unistr/test-chr.h zerosize-ptr.h macros.h

## end   gnulib module unistr/u16-chr-tests

## begin gnulib module unistr/u16-cmp-tests

TESTS += test-u16-cmp
check_PROGRAMS += test-u16-cmp
test_u16_cmp_SOURCES = unistr/test-u16-cmp.c
test_u16_cmp_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-cmp.c unistr/test-cmp.h zerosize-ptr.h macros.h

## end   gnulib module unistr/u16-cmp-tests

## begin gnulib module unistr/u16-cmp2-tests

TESTS += test-u16-cmp2
check_PROGRAMS += test-u16-cmp2
test_u16_cmp2_SOURCES = unistr/test-u16-cmp2.c
test_u16_cmp2_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-cmp2.c unistr/test-cmp2.h macros.h

## end   gnulib module unistr/u16-cmp2-tests

## begin gnulib module unistr/u16-cpy-alloc-tests

TESTS += test-u16-cpy-alloc
check_PROGRAMS += test-u16-cpy-alloc
test_u16_cpy_alloc_SOURCES = unistr/test-u16-cpy-alloc.c
test_u16_cpy_alloc_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-cpy-alloc.c unistr/test-cpy-alloc.h macros.h

## end   gnulib module unistr/u16-cpy-alloc-tests

## begin gnulib module unistr/u16-cpy-tests

TESTS += test-u16-cpy
check_PROGRAMS += test-u16-cpy
test_u16_cpy_SOURCES = unistr/test-u16-cpy.c
test_u16_cpy_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-cpy.c unistr/test-cpy.h macros.h

## end   gnulib module unistr/u16-cpy-tests

## begin gnulib module unistr/u16-mblen-tests

TESTS += test-u16-mblen
check_PROGRAMS += test-u16-mblen
test_u16_mblen_SOURCES = unistr/test-u16-mblen.c
test_u16_mblen_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-mblen.c macros.h

## end   gnulib module unistr/u16-mblen-tests

## begin gnulib module unistr/u16-mbsnlen-tests

TESTS += test-u16-mbsnlen
check_PROGRAMS += test-u16-mbsnlen
test_u16_mbsnlen_SOURCES = unistr/test-u16-mbsnlen.c
test_u16_mbsnlen_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-mbsnlen.c macros.h

## end   gnulib module unistr/u16-mbsnlen-tests

## begin gnulib module unistr/u16-mbtouc-tests

TESTS += test-u16-mbtouc
check_PROGRAMS += test-u16-mbtouc
test_u16_mbtouc_SOURCES = unistr/test-u16-mbtouc.c
test_u16_mbtouc_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-mbtouc.c unistr/test-u16-mbtouc.h macros.h

## end   gnulib module unistr/u16-mbtouc-tests

## begin gnulib module unistr/u16-mbtouc-unsafe-tests

TESTS += test-u16-mbtouc-unsafe
check_PROGRAMS += test-u16-mbtouc-unsafe
test_u16_mbtouc_unsafe_SOURCES = unistr/test-u16-mbtouc-unsafe.c
test_u16_mbtouc_unsafe_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-mbtouc-unsafe.c unistr/test-u16-mbtouc.h macros.h

## end   gnulib module unistr/u16-mbtouc-unsafe-tests

## begin gnulib module unistr/u16-mbtoucr-tests

TESTS += test-u16-mbtoucr
check_PROGRAMS += test-u16-mbtoucr
test_u16_mbtoucr_SOURCES = unistr/test-u16-mbtoucr.c
test_u16_mbtoucr_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-mbtoucr.c macros.h

## end   gnulib module unistr/u16-mbtoucr-tests

## begin gnulib module unistr/u16-move-tests

TESTS += test-u16-move
check_PROGRAMS += test-u16-move
test_u16_move_SOURCES = unistr/test-u16-move.c
test_u16_move_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-move.c unistr/test-move.h macros.h

## end   gnulib module unistr/u16-move-tests

## begin gnulib module unistr/u16-next-tests

TESTS += test-u16-next
check_PROGRAMS += test-u16-next
test_u16_next_SOURCES = unistr/test-u16-next.c
test_u16_next_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-next.c macros.h

## end   gnulib module unistr/u16-next-tests

## begin gnulib module unistr/u16-prev-tests

TESTS += test-u16-prev
check_PROGRAMS += test-u16-prev
test_u16_prev_SOURCES = unistr/test-u16-prev.c
test_u16_prev_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-prev.c macros.h

## end   gnulib module unistr/u16-prev-tests

## begin gnulib module unistr/u16-set-tests

TESTS += test-u16-set
check_PROGRAMS += test-u16-set
test_u16_set_SOURCES = unistr/test-u16-set.c
test_u16_set_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-set.c unistr/test-set.h macros.h

## end   gnulib module unistr/u16-set-tests

## begin gnulib module unistr/u16-stpcpy-tests

TESTS += test-u16-stpcpy
check_PROGRAMS += test-u16-stpcpy
test_u16_stpcpy_SOURCES = unistr/test-u16-stpcpy.c
test_u16_stpcpy_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-stpcpy.c unistr/test-stpcpy.h macros.h

## end   gnulib module unistr/u16-stpcpy-tests

## begin gnulib module unistr/u16-stpncpy-tests

TESTS += test-u16-stpncpy
check_PROGRAMS += test-u16-stpncpy
test_u16_stpncpy_SOURCES = unistr/test-u16-stpncpy.c
test_u16_stpncpy_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-stpncpy.c unistr/test-stpncpy.h zerosize-ptr.h macros.h

## end   gnulib module unistr/u16-stpncpy-tests

## begin gnulib module unistr/u16-strcat-tests

TESTS += test-u16-strcat
check_PROGRAMS += test-u16-strcat
test_u16_strcat_SOURCES = unistr/test-u16-strcat.c
test_u16_strcat_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-strcat.c unistr/test-strcat.h macros.h

## end   gnulib module unistr/u16-strcat-tests

## begin gnulib module unistr/u16-strchr-tests

TESTS += test-u16-strchr
check_PROGRAMS += test-u16-strchr
test_u16_strchr_SOURCES = unistr/test-u16-strchr.c
test_u16_strchr_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-strchr.c unistr/test-strchr.h zerosize-ptr.h macros.h

## end   gnulib module unistr/u16-strchr-tests

## begin gnulib module unistr/u16-strcmp-tests

TESTS += test-u16-strcmp
check_PROGRAMS += test-u16-strcmp
test_u16_strcmp_SOURCES = unistr/test-u16-strcmp.c
test_u16_strcmp_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-strcmp.c unistr/test-u16-strcmp.h unistr/test-strcmp.h macros.h

## end   gnulib module unistr/u16-strcmp-tests

## begin gnulib module unistr/u16-strcoll-tests

TESTS += test-u16-strcoll
check_PROGRAMS += test-u16-strcoll
test_u16_strcoll_SOURCES = unistr/test-u16-strcoll.c
test_u16_strcoll_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@
EXTRA_DIST += unistr/test-u16-strcoll.c unistr/test-u16-strcmp.h unistr/test-strcmp.h macros.h

## end   gnulib module unistr/u16-strcoll-tests

## begin gnulib module unistr/u16-strcpy-tests

TESTS += test-u16-strcpy
check_PROGRAMS += test-u16-strcpy
test_u16_strcpy_SOURCES = unistr/test-u16-strcpy.c
test_u16_strcpy_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-strcpy.c unistr/test-strcpy.h macros.h

## end   gnulib module unistr/u16-strcpy-tests

## begin gnulib module unistr/u16-strdup-tests

TESTS += test-u16-strdup
check_PROGRAMS += test-u16-strdup
test_u16_strdup_SOURCES = unistr/test-u16-strdup.c
test_u16_strdup_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-strdup.c unistr/test-strdup.h macros.h

## end   gnulib module unistr/u16-strdup-tests

## begin gnulib module unistr/u16-strlen-tests

TESTS += test-u16-strlen
check_PROGRAMS += test-u16-strlen
test_u16_strlen_SOURCES = unistr/test-u16-strlen.c
test_u16_strlen_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-strlen.c macros.h

## end   gnulib module unistr/u16-strlen-tests

## begin gnulib module unistr/u16-strmblen-tests

TESTS += test-u16-strmblen
check_PROGRAMS += test-u16-strmblen
test_u16_strmblen_SOURCES = unistr/test-u16-strmblen.c
test_u16_strmblen_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-strmblen.c macros.h

## end   gnulib module unistr/u16-strmblen-tests

## begin gnulib module unistr/u16-strmbtouc-tests

TESTS += test-u16-strmbtouc
check_PROGRAMS += test-u16-strmbtouc
test_u16_strmbtouc_SOURCES = unistr/test-u16-strmbtouc.c
test_u16_strmbtouc_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-strmbtouc.c macros.h

## end   gnulib module unistr/u16-strmbtouc-tests

## begin gnulib module unistr/u16-strncat-tests

TESTS += test-u16-strncat
check_PROGRAMS += test-u16-strncat
test_u16_strncat_SOURCES = unistr/test-u16-strncat.c
test_u16_strncat_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-strncat.c unistr/test-strncat.h zerosize-ptr.h macros.h

## end   gnulib module unistr/u16-strncat-tests

## begin gnulib module unistr/u16-strncmp-tests

TESTS += test-u16-strncmp
check_PROGRAMS += test-u16-strncmp
test_u16_strncmp_SOURCES = unistr/test-u16-strncmp.c
test_u16_strncmp_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-strncmp.c unistr/test-strncmp.h macros.h

## end   gnulib module unistr/u16-strncmp-tests

## begin gnulib module unistr/u16-strncpy-tests

TESTS += test-u16-strncpy
check_PROGRAMS += test-u16-strncpy
test_u16_strncpy_SOURCES = unistr/test-u16-strncpy.c
test_u16_strncpy_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-strncpy.c unistr/test-strncpy.h zerosize-ptr.h macros.h

## end   gnulib module unistr/u16-strncpy-tests

## begin gnulib module unistr/u16-strnlen-tests

TESTS += test-u16-strnlen
check_PROGRAMS += test-u16-strnlen
test_u16_strnlen_SOURCES = unistr/test-u16-strnlen.c
test_u16_strnlen_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-strnlen.c unistr/test-strnlen.h zerosize-ptr.h macros.h

## end   gnulib module unistr/u16-strnlen-tests

## begin gnulib module unistr/u16-strstr-tests

TESTS += test-u16-strstr
check_PROGRAMS += test-u16-strstr
test_u16_strstr_SOURCES = unistr/test-u16-strstr.c
test_u16_strstr_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-strstr.c unistr/test-u-strstr.h macros.h

## end   gnulib module unistr/u16-strstr-tests

## begin gnulib module unistr/u16-strtok-tests

TESTS += test-u16-strtok
check_PROGRAMS += test-u16-strtok
test_u16_strtok_SOURCES = unistr/test-u16-strtok.c
test_u16_strtok_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-strtok.c unistr/test-u-strtok.h macros.h

## end   gnulib module unistr/u16-strtok-tests

## begin gnulib module unistr/u16-to-u32-tests

TESTS += test-u16-to-u32
check_PROGRAMS += test-u16-to-u32
test_u16_to_u32_SOURCES = unistr/test-u16-to-u32.c
test_u16_to_u32_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-to-u32.c macros.h

## end   gnulib module unistr/u16-to-u32-tests

## begin gnulib module unistr/u16-to-u8-tests

TESTS += test-u16-to-u8
check_PROGRAMS += test-u16-to-u8
test_u16_to_u8_SOURCES = unistr/test-u16-to-u8.c
test_u16_to_u8_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-to-u8.c macros.h

## end   gnulib module unistr/u16-to-u8-tests

## begin gnulib module unistr/u16-uctomb-tests

TESTS += test-u16-uctomb
check_PROGRAMS += test-u16-uctomb
test_u16_uctomb_SOURCES = unistr/test-u16-uctomb.c
test_u16_uctomb_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u16-uctomb.c macros.h

## end   gnulib module unistr/u16-uctomb-tests

## begin gnulib module unistr/u32-check-tests

TESTS += test-u32-check
check_PROGRAMS += test-u32-check
test_u32_check_SOURCES = unistr/test-u32-check.c
test_u32_check_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-check.c macros.h

## end   gnulib module unistr/u32-check-tests

## begin gnulib module unistr/u32-chr-tests

TESTS += test-u32-chr
check_PROGRAMS += test-u32-chr
test_u32_chr_SOURCES = unistr/test-u32-chr.c
test_u32_chr_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-chr.c unistr/test-chr.h zerosize-ptr.h macros.h

## end   gnulib module unistr/u32-chr-tests

## begin gnulib module unistr/u32-cmp-tests

TESTS += test-u32-cmp
check_PROGRAMS += test-u32-cmp
test_u32_cmp_SOURCES = unistr/test-u32-cmp.c
test_u32_cmp_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-cmp.c unistr/test-cmp.h zerosize-ptr.h macros.h

## end   gnulib module unistr/u32-cmp-tests

## begin gnulib module unistr/u32-cmp2-tests

TESTS += test-u32-cmp2
check_PROGRAMS += test-u32-cmp2
test_u32_cmp2_SOURCES = unistr/test-u32-cmp2.c
test_u32_cmp2_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-cmp2.c unistr/test-cmp2.h macros.h

## end   gnulib module unistr/u32-cmp2-tests

## begin gnulib module unistr/u32-cpy-alloc-tests

TESTS += test-u32-cpy-alloc
check_PROGRAMS += test-u32-cpy-alloc
test_u32_cpy_alloc_SOURCES = unistr/test-u32-cpy-alloc.c
test_u32_cpy_alloc_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-cpy-alloc.c unistr/test-cpy-alloc.h macros.h

## end   gnulib module unistr/u32-cpy-alloc-tests

## begin gnulib module unistr/u32-cpy-tests

TESTS += test-u32-cpy
check_PROGRAMS += test-u32-cpy
test_u32_cpy_SOURCES = unistr/test-u32-cpy.c
test_u32_cpy_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-cpy.c unistr/test-cpy.h macros.h

## end   gnulib module unistr/u32-cpy-tests

## begin gnulib module unistr/u32-mblen-tests

TESTS += test-u32-mblen
check_PROGRAMS += test-u32-mblen
test_u32_mblen_SOURCES = unistr/test-u32-mblen.c
test_u32_mblen_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-mblen.c macros.h

## end   gnulib module unistr/u32-mblen-tests

## begin gnulib module unistr/u32-mbsnlen-tests

TESTS += test-u32-mbsnlen
check_PROGRAMS += test-u32-mbsnlen
test_u32_mbsnlen_SOURCES = unistr/test-u32-mbsnlen.c
test_u32_mbsnlen_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-mbsnlen.c macros.h

## end   gnulib module unistr/u32-mbsnlen-tests

## begin gnulib module unistr/u32-mbtouc-tests

TESTS += test-u32-mbtouc
check_PROGRAMS += test-u32-mbtouc
test_u32_mbtouc_SOURCES = unistr/test-u32-mbtouc.c
test_u32_mbtouc_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-mbtouc.c unistr/test-u32-mbtouc.h macros.h

## end   gnulib module unistr/u32-mbtouc-tests

## begin gnulib module unistr/u32-mbtouc-unsafe-tests

TESTS += test-u32-mbtouc-unsafe
check_PROGRAMS += test-u32-mbtouc-unsafe
test_u32_mbtouc_unsafe_SOURCES = unistr/test-u32-mbtouc-unsafe.c
test_u32_mbtouc_unsafe_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-mbtouc-unsafe.c unistr/test-u32-mbtouc.h macros.h

## end   gnulib module unistr/u32-mbtouc-unsafe-tests

## begin gnulib module unistr/u32-mbtoucr-tests

TESTS += test-u32-mbtoucr
check_PROGRAMS += test-u32-mbtoucr
test_u32_mbtoucr_SOURCES = unistr/test-u32-mbtoucr.c
test_u32_mbtoucr_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-mbtoucr.c macros.h

## end   gnulib module unistr/u32-mbtoucr-tests

## begin gnulib module unistr/u32-move-tests

TESTS += test-u32-move
check_PROGRAMS += test-u32-move
test_u32_move_SOURCES = unistr/test-u32-move.c
test_u32_move_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-move.c unistr/test-move.h macros.h

## end   gnulib module unistr/u32-move-tests

## begin gnulib module unistr/u32-next-tests

TESTS += test-u32-next
check_PROGRAMS += test-u32-next
test_u32_next_SOURCES = unistr/test-u32-next.c
test_u32_next_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-next.c macros.h

## end   gnulib module unistr/u32-next-tests

## begin gnulib module unistr/u32-prev-tests

TESTS += test-u32-prev
check_PROGRAMS += test-u32-prev
test_u32_prev_SOURCES = unistr/test-u32-prev.c
test_u32_prev_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-prev.c macros.h

## end   gnulib module unistr/u32-prev-tests

## begin gnulib module unistr/u32-set-tests

TESTS += test-u32-set
check_PROGRAMS += test-u32-set
test_u32_set_SOURCES = unistr/test-u32-set.c
test_u32_set_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-set.c unistr/test-set.h macros.h

## end   gnulib module unistr/u32-set-tests

## begin gnulib module unistr/u32-stpcpy-tests

TESTS += test-u32-stpcpy
check_PROGRAMS += test-u32-stpcpy
test_u32_stpcpy_SOURCES = unistr/test-u32-stpcpy.c
test_u32_stpcpy_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-stpcpy.c unistr/test-stpcpy.h macros.h

## end   gnulib module unistr/u32-stpcpy-tests

## begin gnulib module unistr/u32-stpncpy-tests

TESTS += test-u32-stpncpy
check_PROGRAMS += test-u32-stpncpy
test_u32_stpncpy_SOURCES = unistr/test-u32-stpncpy.c
test_u32_stpncpy_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-stpncpy.c unistr/test-stpncpy.h zerosize-ptr.h macros.h

## end   gnulib module unistr/u32-stpncpy-tests

## begin gnulib module unistr/u32-strcat-tests

TESTS += test-u32-strcat
check_PROGRAMS += test-u32-strcat
test_u32_strcat_SOURCES = unistr/test-u32-strcat.c
test_u32_strcat_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-strcat.c unistr/test-strcat.h macros.h

## end   gnulib module unistr/u32-strcat-tests

## begin gnulib module unistr/u32-strchr-tests

TESTS += test-u32-strchr
check_PROGRAMS += test-u32-strchr
test_u32_strchr_SOURCES = unistr/test-u32-strchr.c
test_u32_strchr_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-strchr.c unistr/test-strchr.h zerosize-ptr.h macros.h

## end   gnulib module unistr/u32-strchr-tests

## begin gnulib module unistr/u32-strcmp-tests

TESTS += test-u32-strcmp
check_PROGRAMS += test-u32-strcmp
test_u32_strcmp_SOURCES = unistr/test-u32-strcmp.c
test_u32_strcmp_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-strcmp.c unistr/test-u32-strcmp.h unistr/test-strcmp.h macros.h

## end   gnulib module unistr/u32-strcmp-tests

## begin gnulib module unistr/u32-strcoll-tests

TESTS += test-u32-strcoll
check_PROGRAMS += test-u32-strcoll
test_u32_strcoll_SOURCES = unistr/test-u32-strcoll.c
test_u32_strcoll_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@
EXTRA_DIST += unistr/test-u32-strcoll.c unistr/test-u32-strcmp.h unistr/test-strcmp.h macros.h

## end   gnulib module unistr/u32-strcoll-tests

## begin gnulib module unistr/u32-strcpy-tests

TESTS += test-u32-strcpy
check_PROGRAMS += test-u32-strcpy
test_u32_strcpy_SOURCES = unistr/test-u32-strcpy.c
test_u32_strcpy_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-strcpy.c unistr/test-strcpy.h macros.h

## end   gnulib module unistr/u32-strcpy-tests

## begin gnulib module unistr/u32-strdup-tests

TESTS += test-u32-strdup
check_PROGRAMS += test-u32-strdup
test_u32_strdup_SOURCES = unistr/test-u32-strdup.c
test_u32_strdup_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-strdup.c unistr/test-strdup.h macros.h

## end   gnulib module unistr/u32-strdup-tests

## begin gnulib module unistr/u32-strlen-tests

TESTS += test-u32-strlen
check_PROGRAMS += test-u32-strlen
test_u32_strlen_SOURCES = unistr/test-u32-strlen.c
test_u32_strlen_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-strlen.c macros.h

## end   gnulib module unistr/u32-strlen-tests

## begin gnulib module unistr/u32-strmblen-tests

TESTS += test-u32-strmblen
check_PROGRAMS += test-u32-strmblen
test_u32_strmblen_SOURCES = unistr/test-u32-strmblen.c
test_u32_strmblen_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-strmblen.c macros.h

## end   gnulib module unistr/u32-strmblen-tests

## begin gnulib module unistr/u32-strmbtouc-tests

TESTS += test-u32-strmbtouc
check_PROGRAMS += test-u32-strmbtouc
test_u32_strmbtouc_SOURCES = unistr/test-u32-strmbtouc.c
test_u32_strmbtouc_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-strmbtouc.c macros.h

## end   gnulib module unistr/u32-strmbtouc-tests

## begin gnulib module unistr/u32-strncat-tests

TESTS += test-u32-strncat
check_PROGRAMS += test-u32-strncat
test_u32_strncat_SOURCES = unistr/test-u32-strncat.c
test_u32_strncat_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-strncat.c unistr/test-strncat.h zerosize-ptr.h macros.h

## end   gnulib module unistr/u32-strncat-tests

## begin gnulib module unistr/u32-strncmp-tests

TESTS += test-u32-strncmp
check_PROGRAMS += test-u32-strncmp
test_u32_strncmp_SOURCES = unistr/test-u32-strncmp.c
test_u32_strncmp_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-strncmp.c unistr/test-strncmp.h macros.h

## end   gnulib module unistr/u32-strncmp-tests

## begin gnulib module unistr/u32-strncpy-tests

TESTS += test-u32-strncpy
check_PROGRAMS += test-u32-strncpy
test_u32_strncpy_SOURCES = unistr/test-u32-strncpy.c
test_u32_strncpy_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-strncpy.c unistr/test-strncpy.h zerosize-ptr.h macros.h

## end   gnulib module unistr/u32-strncpy-tests

## begin gnulib module unistr/u32-strnlen-tests

TESTS += test-u32-strnlen
check_PROGRAMS += test-u32-strnlen
test_u32_strnlen_SOURCES = unistr/test-u32-strnlen.c
test_u32_strnlen_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-strnlen.c unistr/test-strnlen.h zerosize-ptr.h macros.h

## end   gnulib module unistr/u32-strnlen-tests

## begin gnulib module unistr/u32-strstr-tests

TESTS += test-u32-strstr
check_PROGRAMS += test-u32-strstr
test_u32_strstr_SOURCES = unistr/test-u32-strstr.c
test_u32_strstr_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-strstr.c unistr/test-u-strstr.h macros.h

## end   gnulib module unistr/u32-strstr-tests

## begin gnulib module unistr/u32-strtok-tests

TESTS += test-u32-strtok
check_PROGRAMS += test-u32-strtok
test_u32_strtok_SOURCES = unistr/test-u32-strtok.c
test_u32_strtok_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-strtok.c unistr/test-u-strtok.h macros.h

## end   gnulib module unistr/u32-strtok-tests

## begin gnulib module unistr/u32-to-u16-tests

TESTS += test-u32-to-u16
check_PROGRAMS += test-u32-to-u16
test_u32_to_u16_SOURCES = unistr/test-u32-to-u16.c
test_u32_to_u16_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-to-u16.c macros.h

## end   gnulib module unistr/u32-to-u16-tests

## begin gnulib module unistr/u32-to-u8-tests

TESTS += test-u32-to-u8
check_PROGRAMS += test-u32-to-u8
test_u32_to_u8_SOURCES = unistr/test-u32-to-u8.c
test_u32_to_u8_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-to-u8.c macros.h

## end   gnulib module unistr/u32-to-u8-tests

## begin gnulib module unistr/u32-uctomb-tests

TESTS += test-u32-uctomb
check_PROGRAMS += test-u32-uctomb
test_u32_uctomb_SOURCES = unistr/test-u32-uctomb.c
test_u32_uctomb_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u32-uctomb.c macros.h

## end   gnulib module unistr/u32-uctomb-tests

## begin gnulib module unistr/u8-check-tests

TESTS += test-u8-check
check_PROGRAMS += test-u8-check
test_u8_check_SOURCES = unistr/test-u8-check.c
test_u8_check_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-check.c macros.h

## end   gnulib module unistr/u8-check-tests

## begin gnulib module unistr/u8-chr-tests

TESTS += test-u8-chr
check_PROGRAMS += test-u8-chr
test_u8_chr_SOURCES = unistr/test-u8-chr.c
test_u8_chr_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-chr.c unistr/test-chr.h zerosize-ptr.h macros.h

## end   gnulib module unistr/u8-chr-tests

## begin gnulib module unistr/u8-cmp-tests

TESTS += test-u8-cmp
check_PROGRAMS += test-u8-cmp
test_u8_cmp_SOURCES = unistr/test-u8-cmp.c
test_u8_cmp_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-cmp.c unistr/test-cmp.h zerosize-ptr.h macros.h

## end   gnulib module unistr/u8-cmp-tests

## begin gnulib module unistr/u8-cmp2-tests

TESTS += test-u8-cmp2
check_PROGRAMS += test-u8-cmp2
test_u8_cmp2_SOURCES = unistr/test-u8-cmp2.c
test_u8_cmp2_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-cmp2.c unistr/test-cmp2.h macros.h

## end   gnulib module unistr/u8-cmp2-tests

## begin gnulib module unistr/u8-cpy-alloc-tests

TESTS += test-u8-cpy-alloc
check_PROGRAMS += test-u8-cpy-alloc
test_u8_cpy_alloc_SOURCES = unistr/test-u8-cpy-alloc.c
test_u8_cpy_alloc_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-cpy-alloc.c unistr/test-cpy-alloc.h macros.h

## end   gnulib module unistr/u8-cpy-alloc-tests

## begin gnulib module unistr/u8-cpy-tests

TESTS += test-u8-cpy
check_PROGRAMS += test-u8-cpy
test_u8_cpy_SOURCES = unistr/test-u8-cpy.c
test_u8_cpy_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-cpy.c unistr/test-cpy.h macros.h

## end   gnulib module unistr/u8-cpy-tests

## begin gnulib module unistr/u8-mblen-tests

TESTS += test-u8-mblen
check_PROGRAMS += test-u8-mblen
test_u8_mblen_SOURCES = unistr/test-u8-mblen.c
test_u8_mblen_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-mblen.c macros.h

## end   gnulib module unistr/u8-mblen-tests

## begin gnulib module unistr/u8-mbsnlen-tests

TESTS += test-u8-mbsnlen
check_PROGRAMS += test-u8-mbsnlen
test_u8_mbsnlen_SOURCES = unistr/test-u8-mbsnlen.c
test_u8_mbsnlen_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-mbsnlen.c macros.h

## end   gnulib module unistr/u8-mbsnlen-tests

## begin gnulib module unistr/u8-mbtouc-tests

TESTS += test-u8-mbtouc
check_PROGRAMS += test-u8-mbtouc
test_u8_mbtouc_SOURCES = unistr/test-u8-mbtouc.c
test_u8_mbtouc_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-mbtouc.c unistr/test-u8-mbtouc.h macros.h

## end   gnulib module unistr/u8-mbtouc-tests

## begin gnulib module unistr/u8-mbtouc-unsafe-tests

TESTS += test-u8-mbtouc-unsafe
check_PROGRAMS += test-u8-mbtouc-unsafe
test_u8_mbtouc_unsafe_SOURCES = unistr/test-u8-mbtouc-unsafe.c
test_u8_mbtouc_unsafe_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-mbtouc-unsafe.c unistr/test-u8-mbtouc.h macros.h

## end   gnulib module unistr/u8-mbtouc-unsafe-tests

## begin gnulib module unistr/u8-mbtoucr-tests

TESTS += test-u8-mbtoucr
check_PROGRAMS += test-u8-mbtoucr
test_u8_mbtoucr_SOURCES = unistr/test-u8-mbtoucr.c
test_u8_mbtoucr_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-mbtoucr.c macros.h

## end   gnulib module unistr/u8-mbtoucr-tests

## begin gnulib module unistr/u8-move-tests

TESTS += test-u8-move
check_PROGRAMS += test-u8-move
test_u8_move_SOURCES = unistr/test-u8-move.c
test_u8_move_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-move.c unistr/test-move.h macros.h

## end   gnulib module unistr/u8-move-tests

## begin gnulib module unistr/u8-next-tests

TESTS += test-u8-next
check_PROGRAMS += test-u8-next
test_u8_next_SOURCES = unistr/test-u8-next.c
test_u8_next_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-next.c macros.h

## end   gnulib module unistr/u8-next-tests

## begin gnulib module unistr/u8-prev-tests

TESTS += test-u8-prev
check_PROGRAMS += test-u8-prev
test_u8_prev_SOURCES = unistr/test-u8-prev.c
test_u8_prev_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-prev.c macros.h

## end   gnulib module unistr/u8-prev-tests

## begin gnulib module unistr/u8-set-tests

TESTS += test-u8-set
check_PROGRAMS += test-u8-set
test_u8_set_SOURCES = unistr/test-u8-set.c
test_u8_set_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-set.c unistr/test-set.h macros.h

## end   gnulib module unistr/u8-set-tests

## begin gnulib module unistr/u8-stpcpy-tests

TESTS += test-u8-stpcpy
check_PROGRAMS += test-u8-stpcpy
test_u8_stpcpy_SOURCES = unistr/test-u8-stpcpy.c
test_u8_stpcpy_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-stpcpy.c unistr/test-stpcpy.h macros.h

## end   gnulib module unistr/u8-stpcpy-tests

## begin gnulib module unistr/u8-stpncpy-tests

TESTS += test-u8-stpncpy
check_PROGRAMS += test-u8-stpncpy
test_u8_stpncpy_SOURCES = unistr/test-u8-stpncpy.c
test_u8_stpncpy_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-stpncpy.c unistr/test-stpncpy.h zerosize-ptr.h macros.h

## end   gnulib module unistr/u8-stpncpy-tests

## begin gnulib module unistr/u8-strcat-tests

TESTS += test-u8-strcat
check_PROGRAMS += test-u8-strcat
test_u8_strcat_SOURCES = unistr/test-u8-strcat.c
test_u8_strcat_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-strcat.c unistr/test-strcat.h macros.h

## end   gnulib module unistr/u8-strcat-tests

## begin gnulib module unistr/u8-strchr-tests

TESTS += test-u8-strchr
check_PROGRAMS += test-u8-strchr
test_u8_strchr_SOURCES = unistr/test-u8-strchr.c
test_u8_strchr_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-strchr.c unistr/test-strchr.h zerosize-ptr.h macros.h

## end   gnulib module unistr/u8-strchr-tests

## begin gnulib module unistr/u8-strcmp-tests

TESTS += test-u8-strcmp
check_PROGRAMS += test-u8-strcmp
test_u8_strcmp_SOURCES = unistr/test-u8-strcmp.c
test_u8_strcmp_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-strcmp.c unistr/test-u8-strcmp.h unistr/test-strcmp.h macros.h

## end   gnulib module unistr/u8-strcmp-tests

## begin gnulib module unistr/u8-strcoll-tests

TESTS += test-u8-strcoll
check_PROGRAMS += test-u8-strcoll
test_u8_strcoll_SOURCES = unistr/test-u8-strcoll.c
test_u8_strcoll_LDADD = $(LDADD) $(LIBUNISTRING) @LIBICONV@
EXTRA_DIST += unistr/test-u8-strcoll.c unistr/test-u8-strcmp.h unistr/test-strcmp.h macros.h

## end   gnulib module unistr/u8-strcoll-tests

## begin gnulib module unistr/u8-strcpy-tests

TESTS += test-u8-strcpy
check_PROGRAMS += test-u8-strcpy
test_u8_strcpy_SOURCES = unistr/test-u8-strcpy.c
test_u8_strcpy_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-strcpy.c unistr/test-strcpy.h macros.h

## end   gnulib module unistr/u8-strcpy-tests

## begin gnulib module unistr/u8-strdup-tests

TESTS += test-u8-strdup
check_PROGRAMS += test-u8-strdup
test_u8_strdup_SOURCES = unistr/test-u8-strdup.c
test_u8_strdup_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-strdup.c unistr/test-strdup.h macros.h

## end   gnulib module unistr/u8-strdup-tests

## begin gnulib module unistr/u8-strlen-tests

TESTS += test-u8-strlen
check_PROGRAMS += test-u8-strlen
test_u8_strlen_SOURCES = unistr/test-u8-strlen.c
test_u8_strlen_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-strlen.c macros.h

## end   gnulib module unistr/u8-strlen-tests

## begin gnulib module unistr/u8-strmblen-tests

TESTS += test-u8-strmblen
check_PROGRAMS += test-u8-strmblen
test_u8_strmblen_SOURCES = unistr/test-u8-strmblen.c
test_u8_strmblen_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-strmblen.c macros.h

## end   gnulib module unistr/u8-strmblen-tests

## begin gnulib module unistr/u8-strmbtouc-tests

TESTS += test-u8-strmbtouc
check_PROGRAMS += test-u8-strmbtouc
test_u8_strmbtouc_SOURCES = unistr/test-u8-strmbtouc.c
test_u8_strmbtouc_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-strmbtouc.c macros.h

## end   gnulib module unistr/u8-strmbtouc-tests

## begin gnulib module unistr/u8-strncat-tests

TESTS += test-u8-strncat
check_PROGRAMS += test-u8-strncat
test_u8_strncat_SOURCES = unistr/test-u8-strncat.c
test_u8_strncat_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-strncat.c unistr/test-strncat.h zerosize-ptr.h macros.h

## end   gnulib module unistr/u8-strncat-tests

## begin gnulib module unistr/u8-strncmp-tests

TESTS += test-u8-strncmp
check_PROGRAMS += test-u8-strncmp
test_u8_strncmp_SOURCES = unistr/test-u8-strncmp.c
test_u8_strncmp_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-strncmp.c unistr/test-strncmp.h macros.h

## end   gnulib module unistr/u8-strncmp-tests

## begin gnulib module unistr/u8-strncpy-tests

TESTS += test-u8-strncpy
check_PROGRAMS += test-u8-strncpy
test_u8_strncpy_SOURCES = unistr/test-u8-strncpy.c
test_u8_strncpy_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-strncpy.c unistr/test-strncpy.h zerosize-ptr.h macros.h

## end   gnulib module unistr/u8-strncpy-tests

## begin gnulib module unistr/u8-strnlen-tests

TESTS += test-u8-strnlen
check_PROGRAMS += test-u8-strnlen
test_u8_strnlen_SOURCES = unistr/test-u8-strnlen.c
test_u8_strnlen_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-strnlen.c unistr/test-strnlen.h zerosize-ptr.h macros.h

## end   gnulib module unistr/u8-strnlen-tests

## begin gnulib module unistr/u8-strstr-tests

TESTS += test-u8-strstr
check_PROGRAMS += test-u8-strstr
test_u8_strstr_SOURCES = unistr/test-u8-strstr.c
test_u8_strstr_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-strstr.c unistr/test-u-strstr.h macros.h

## end   gnulib module unistr/u8-strstr-tests

## begin gnulib module unistr/u8-strtok-tests

TESTS += test-u8-strtok
check_PROGRAMS += test-u8-strtok
test_u8_strtok_SOURCES = unistr/test-u8-strtok.c
test_u8_strtok_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-strtok.c unistr/test-u-strtok.h macros.h

## end   gnulib module unistr/u8-strtok-tests

## begin gnulib module unistr/u8-to-u16-tests

TESTS += test-u8-to-u16
check_PROGRAMS += test-u8-to-u16
test_u8_to_u16_SOURCES = unistr/test-u8-to-u16.c
test_u8_to_u16_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-to-u16.c macros.h

## end   gnulib module unistr/u8-to-u16-tests

## begin gnulib module unistr/u8-to-u32-tests

TESTS += test-u8-to-u32
check_PROGRAMS += test-u8-to-u32
test_u8_to_u32_SOURCES = unistr/test-u8-to-u32.c
test_u8_to_u32_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-to-u32.c macros.h

## end   gnulib module unistr/u8-to-u32-tests

## begin gnulib module unistr/u8-uctomb-tests

TESTS += test-u8-uctomb
check_PROGRAMS += test-u8-uctomb
test_u8_uctomb_SOURCES = unistr/test-u8-uctomb.c
test_u8_uctomb_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += unistr/test-u8-uctomb.c macros.h

## end   gnulib module unistr/u8-uctomb-tests

## begin gnulib module uniwbrk/u16-wordbreaks-tests

TESTS += test-u16-wordbreaks
check_PROGRAMS += test-u16-wordbreaks
test_u16_wordbreaks_SOURCES = uniwbrk/test-u16-wordbreaks.c
test_u16_wordbreaks_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += uniwbrk/test-u16-wordbreaks.c macros.h

## end   gnulib module uniwbrk/u16-wordbreaks-tests

## begin gnulib module uniwbrk/u32-wordbreaks-tests

TESTS += test-u32-wordbreaks uniwbrk/test-uc-wordbreaks.sh
check_PROGRAMS += test-u32-wordbreaks test-uc-wordbreaks
test_u32_wordbreaks_SOURCES = uniwbrk/test-u32-wordbreaks.c
test_u32_wordbreaks_LDADD = $(LDADD) $(LIBUNISTRING)
test_uc_wordbreaks_SOURCES = uniwbrk/test-uc-wordbreaks.c
test_uc_wordbreaks_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += uniwbrk/test-u32-wordbreaks.c uniwbrk/test-uc-wordbreaks.c uniwbrk/test-uc-wordbreaks.sh uniwbrk/WordBreakTest.txt macros.h

## end   gnulib module uniwbrk/u32-wordbreaks-tests

## begin gnulib module uniwbrk/u8-wordbreaks-tests

TESTS += test-u8-wordbreaks
check_PROGRAMS += test-u8-wordbreaks
test_u8_wordbreaks_SOURCES = uniwbrk/test-u8-wordbreaks.c
test_u8_wordbreaks_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += uniwbrk/test-u8-wordbreaks.c macros.h

## end   gnulib module uniwbrk/u8-wordbreaks-tests

## begin gnulib module uniwbrk/ulc-wordbreaks-tests

TESTS += uniwbrk/test-ulc-wordbreaks.sh
TESTS_ENVIRONMENT += LOCALE_FR='@LOCALE_FR@'
check_PROGRAMS += test-ulc-wordbreaks
test_ulc_wordbreaks_SOURCES = uniwbrk/test-ulc-wordbreaks.c
test_ulc_wordbreaks_LDADD = $(LDADD) $(LIB_SETLOCALE) $(LIBUNISTRING) @LIBICONV@

EXTRA_DIST += uniwbrk/test-ulc-wordbreaks.sh uniwbrk/test-ulc-wordbreaks.c macros.h

## end   gnulib module uniwbrk/ulc-wordbreaks-tests

## begin gnulib module uniwidth/u16-strwidth-tests

TESTS += test-u16-strwidth
check_PROGRAMS += test-u16-strwidth
test_u16_strwidth_SOURCES = uniwidth/test-u16-strwidth.c
test_u16_strwidth_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += uniwidth/test-u16-strwidth.c macros.h

## end   gnulib module uniwidth/u16-strwidth-tests

## begin gnulib module uniwidth/u16-width-tests

TESTS += test-u16-width
check_PROGRAMS += test-u16-width
test_u16_width_SOURCES = uniwidth/test-u16-width.c
test_u16_width_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += uniwidth/test-u16-width.c macros.h

## end   gnulib module uniwidth/u16-width-tests

## begin gnulib module uniwidth/u32-strwidth-tests

TESTS += test-u32-strwidth
check_PROGRAMS += test-u32-strwidth
test_u32_strwidth_SOURCES = uniwidth/test-u32-strwidth.c
test_u32_strwidth_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += uniwidth/test-u32-strwidth.c macros.h

## end   gnulib module uniwidth/u32-strwidth-tests

## begin gnulib module uniwidth/u32-width-tests

TESTS += test-u32-width
check_PROGRAMS += test-u32-width
test_u32_width_SOURCES = uniwidth/test-u32-width.c
test_u32_width_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += uniwidth/test-u32-width.c macros.h

## end   gnulib module uniwidth/u32-width-tests

## begin gnulib module uniwidth/u8-strwidth-tests

TESTS += test-u8-strwidth
check_PROGRAMS += test-u8-strwidth
test_u8_strwidth_SOURCES = uniwidth/test-u8-strwidth.c
test_u8_strwidth_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += uniwidth/test-u8-strwidth.c macros.h

## end   gnulib module uniwidth/u8-strwidth-tests

## begin gnulib module uniwidth/u8-width-tests

TESTS += test-u8-width
check_PROGRAMS += test-u8-width
test_u8_width_SOURCES = uniwidth/test-u8-width.c
test_u8_width_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += uniwidth/test-u8-width.c macros.h

## end   gnulib module uniwidth/u8-width-tests

## begin gnulib module uniwidth/width-tests

TESTS += test-uc_width uniwidth/test-uc_width2.sh
check_PROGRAMS += test-uc_width test-uc_width2
test_uc_width_SOURCES = uniwidth/test-uc_width.c
test_uc_width_LDADD = $(LDADD) $(LIBUNISTRING)
test_uc_width2_SOURCES = uniwidth/test-uc_width2.c
test_uc_width2_LDADD = $(LDADD) $(LIBUNISTRING)
EXTRA_DIST += uniwidth/test-uc_width.c uniwidth/test-uc_width2.c uniwidth/test-uc_width2.sh macros.h

## end   gnulib module uniwidth/width-tests

## begin gnulib module unsetenv

if GL_COND_OBJ_UNSETENV
libtests_a_SOURCES += unsetenv.c
endif

## end   gnulib module unsetenv

## begin gnulib module unsetenv-tests

TESTS += test-unsetenv
check_PROGRAMS += test-unsetenv
EXTRA_DIST += test-unsetenv.c signature.h macros.h

## end   gnulib module unsetenv-tests

## begin gnulib module usleep

if GL_COND_OBJ_USLEEP
libtests_a_SOURCES += usleep.c
endif

## end   gnulib module usleep

## begin gnulib module usleep-tests

TESTS += test-usleep
check_PROGRAMS += test-usleep
EXTRA_DIST += test-usleep.c signature.h macros.h

## end   gnulib module usleep-tests

## begin gnulib module verify


EXTRA_DIST += verify.h

## end   gnulib module verify

## begin gnulib module verify-tests

TESTS_ENVIRONMENT += MAKE='$(MAKE)'
TESTS += test-verify test-verify.sh
check_PROGRAMS += test-verify
# test-verify-try is never built, but test-verify.sh needs a rule to
# build test-verify-try.o.
EXTRA_PROGRAMS += test-verify-try

# This test expects compilation of test-verify-try.c to fail, and
# each time it fails, the makefile rule does not perform the usual
#  "mv -f $name.Tpo $name.po, so tell make clean to remove that file.
MOSTLYCLEANFILES += .deps/test-verify-try.Tpo
EXTRA_DIST += test-verify.c test-verify-try.c test-verify.sh

## end   gnulib module verify-tests

## begin gnulib module wchar-tests

TESTS += test-wchar
check_PROGRAMS += test-wchar
EXTRA_DIST += test-wchar.c

## end   gnulib module wchar-tests

## begin gnulib module wcrtomb

if GL_COND_OBJ_WCRTOMB
libtests_a_SOURCES += wcrtomb.c
endif

## end   gnulib module wcrtomb

## begin gnulib module wcrtomb-tests

TESTS += \
  test-wcrtomb.sh \
  test-wcrtomb-w32-1.sh test-wcrtomb-w32-2.sh test-wcrtomb-w32-3.sh \
  test-wcrtomb-w32-4.sh test-wcrtomb-w32-5.sh test-wcrtomb-w32-6.sh \
  test-wcrtomb-w32-7.sh
TESTS_ENVIRONMENT += \
  LOCALE_FR='@LOCALE_FR@' \
  LOCALE_FR_UTF8='@LOCALE_FR_UTF8@' \
  LOCALE_JA='@LOCALE_JA@' \
  LOCALE_ZH_CN='@LOCALE_ZH_CN@'
check_PROGRAMS += test-wcrtomb test-wcrtomb-w32
test_wcrtomb_LDADD = $(LDADD) $(LIB_SETLOCALE)
EXTRA_DIST += test-wcrtomb.sh test-wcrtomb.c test-wcrtomb-w32-1.sh test-wcrtomb-w32-2.sh test-wcrtomb-w32-3.sh test-wcrtomb-w32-4.sh test-wcrtomb-w32-5.sh test-wcrtomb-w32-6.sh test-wcrtomb-w32-7.sh test-wcrtomb-w32.c signature.h macros.h

## end   gnulib module wcrtomb-tests

## begin gnulib module wctob

if GL_COND_OBJ_WCTOB
libtests_a_SOURCES += wctob.c
endif

## end   gnulib module wctob

## begin gnulib module wctomb

if GL_COND_OBJ_WCTOMB
libtests_a_SOURCES += wctomb.c
endif

EXTRA_DIST += wctomb-impl.h

## end   gnulib module wctomb

## begin gnulib module wctype-h-tests

TESTS += test-wctype-h
check_PROGRAMS += test-wctype-h
EXTRA_DIST += test-wctype-h.c macros.h

## end   gnulib module wctype-h-tests

## begin gnulib module wcwidth-tests

TESTS += test-wcwidth
check_PROGRAMS += test-wcwidth
test_wcwidth_LDADD = $(LDADD) $(LIB_SETLOCALE) $(LIBUNISTRING)
EXTRA_DIST += test-wcwidth.c signature.h macros.h

## end   gnulib module wcwidth-tests

## begin gnulib module windows-thread

if GL_COND_OBJ_WINDOWS_THREAD
libtests_a_SOURCES += windows-thread.c
endif

EXTRA_DIST += windows-thread.h

## end   gnulib module windows-thread

## begin gnulib module windows-tls

if GL_COND_OBJ_WINDOWS_TLS
libtests_a_SOURCES += windows-tls.c
endif

EXTRA_DIST += windows-tls.h

## end   gnulib module windows-tls

## begin gnulib module xalloc

libtests_a_SOURCES += xmalloc.c

EXTRA_DIST += xalloc.h

## end   gnulib module xalloc

## begin gnulib module xalloc-die

libtests_a_SOURCES += xalloc-die.c

EXTRA_DIST += xalloc.h

## end   gnulib module xalloc-die

## begin gnulib module xalloc-die-tests

TESTS += test-xalloc-die.sh
check_PROGRAMS += test-xalloc-die
test_xalloc_die_LDADD = $(LDADD) @LIBINTL@
EXTRA_DIST += test-xalloc-die.c test-xalloc-die.sh

## end   gnulib module xalloc-die-tests

## begin gnulib module yield

libtests_a_SOURCES += glthread/yield.h

## end   gnulib module yield

all: all-notice
all-notice:
	@echo '## ---------------------------------------------------- ##'
	@echo '## ------------------- Gnulib tests ------------------- ##'
	@echo '## You can ignore compiler warnings in this directory.  ##'
	@echo '## ---------------------------------------------------- ##'

check-am: check-notice
check-notice:
	@echo '## ---------------------------------------------------------------------- ##'
	@echo '## ---------------------------- Gnulib tests ---------------------------- ##'
	@echo '## Please report test failures in this directory to <bug-gnulib@gnu.org>. ##'
	@echo '## ---------------------------------------------------------------------- ##'

# Clean up after Solaris cc.
clean-local:
	rm -rf SunWS_cache

mostlyclean-local: mostlyclean-generic
	@for dir in '' $(MOSTLYCLEANDIRS); do \
	  if test -n "$$dir" && test -d $$dir; then \
	    echo "rmdir $$dir"; rmdir $$dir; \
	  fi; \
	done; \
	:
