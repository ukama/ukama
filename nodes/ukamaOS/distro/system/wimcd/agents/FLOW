
Basic flow:
----------

1. Agent start and register itself with the WIMC on admin port.
   {/admin/agent/register/}
2. Upon registration, Agent specifiy its method it support and URL, as JSON.
   Similar to AgentCB struct in "wimc.h"
   {method: CA-SYNC, url: /a/b/c/}
3. Listen on the http connection for command.
4. Get the service provider SP_CB_URL, via WIMC.d. Wimc.d also send its own
   WIMC_CB_URL and any other info. (HTTP/JSON) on the listening http connection.
5. Send "HELLO" to the service provider in the SP_CB_URL, to ensure it can
   communicate. (HTTP/JSON)
6. Let WIMC.d know it can accept the request.
7. Register again for the updates on the {WIMC_CB_URL/register}
7. Execute processing the content with the service provider.
8. Update the WIMC.d of the status using WIMC_CB_URL.
   {WIMC_CB-URL/register, WIMC_CB-URL/status WIMC_CB-URL/     }
9. Once done, send de-register WIMC_CB-URL/de-register    

Agent methods: CA-sync, OCI-image, FTP, Test.


Interface:

WIMC.d

/admin/agent/
	{cmd: register, method: CA-SYNC, URL: /some/path}
	{cmd: un-register, method: CA-SYNC}
	
/contents/container/fetch/
			{name: container_name, tag: tag}
		   /stats/
{name: container_name, tag: tag, status: download, done: 30MB, total: 100MB} 	   
			
/stats/
