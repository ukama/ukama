// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	api "github.com/ukama/ukama/nodes/ukamaOS/distro/system/pcrf/pkg/api"

	mock "github.com/stretchr/testify/mock"
)

// NodedProvider is an autogenerated mock type for the NodedProvider type
type NodedProvider struct {
	mock.Mock
}

// GetNodeInfo provides a mock function with given fields:
func (_m *NodedProvider) GetNodeInfo() (*api.Spr, error) {
	ret := _m.Called()

	var r0 *api.Spr
	var r1 error
	if rf, ok := ret.Get(0).(func() (*api.Spr, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() *api.Spr); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*api.Spr)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewNodedProvider interface {
	mock.TestingT
	Cleanup(func())
}

// NewNodedProvider creates a new instance of NodedProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewNodedProvider(t mockConstructorTestingTNewNodedProvider) *NodedProvider {
	mock := &NodedProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
