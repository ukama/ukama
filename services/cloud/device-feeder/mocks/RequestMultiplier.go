// Code generated by mockery v2.12.0. DO NOT EDIT.

package mocks

import (
	testing "testing"

	mock "github.com/stretchr/testify/mock"
	pkg "github.com/ukama/ukama/services/cloud/device-feeder/pkg"
)

// RequestMultiplier is an autogenerated mock type for the RequestMultiplier type
type RequestMultiplier struct {
	mock.Mock
}

// Process provides a mock function with given fields: body
func (_m *RequestMultiplier) Process(body *pkg.DevicesUpdateRequest) error {
	ret := _m.Called(body)

	var r0 error
	if rf, ok := ret.Get(0).(func(*pkg.DevicesUpdateRequest) error); ok {
		r0 = rf(body)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewRequestMultiplier creates a new instance of RequestMultiplier. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewRequestMultiplier(t testing.TB) *RequestMultiplier {
	mock := &RequestMultiplier{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
