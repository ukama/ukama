version: "3.2"
services:
  postgresd:
    image: postgres:13.3
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=ThisIsUkamaXPass
    networks:
      - ukama-net
    volumes:
      - postgress-data:/var/lib/postgresql

  adminer:
    image: adminer
    restart: always
    ports:
      - 8090:8080
    networks:
      - ukama-net

  rabbitmq:
    # Web interface: http://localhost:15672
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - rabbitmq-data:/var/lib/rabbitmq/
        #- ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
        - ukama-net
  
  network:    
    build:
      context: ./network
      dockerfile: ./Dockerfile
    ports:
      - "9093:9090"
    environment:
      - DEBUGMODE=true
      - DB_HOST=postgresd
      - DB_PASSWORD=ThisIsUkamaXPass
      - DB_USER=postgres
      - BOOTSTRAP_URL=bootstrap.dev.ukama.com
      - BOOTSTRAP_AUTH0_CLIENTID=${BOOTSTRAP_AUTH0_CLIENTID}
      - BOOTSTRAP_AUTH0_SECRET=${BOOTSTRAP_AUTH0_SECRET}
      - BOOTSTRAP_AUTH0_HOST=${BOOTSTRAP_AUTH0_HOST}
      - DEBUG_DISABLEBOOTSTRAP=true
      - QUEUE_URI=amqp://guest:guest@rabbitmq:5672
    restart: always
    networks:
      - ukama-net
  
  org:
    build: ./org
    ports:
      - "9094:9090"
    environment:
      - DEBUGMODE=true
      - DB_HOST=postgresd
      - DB_PASSWORD=ThisIsUkamaXPass
      - DB_USER=postgres
      - BOOTSTRAP_URL=bootstrap.dev.ukama.com
      - BOOTSTRAP_AUTH0_CLIENTID=${BOOTSTRAP_AUTH0_CLIENTID}
      - BOOTSTRAP_AUTH0_SECRET=${BOOTSTRAP_AUTH0_SECRET}
      - BOOTSTRAP_AUTH0_HOST=${BOOTSTRAP_AUTH0_HOST}
      - DEBUG_DISABLEBOOTSTRAP=true
      - QUEUE_URI=amqp://guest:guest@rabbitmq:5672
    restart: always
    networks:
      - ukama-net

  node:
    build: ./node
    ports:
      - "9097:9090"
    environment:
      - DEBUGMODE=true
      - DB_HOST=postgresd
      - DB_PASSWORD=ThisIsUkamaXPass
      - DB_USER=postgres
      - BOOTSTRAP_URL=bootstrap.dev.ukama.com
      - BOOTSTRAP_AUTH0_CLIENTID=${BOOTSTRAP_AUTH0_CLIENTID}
      - BOOTSTRAP_AUTH0_SECRET=${BOOTSTRAP_AUTH0_SECRET}
      - BOOTSTRAP_AUTH0_HOST=${BOOTSTRAP_AUTH0_HOST}
      - DEBUG_DISABLEBOOTSTRAP=true
      - QUEUE_URI=amqp://guest:guest@rabbitmq:5672
    restart: always
    networks:
      - ukama-net
  
  hss:
    build: ./hss
    ports:
      - "9091:9090"
    environment:
      - DEBUGMODE=true
      - DB_HOST=postgresd
      - DB_PASSWORD=ThisIsUkamaXPass
      - DB_USER=postgres
      - QUEUE_URI=amqp://guest:guest@rabbitmq:5672
      - HSSHOST=hss:9091
    restart: always
    networks:
      - ukama-net

  users:
    build: ./users
    ports:
      - "9098:9090"
    environment:
      - DEBUGMODE=true
      - DB_HOST=postgresd
      - DB_PASSWORD=ThisIsUkamaXPass
      - DB_USER=postgres
      - QUEUE_URI=amqp://guest:guest@rabbitmq:5672
      - HSSHOST=hss:9091
    restart: always
    networks:
      - ukama-net  

  listener:
    build:
      dockerfile: ./Dockerfile.listener
      context: ./network
    restart: always
    networks:
      - ukama-net
    environment:
      - QUEUE=amqp://guest:guest@rabbitmq:5672

  device-feeder:
    build:
      dockerfile: ./Dockerfile
      context: ./device-feeder
    restart: always
    networks:
      - ukama-net
    environment:
      - DEBUGMODE=true
      - QUEUE_URI=amqp://guest:guest@rabbitmq:5672
      - REGISTRY_HOST=network:9090
      - NET_HOST=net:9090
      - DEVICE_PORT=8080
      - LISTENER_THREADS=1
      - RETRYPERIODSEC=30
  
  api-gateway:
    build:
      dockerfile: ./Dockerfile
      context: ./api-gateway
    restart: always
    ports:
      - "8080:8080"
    networks:
      - ukama-net
    environment:
      - DEBUGMODE=true
      - BYPASSAUTHMODE=true      
      # - CORS_ALLOWALLORIGINS=true
      # - CORS_ALLOWORIGINS=""

  net:
    container_name: 'net'
    build:
      context: ./net
      dockerfile: ./Dockerfile
    restart: always
    ports:
      - "8095:8080"
      - "9095:9090"
    networks:
      ukama-net:
         ipv4_address: 10.10.0.200
    environment:
      - DEBUGMODE=true
      - DNS_NODEDOMAIN=node.mesh
      - ETCDHOST=etcd:2379

  # coredns:
  #   image: coredns/coredns:latest
  #   command: -conf /etc/coredns/Corefile -dns.port 53
  #   container_name: coredns
  #   restart: on-failure
  #   expose:
  #     - '53'
  #     - '53/udp'
  #   ports:
  #     - '53:53'
  #     - '53:53/udp'
  #   volumes:
  #     - './net/DEBUG/Corefile:/etc/coredns/Corefile'
  #   networks:
  #     - ukama-net
  

  etcd:
    image: 'bitnami/etcd:latest'
    container_name: etcd
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
    ports:
      - 2379:2379
      - 2380:2380
    networks:
      - ukama-net
  

  device-gateway:
    container_name: device-gateway
    build:
      dockerfile: ./Dockerfile
      context: ./device-gateway
    restart: always
    networks:
      - ukama-net
    environment:
      - DEBUGMODE=true
      - SERVICES_HSS=hss:9091

  sim-manager:
    build: ./dummy-sim-manager
    ports:
      - "9096:9090"
    environment:
      - DEBUGMODE=true
      - ETCDHOST=etcd:2379
    restart: always
    networks:
      - ukama-net

networks:
  ukama-net:
      ipam:
        driver: default
        config:
            - subnet: 10.10.0.0/24

volumes:
  postgress-data:
  rabbitmq-data:
