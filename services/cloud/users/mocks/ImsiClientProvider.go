// Code generated by mockery v2.12.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	gen "github.com/ukama/ukamaX/cloud/hss/pb/gen"

	testing "testing"
)

// ImsiClientProvider is an autogenerated mock type for the ImsiClientProvider type
type ImsiClientProvider struct {
	mock.Mock
}

// GetClient provides a mock function with given fields:
func (_m *ImsiClientProvider) GetClient() (gen.ImsiServiceClient, error) {
	ret := _m.Called()

	var r0 gen.ImsiServiceClient
	if rf, ok := ret.Get(0).(func() gen.ImsiServiceClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(gen.ImsiServiceClient)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewImsiClientProvider creates a new instance of ImsiClientProvider. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewImsiClientProvider(t testing.TB) *ImsiClientProvider {
	mock := &ImsiClientProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
