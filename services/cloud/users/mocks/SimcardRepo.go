// Code generated by mockery v2.12.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	db "github.com/ukama/ukamaX/cloud/users/pkg/db"

	testing "testing"

	uuid "github.com/google/uuid"
)

// SimcardRepo is an autogenerated mock type for the SimcardRepo type
type SimcardRepo struct {
	mock.Mock
}

// Add provides a mock function with given fields: simcard
func (_m *SimcardRepo) Add(simcard *db.Simcard) error {
	ret := _m.Called(simcard)

	var r0 error
	if rf, ok := ret.Get(0).(func(*db.Simcard) error); ok {
		r0 = rf(simcard)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Delete provides a mock function with given fields: iccid
func (_m *SimcardRepo) Delete(iccid string) error {
	ret := _m.Called(iccid)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(iccid)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteByUser provides a mock function with given fields: userUuid
func (_m *SimcardRepo) DeleteByUser(userUuid uuid.UUID) error {
	ret := _m.Called(userUuid)

	var r0 error
	if rf, ok := ret.Get(0).(func(uuid.UUID) error); ok {
		r0 = rf(userUuid)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewSimcardRepo creates a new instance of SimcardRepo. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewSimcardRepo(t testing.TB) *SimcardRepo {
	mock := &SimcardRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
