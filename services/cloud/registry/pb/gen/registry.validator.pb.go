// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: registry.proto

package gen

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *AddOrgRequest) Validate() error {
	return nil
}
func (this *AddOrgResponse) Validate() error {
	if this.Org != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Org); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Org", err)
		}
	}
	return nil
}
func (this *AddNodeRequest) Validate() error {
	if this.Node != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Node); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Node", err)
		}
	}
	return nil
}
func (this *AddNodeResponse) Validate() error {
	if this.Node != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Node); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Node", err)
		}
	}
	return nil
}
func (this *GetOrgRequest) Validate() error {
	return nil
}
func (this *DeleteNodeRequest) Validate() error {
	return nil
}
func (this *DeleteNodeResponse) Validate() error {
	return nil
}
func (this *GetNodeRequest) Validate() error {
	return nil
}
func (this *GetNodeResponse) Validate() error {
	if this.Node != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Node); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Node", err)
		}
	}
	if this.Org != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Org); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Org", err)
		}
	}
	if this.Network != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Network); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Network", err)
		}
	}
	return nil
}
func (this *UpdateNodeStateRequest) Validate() error {
	return nil
}
func (this *UpdateNodeStateResponse) Validate() error {
	return nil
}
func (this *UpdateNodeRequest) Validate() error {
	return nil
}
func (this *UpdateNodeResponse) Validate() error {
	return nil
}
func (this *GetNodesRequest) Validate() error {
	return nil
}
func (this *GetNodesResponse) Validate() error {
	for _, item := range this.Nodes {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Nodes", err)
			}
		}
	}
	return nil
}
func (this *AddNetworkRequest) Validate() error {
	return nil
}
func (this *NetworkResponse) Validate() error {
	if this.Network != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Network); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Network", err)
		}
	}
	return nil
}
func (this *AttachNodesRequest) Validate() error {
	return nil
}
func (this *AttachNodesResponse) Validate() error {
	return nil
}
func (this *DetachNodeRequest) Validate() error {
	return nil
}
func (this *DetachNodeResponse) Validate() error {
	return nil
}
func (this *Network) Validate() error {
	return nil
}
func (this *Organization) Validate() error {
	return nil
}
func (this *Node) Validate() error {
	for _, item := range this.Attached {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Attached", err)
			}
		}
	}
	return nil
}
