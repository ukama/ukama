syntax = "proto3";

option go_package = "pb/gen";


package ukama.registry.v1;

service RegistryService {
    rpc AddOrg(AddOrgRequest) returns (AddOrgResponse);
    rpc GetOrg(GetOrgRequest) returns (Organization);
    rpc AddNetwork(AddNetworkRequest) returns (NetworkResponse);
    // list all orgs and networks in the registry
    rpc List(ListRequest) returns (ListResponse);

    rpc AddNode(AddNodeRequest) returns (AddNodeResponse);
    rpc DeleteNode(DeleteNodeRequest) returns (DeleteNodeResponse);    
    rpc GetNodes(GetNodesRequest) returns (GetNodesResponse);
}

message AddOrgRequest {
    string name = 1;
    string owner = 2;
}

message AddOrgResponse{
    Organization org = 1;
}

message AddNodeRequest{
    Node node = 1;
    string  orgName = 2;
    string network = 3;
}

message AddNodeResponse{
    Node node = 1;
}

message GetOrgRequest{
    string name = 1;
}

message DeleteNodeRequest{
    string nodeId = 1;
}

message DeleteNodeResponse{
    string nodeId = 1;
}

message GetNodesRequest{    
    string orgName = 1 ;
}

message GetNodesResponse{
    string orgName = 1;
    repeated Node nodes = 2;
}

message AddNetworkRequest{
    string name = 1;
    string orgName = 2;
}
message NetworkResponse{
    Network network = 1;
}

message AttachNodesRequest {
    string parentNodeId = 1;
    repeated string  attachedNodeIds = 2;
}

message AttachNodesResponse {

}

message DetachNodeRequest{
    string detachedNodeId = 2;
}

message DetachNodeResponse {

}

message Network {
    string name = 1;
}

message Organization {
    string name = 1;
    string owner = 3;
}

message Node {
    string nodeId = 1;
    NodeState state = 4;
    NodeType type = 5;
    string name = 6;
    repeated Node attached = 7;
}

message ListRequest {
}

message ListResponse{
    message Network {
        string name = 1;
        map<string, uint32> numberOfNodes = 2;
    }

    message Org {
        string name = 1;
        repeated Network networks = 2;
    }


    repeated Org orgs = 1;
}

