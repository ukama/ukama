version: "3.3"
services:
  etcd:
    image: 'bitnami/etcd:latest'
    container_name: etcd
    networks:
      - ukama-net
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
    ports:
      - 2379:2379
      - 2380:2380

  rabbitmq:
    # Web interface: http://localhost:15672
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq/
      #- ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - ukama-net

  net:
    container_name: 'net'
    build:    
      context: .
    restart: always
    ports:
      - "8080:8080"
      - "9090:9090"
    networks:
      ukama-net:
         ipv4_address: 10.10.0.5
    environment:
      - DEBUGMODE=true
      - DNS_NODEDOMAIN=node.mesh
      - ETCDHOST=etcd:2379

  net-listener:
    build:
      context: .
      dockerfile: Dockerfile.listener
    restart: always
    environment:
      - DEBUGMODE=true
      - QUEUE_URI=amqp://guest:guest@10.10.0.10:5672

  coredns:
    image: coredns/coredns:latest
    command: -conf /etc/coredns/Corefile -dns.port 53
    container_name: coredns
    restart: on-failure
    networks:
      - ukama-net
    expose:
      - '53'
      - '53/udp'
    ports:
      - '53:53'
      - '53:53/udp'
    volumes:
      - './DEBUG/Corefile:/etc/coredns/Corefile'

  bastion:
    image: nicolaka/netshoot:latest
    command: tail -F anything
    container_name: bastion
    restart: always
 
networks:
  ukama-net:
      ipam:
        driver: default
        config:
            - subnet: 10.10.0.0/24

volumes:
  rabbitmq-data:
