// Code generated by mockery v2.12.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// QPub is an autogenerated mock type for the QPub type
type QPub struct {
	mock.Mock
}

// Publish provides a mock function with given fields: payload, routingKey
func (_m *QPub) Publish(payload interface{}, routingKey string) error {
	ret := _m.Called(payload, routingKey)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}, string) error); ok {
		r0 = rf(payload, routingKey)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewQPub creates a new instance of QPub. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewQPub(t testing.TB) *QPub {
	mock := &QPub{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
